#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_proportion/beta_proportion_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_447;

typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_400> AgradDistributionsBetaProportion_ffd_400;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_401> AgradDistributionsBetaProportion_ffd_401;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_402> AgradDistributionsBetaProportion_ffd_402;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_403> AgradDistributionsBetaProportion_ffd_403;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_404> AgradDistributionsBetaProportion_ffd_404;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_405> AgradDistributionsBetaProportion_ffd_405;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_406> AgradDistributionsBetaProportion_ffd_406;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_407> AgradDistributionsBetaProportion_ffd_407;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_408> AgradDistributionsBetaProportion_ffd_408;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_409> AgradDistributionsBetaProportion_ffd_409;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_410> AgradDistributionsBetaProportion_ffd_410;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_411> AgradDistributionsBetaProportion_ffd_411;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_412> AgradDistributionsBetaProportion_ffd_412;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_413> AgradDistributionsBetaProportion_ffd_413;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_414> AgradDistributionsBetaProportion_ffd_414;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_415> AgradDistributionsBetaProportion_ffd_415;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_416> AgradDistributionsBetaProportion_ffd_416;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_417> AgradDistributionsBetaProportion_ffd_417;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_418> AgradDistributionsBetaProportion_ffd_418;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_419> AgradDistributionsBetaProportion_ffd_419;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_420> AgradDistributionsBetaProportion_ffd_420;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_421> AgradDistributionsBetaProportion_ffd_421;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_422> AgradDistributionsBetaProportion_ffd_422;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_423> AgradDistributionsBetaProportion_ffd_423;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_424> AgradDistributionsBetaProportion_ffd_424;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_425> AgradDistributionsBetaProportion_ffd_425;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_426> AgradDistributionsBetaProportion_ffd_426;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_427> AgradDistributionsBetaProportion_ffd_427;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_428> AgradDistributionsBetaProportion_ffd_428;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_429> AgradDistributionsBetaProportion_ffd_429;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_430> AgradDistributionsBetaProportion_ffd_430;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_431> AgradDistributionsBetaProportion_ffd_431;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_432> AgradDistributionsBetaProportion_ffd_432;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_433> AgradDistributionsBetaProportion_ffd_433;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_434> AgradDistributionsBetaProportion_ffd_434;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_435> AgradDistributionsBetaProportion_ffd_435;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_436> AgradDistributionsBetaProportion_ffd_436;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_437> AgradDistributionsBetaProportion_ffd_437;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_438> AgradDistributionsBetaProportion_ffd_438;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_439> AgradDistributionsBetaProportion_ffd_439;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_440> AgradDistributionsBetaProportion_ffd_440;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_441> AgradDistributionsBetaProportion_ffd_441;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_442> AgradDistributionsBetaProportion_ffd_442;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_443> AgradDistributionsBetaProportion_ffd_443;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_444> AgradDistributionsBetaProportion_ffd_444;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_445> AgradDistributionsBetaProportion_ffd_445;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_446> AgradDistributionsBetaProportion_ffd_446;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffd_447> AgradDistributionsBetaProportion_ffd_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_400, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_401, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_402, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_403, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_404, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_405, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_406, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_407, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_408, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_409, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_410, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_411, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_412, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_413, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_414, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_415, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_416, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_417, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_418, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_419, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_420, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_421, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_422, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_423, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_424, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_425, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_426, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_427, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_428, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_429, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_430, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_431, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_432, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_433, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_434, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_435, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_436, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_437, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_438, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_439, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_440, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_441, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_442, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_443, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_444, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_445, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_446, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffd_447, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffd_447);

