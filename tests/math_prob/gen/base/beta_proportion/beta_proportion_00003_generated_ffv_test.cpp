#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_proportion/beta_proportion_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffv_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffv_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffv_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffv_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffv_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffv_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_399;

typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_300> AgradDistributionsBetaProportion_ffv_300;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_301> AgradDistributionsBetaProportion_ffv_301;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_302> AgradDistributionsBetaProportion_ffv_302;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_303> AgradDistributionsBetaProportion_ffv_303;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_304> AgradDistributionsBetaProportion_ffv_304;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_305> AgradDistributionsBetaProportion_ffv_305;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_306> AgradDistributionsBetaProportion_ffv_306;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_307> AgradDistributionsBetaProportion_ffv_307;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_308> AgradDistributionsBetaProportion_ffv_308;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_309> AgradDistributionsBetaProportion_ffv_309;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_310> AgradDistributionsBetaProportion_ffv_310;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_311> AgradDistributionsBetaProportion_ffv_311;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_312> AgradDistributionsBetaProportion_ffv_312;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_313> AgradDistributionsBetaProportion_ffv_313;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_314> AgradDistributionsBetaProportion_ffv_314;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_315> AgradDistributionsBetaProportion_ffv_315;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_316> AgradDistributionsBetaProportion_ffv_316;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_317> AgradDistributionsBetaProportion_ffv_317;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_318> AgradDistributionsBetaProportion_ffv_318;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_319> AgradDistributionsBetaProportion_ffv_319;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_320> AgradDistributionsBetaProportion_ffv_320;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_321> AgradDistributionsBetaProportion_ffv_321;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_322> AgradDistributionsBetaProportion_ffv_322;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_323> AgradDistributionsBetaProportion_ffv_323;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_324> AgradDistributionsBetaProportion_ffv_324;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_325> AgradDistributionsBetaProportion_ffv_325;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_326> AgradDistributionsBetaProportion_ffv_326;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_327> AgradDistributionsBetaProportion_ffv_327;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_328> AgradDistributionsBetaProportion_ffv_328;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_329> AgradDistributionsBetaProportion_ffv_329;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_330> AgradDistributionsBetaProportion_ffv_330;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_331> AgradDistributionsBetaProportion_ffv_331;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_332> AgradDistributionsBetaProportion_ffv_332;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_333> AgradDistributionsBetaProportion_ffv_333;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_334> AgradDistributionsBetaProportion_ffv_334;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_335> AgradDistributionsBetaProportion_ffv_335;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_336> AgradDistributionsBetaProportion_ffv_336;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_337> AgradDistributionsBetaProportion_ffv_337;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_338> AgradDistributionsBetaProportion_ffv_338;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_339> AgradDistributionsBetaProportion_ffv_339;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_340> AgradDistributionsBetaProportion_ffv_340;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_341> AgradDistributionsBetaProportion_ffv_341;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_342> AgradDistributionsBetaProportion_ffv_342;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_343> AgradDistributionsBetaProportion_ffv_343;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_344> AgradDistributionsBetaProportion_ffv_344;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_345> AgradDistributionsBetaProportion_ffv_345;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_346> AgradDistributionsBetaProportion_ffv_346;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_347> AgradDistributionsBetaProportion_ffv_347;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_348> AgradDistributionsBetaProportion_ffv_348;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_349> AgradDistributionsBetaProportion_ffv_349;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_350> AgradDistributionsBetaProportion_ffv_350;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_351> AgradDistributionsBetaProportion_ffv_351;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_352> AgradDistributionsBetaProportion_ffv_352;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_353> AgradDistributionsBetaProportion_ffv_353;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_354> AgradDistributionsBetaProportion_ffv_354;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_355> AgradDistributionsBetaProportion_ffv_355;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_356> AgradDistributionsBetaProportion_ffv_356;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_357> AgradDistributionsBetaProportion_ffv_357;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_358> AgradDistributionsBetaProportion_ffv_358;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_359> AgradDistributionsBetaProportion_ffv_359;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_360> AgradDistributionsBetaProportion_ffv_360;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_361> AgradDistributionsBetaProportion_ffv_361;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_362> AgradDistributionsBetaProportion_ffv_362;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_363> AgradDistributionsBetaProportion_ffv_363;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_364> AgradDistributionsBetaProportion_ffv_364;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_365> AgradDistributionsBetaProportion_ffv_365;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_366> AgradDistributionsBetaProportion_ffv_366;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_367> AgradDistributionsBetaProportion_ffv_367;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_368> AgradDistributionsBetaProportion_ffv_368;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_369> AgradDistributionsBetaProportion_ffv_369;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_370> AgradDistributionsBetaProportion_ffv_370;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_371> AgradDistributionsBetaProportion_ffv_371;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_372> AgradDistributionsBetaProportion_ffv_372;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_373> AgradDistributionsBetaProportion_ffv_373;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_374> AgradDistributionsBetaProportion_ffv_374;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_375> AgradDistributionsBetaProportion_ffv_375;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_376> AgradDistributionsBetaProportion_ffv_376;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_377> AgradDistributionsBetaProportion_ffv_377;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_378> AgradDistributionsBetaProportion_ffv_378;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_379> AgradDistributionsBetaProportion_ffv_379;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_380> AgradDistributionsBetaProportion_ffv_380;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_381> AgradDistributionsBetaProportion_ffv_381;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_382> AgradDistributionsBetaProportion_ffv_382;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_383> AgradDistributionsBetaProportion_ffv_383;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_384> AgradDistributionsBetaProportion_ffv_384;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_385> AgradDistributionsBetaProportion_ffv_385;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_386> AgradDistributionsBetaProportion_ffv_386;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_387> AgradDistributionsBetaProportion_ffv_387;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_388> AgradDistributionsBetaProportion_ffv_388;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_389> AgradDistributionsBetaProportion_ffv_389;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_390> AgradDistributionsBetaProportion_ffv_390;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_391> AgradDistributionsBetaProportion_ffv_391;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_392> AgradDistributionsBetaProportion_ffv_392;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_393> AgradDistributionsBetaProportion_ffv_393;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_394> AgradDistributionsBetaProportion_ffv_394;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_395> AgradDistributionsBetaProportion_ffv_395;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_396> AgradDistributionsBetaProportion_ffv_396;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_397> AgradDistributionsBetaProportion_ffv_397;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_398> AgradDistributionsBetaProportion_ffv_398;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_ffv_399> AgradDistributionsBetaProportion_ffv_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_300, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_301, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_302, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_303, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_304, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_305, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_306, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_307, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_308, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_309, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_310, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_311, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_312, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_313, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_314, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_315, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_316, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_317, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_318, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_319, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_320, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_321, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_322, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_323, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_324, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_325, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_326, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_327, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_328, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_329, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_330, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_331, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_332, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_333, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_334, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_335, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_336, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_337, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_338, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_339, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_340, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_341, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_342, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_343, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_344, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_345, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_346, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_347, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_348, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_349, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_350, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_351, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_352, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_353, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_354, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_355, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_356, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_357, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_358, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_359, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_360, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_361, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_362, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_363, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_364, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_365, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_366, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_367, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_368, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_369, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_370, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_371, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_372, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_373, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_374, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_375, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_376, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_377, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_378, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_379, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_380, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_381, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_382, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_383, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_384, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_385, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_386, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_387, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_388, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_389, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_390, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_391, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_392, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_393, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_394, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_395, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_396, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_397, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_398, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_ffv_399, AgradDistributionTestFixture, AgradDistributionsBetaProportion_ffv_399);

