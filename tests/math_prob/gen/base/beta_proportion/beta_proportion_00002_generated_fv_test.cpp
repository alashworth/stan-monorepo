#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_proportion/beta_proportion_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty, empty> type_fv_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_447;

typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_400> AgradDistributionsBetaProportion_fv_400;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_401> AgradDistributionsBetaProportion_fv_401;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_402> AgradDistributionsBetaProportion_fv_402;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_403> AgradDistributionsBetaProportion_fv_403;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_404> AgradDistributionsBetaProportion_fv_404;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_405> AgradDistributionsBetaProportion_fv_405;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_406> AgradDistributionsBetaProportion_fv_406;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_407> AgradDistributionsBetaProportion_fv_407;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_408> AgradDistributionsBetaProportion_fv_408;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_409> AgradDistributionsBetaProportion_fv_409;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_410> AgradDistributionsBetaProportion_fv_410;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_411> AgradDistributionsBetaProportion_fv_411;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_412> AgradDistributionsBetaProportion_fv_412;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_413> AgradDistributionsBetaProportion_fv_413;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_414> AgradDistributionsBetaProportion_fv_414;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_415> AgradDistributionsBetaProportion_fv_415;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_416> AgradDistributionsBetaProportion_fv_416;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_417> AgradDistributionsBetaProportion_fv_417;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_418> AgradDistributionsBetaProportion_fv_418;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_419> AgradDistributionsBetaProportion_fv_419;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_420> AgradDistributionsBetaProportion_fv_420;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_421> AgradDistributionsBetaProportion_fv_421;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_422> AgradDistributionsBetaProportion_fv_422;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_423> AgradDistributionsBetaProportion_fv_423;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_424> AgradDistributionsBetaProportion_fv_424;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_425> AgradDistributionsBetaProportion_fv_425;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_426> AgradDistributionsBetaProportion_fv_426;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_427> AgradDistributionsBetaProportion_fv_427;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_428> AgradDistributionsBetaProportion_fv_428;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_429> AgradDistributionsBetaProportion_fv_429;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_430> AgradDistributionsBetaProportion_fv_430;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_431> AgradDistributionsBetaProportion_fv_431;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_432> AgradDistributionsBetaProportion_fv_432;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_433> AgradDistributionsBetaProportion_fv_433;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_434> AgradDistributionsBetaProportion_fv_434;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_435> AgradDistributionsBetaProportion_fv_435;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_436> AgradDistributionsBetaProportion_fv_436;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_437> AgradDistributionsBetaProportion_fv_437;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_438> AgradDistributionsBetaProportion_fv_438;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_439> AgradDistributionsBetaProportion_fv_439;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_440> AgradDistributionsBetaProportion_fv_440;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_441> AgradDistributionsBetaProportion_fv_441;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_442> AgradDistributionsBetaProportion_fv_442;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_443> AgradDistributionsBetaProportion_fv_443;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_444> AgradDistributionsBetaProportion_fv_444;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_445> AgradDistributionsBetaProportion_fv_445;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_446> AgradDistributionsBetaProportion_fv_446;
typedef boost::mpl::vector<AgradDistributionsBetaProportion, type_fv_447> AgradDistributionsBetaProportion_fv_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_400, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_401, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_402, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_403, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_404, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_405, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_406, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_407, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_408, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_409, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_410, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_411, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_412, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_413, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_414, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_415, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_416, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_417, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_418, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_419, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_420, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_421, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_422, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_423, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_424, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_425, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_426, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_427, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_428, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_429, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_430, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_431, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_432, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_433, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_434, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_435, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_436, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_437, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_438, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_439, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_440, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_441, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_442, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_443, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_444, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_445, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_446, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaProportion_fv_447, AgradDistributionTestFixture, AgradDistributionsBetaProportion_fv_447);

