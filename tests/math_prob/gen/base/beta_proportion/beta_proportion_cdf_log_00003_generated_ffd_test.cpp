#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_proportion/beta_proportion_cdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_300> AgradCdfLogBetaProportion_ffd_300;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_301> AgradCdfLogBetaProportion_ffd_301;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_302> AgradCdfLogBetaProportion_ffd_302;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_303> AgradCdfLogBetaProportion_ffd_303;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_304> AgradCdfLogBetaProportion_ffd_304;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_305> AgradCdfLogBetaProportion_ffd_305;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_306> AgradCdfLogBetaProportion_ffd_306;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_307> AgradCdfLogBetaProportion_ffd_307;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_308> AgradCdfLogBetaProportion_ffd_308;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_309> AgradCdfLogBetaProportion_ffd_309;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_310> AgradCdfLogBetaProportion_ffd_310;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_311> AgradCdfLogBetaProportion_ffd_311;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_312> AgradCdfLogBetaProportion_ffd_312;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_313> AgradCdfLogBetaProportion_ffd_313;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_314> AgradCdfLogBetaProportion_ffd_314;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_315> AgradCdfLogBetaProportion_ffd_315;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_316> AgradCdfLogBetaProportion_ffd_316;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_317> AgradCdfLogBetaProportion_ffd_317;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_318> AgradCdfLogBetaProportion_ffd_318;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_319> AgradCdfLogBetaProportion_ffd_319;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_320> AgradCdfLogBetaProportion_ffd_320;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_321> AgradCdfLogBetaProportion_ffd_321;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_322> AgradCdfLogBetaProportion_ffd_322;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_323> AgradCdfLogBetaProportion_ffd_323;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_324> AgradCdfLogBetaProportion_ffd_324;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_325> AgradCdfLogBetaProportion_ffd_325;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_326> AgradCdfLogBetaProportion_ffd_326;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_327> AgradCdfLogBetaProportion_ffd_327;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_328> AgradCdfLogBetaProportion_ffd_328;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_329> AgradCdfLogBetaProportion_ffd_329;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_330> AgradCdfLogBetaProportion_ffd_330;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_331> AgradCdfLogBetaProportion_ffd_331;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_332> AgradCdfLogBetaProportion_ffd_332;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_333> AgradCdfLogBetaProportion_ffd_333;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_334> AgradCdfLogBetaProportion_ffd_334;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_335> AgradCdfLogBetaProportion_ffd_335;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_336> AgradCdfLogBetaProportion_ffd_336;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_337> AgradCdfLogBetaProportion_ffd_337;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_338> AgradCdfLogBetaProportion_ffd_338;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_339> AgradCdfLogBetaProportion_ffd_339;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_340> AgradCdfLogBetaProportion_ffd_340;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_341> AgradCdfLogBetaProportion_ffd_341;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_342> AgradCdfLogBetaProportion_ffd_342;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_343> AgradCdfLogBetaProportion_ffd_343;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_344> AgradCdfLogBetaProportion_ffd_344;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_345> AgradCdfLogBetaProportion_ffd_345;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_346> AgradCdfLogBetaProportion_ffd_346;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_347> AgradCdfLogBetaProportion_ffd_347;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_348> AgradCdfLogBetaProportion_ffd_348;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_349> AgradCdfLogBetaProportion_ffd_349;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_350> AgradCdfLogBetaProportion_ffd_350;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_351> AgradCdfLogBetaProportion_ffd_351;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_352> AgradCdfLogBetaProportion_ffd_352;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_353> AgradCdfLogBetaProportion_ffd_353;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_354> AgradCdfLogBetaProportion_ffd_354;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_355> AgradCdfLogBetaProportion_ffd_355;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_356> AgradCdfLogBetaProportion_ffd_356;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_357> AgradCdfLogBetaProportion_ffd_357;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_358> AgradCdfLogBetaProportion_ffd_358;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_359> AgradCdfLogBetaProportion_ffd_359;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_360> AgradCdfLogBetaProportion_ffd_360;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_361> AgradCdfLogBetaProportion_ffd_361;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_362> AgradCdfLogBetaProportion_ffd_362;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_363> AgradCdfLogBetaProportion_ffd_363;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_364> AgradCdfLogBetaProportion_ffd_364;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_365> AgradCdfLogBetaProportion_ffd_365;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_366> AgradCdfLogBetaProportion_ffd_366;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_367> AgradCdfLogBetaProportion_ffd_367;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_368> AgradCdfLogBetaProportion_ffd_368;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_369> AgradCdfLogBetaProportion_ffd_369;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_370> AgradCdfLogBetaProportion_ffd_370;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_371> AgradCdfLogBetaProportion_ffd_371;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_372> AgradCdfLogBetaProportion_ffd_372;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_373> AgradCdfLogBetaProportion_ffd_373;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_374> AgradCdfLogBetaProportion_ffd_374;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_375> AgradCdfLogBetaProportion_ffd_375;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_376> AgradCdfLogBetaProportion_ffd_376;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_377> AgradCdfLogBetaProportion_ffd_377;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_378> AgradCdfLogBetaProportion_ffd_378;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_379> AgradCdfLogBetaProportion_ffd_379;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_380> AgradCdfLogBetaProportion_ffd_380;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_381> AgradCdfLogBetaProportion_ffd_381;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_382> AgradCdfLogBetaProportion_ffd_382;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_383> AgradCdfLogBetaProportion_ffd_383;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_384> AgradCdfLogBetaProportion_ffd_384;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_385> AgradCdfLogBetaProportion_ffd_385;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_386> AgradCdfLogBetaProportion_ffd_386;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_387> AgradCdfLogBetaProportion_ffd_387;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_388> AgradCdfLogBetaProportion_ffd_388;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_389> AgradCdfLogBetaProportion_ffd_389;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_390> AgradCdfLogBetaProportion_ffd_390;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_391> AgradCdfLogBetaProportion_ffd_391;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_392> AgradCdfLogBetaProportion_ffd_392;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_393> AgradCdfLogBetaProportion_ffd_393;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_394> AgradCdfLogBetaProportion_ffd_394;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_395> AgradCdfLogBetaProportion_ffd_395;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_396> AgradCdfLogBetaProportion_ffd_396;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_397> AgradCdfLogBetaProportion_ffd_397;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_398> AgradCdfLogBetaProportion_ffd_398;
typedef boost::mpl::vector<AgradCdfLogBetaProportion, type_ffd_399> AgradCdfLogBetaProportion_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_300, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_301, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_302, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_303, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_304, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_305, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_306, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_307, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_308, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_309, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_310, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_311, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_312, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_313, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_314, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_315, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_316, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_317, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_318, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_319, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_320, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_321, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_322, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_323, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_324, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_325, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_326, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_327, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_328, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_329, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_330, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_331, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_332, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_333, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_334, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_335, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_336, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_337, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_338, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_339, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_340, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_341, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_342, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_343, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_344, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_345, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_346, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_347, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_348, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_349, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_350, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_351, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_352, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_353, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_354, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_355, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_356, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_357, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_358, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_359, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_360, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_361, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_362, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_363, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_364, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_365, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_366, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_367, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_368, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_369, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_370, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_371, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_372, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_373, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_374, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_375, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_376, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_377, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_378, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_379, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_380, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_381, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_382, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_383, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_384, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_385, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_386, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_387, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_388, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_389, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_390, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_391, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_392, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_393, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_394, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_395, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_396, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_397, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_398, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaProportion_ffd_399, AgradCdfLogTestFixture, AgradCdfLogBetaProportion_ffd_399);

