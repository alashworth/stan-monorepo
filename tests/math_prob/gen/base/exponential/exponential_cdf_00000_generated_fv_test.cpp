#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <exponential/exponential_cdf_test.hpp>

typedef boost::mpl::vector<double, fvar<var>, empty, empty, empty, empty> type_fv_0;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_1;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_2;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_3;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, empty, empty, empty, empty> type_fv_4;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_5;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_6;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_7;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty, empty> type_fv_8;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_9;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_10;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_11;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty, empty> type_fv_12;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_13;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_14;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_15;
typedef boost::mpl::vector<fvar<var>, double, empty, empty, empty, empty> type_fv_16;
typedef boost::mpl::vector<fvar<var>, std::vector<double>, empty, empty, empty, empty> type_fv_17;
typedef boost::mpl::vector<fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_18;
typedef boost::mpl::vector<fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_19;
typedef boost::mpl::vector<fvar<var>, fvar<var>, empty, empty, empty, empty> type_fv_20;
typedef boost::mpl::vector<fvar<var>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_21;
typedef boost::mpl::vector<fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_22;
typedef boost::mpl::vector<fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_23;
typedef boost::mpl::vector<std::vector<fvar<var>>, double, empty, empty, empty, empty> type_fv_24;
typedef boost::mpl::vector<std::vector<fvar<var>>, std::vector<double>, empty, empty, empty, empty> type_fv_25;
typedef boost::mpl::vector<std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_26;
typedef boost::mpl::vector<std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_27;
typedef boost::mpl::vector<std::vector<fvar<var>>, fvar<var>, empty, empty, empty, empty> type_fv_28;
typedef boost::mpl::vector<std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_29;
typedef boost::mpl::vector<std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_30;
typedef boost::mpl::vector<std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_31;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_fv_32;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_fv_33;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_34;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_35;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty, empty> type_fv_36;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_37;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_38;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_39;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_fv_40;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_fv_41;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_42;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_43;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty, empty> type_fv_44;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty, empty> type_fv_45;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fv_46;
typedef boost::mpl::vector<Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fv_47;

typedef boost::mpl::vector<AgradCdfExponential, type_fv_0> AgradCdfExponential_fv_0;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_1> AgradCdfExponential_fv_1;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_2> AgradCdfExponential_fv_2;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_3> AgradCdfExponential_fv_3;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_4> AgradCdfExponential_fv_4;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_5> AgradCdfExponential_fv_5;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_6> AgradCdfExponential_fv_6;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_7> AgradCdfExponential_fv_7;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_8> AgradCdfExponential_fv_8;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_9> AgradCdfExponential_fv_9;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_10> AgradCdfExponential_fv_10;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_11> AgradCdfExponential_fv_11;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_12> AgradCdfExponential_fv_12;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_13> AgradCdfExponential_fv_13;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_14> AgradCdfExponential_fv_14;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_15> AgradCdfExponential_fv_15;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_16> AgradCdfExponential_fv_16;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_17> AgradCdfExponential_fv_17;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_18> AgradCdfExponential_fv_18;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_19> AgradCdfExponential_fv_19;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_20> AgradCdfExponential_fv_20;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_21> AgradCdfExponential_fv_21;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_22> AgradCdfExponential_fv_22;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_23> AgradCdfExponential_fv_23;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_24> AgradCdfExponential_fv_24;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_25> AgradCdfExponential_fv_25;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_26> AgradCdfExponential_fv_26;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_27> AgradCdfExponential_fv_27;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_28> AgradCdfExponential_fv_28;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_29> AgradCdfExponential_fv_29;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_30> AgradCdfExponential_fv_30;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_31> AgradCdfExponential_fv_31;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_32> AgradCdfExponential_fv_32;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_33> AgradCdfExponential_fv_33;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_34> AgradCdfExponential_fv_34;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_35> AgradCdfExponential_fv_35;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_36> AgradCdfExponential_fv_36;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_37> AgradCdfExponential_fv_37;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_38> AgradCdfExponential_fv_38;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_39> AgradCdfExponential_fv_39;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_40> AgradCdfExponential_fv_40;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_41> AgradCdfExponential_fv_41;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_42> AgradCdfExponential_fv_42;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_43> AgradCdfExponential_fv_43;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_44> AgradCdfExponential_fv_44;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_45> AgradCdfExponential_fv_45;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_46> AgradCdfExponential_fv_46;
typedef boost::mpl::vector<AgradCdfExponential, type_fv_47> AgradCdfExponential_fv_47;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_0, AgradCdfTestFixture, AgradCdfExponential_fv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_1, AgradCdfTestFixture, AgradCdfExponential_fv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_2, AgradCdfTestFixture, AgradCdfExponential_fv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_3, AgradCdfTestFixture, AgradCdfExponential_fv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_4, AgradCdfTestFixture, AgradCdfExponential_fv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_5, AgradCdfTestFixture, AgradCdfExponential_fv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_6, AgradCdfTestFixture, AgradCdfExponential_fv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_7, AgradCdfTestFixture, AgradCdfExponential_fv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_8, AgradCdfTestFixture, AgradCdfExponential_fv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_9, AgradCdfTestFixture, AgradCdfExponential_fv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_10, AgradCdfTestFixture, AgradCdfExponential_fv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_11, AgradCdfTestFixture, AgradCdfExponential_fv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_12, AgradCdfTestFixture, AgradCdfExponential_fv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_13, AgradCdfTestFixture, AgradCdfExponential_fv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_14, AgradCdfTestFixture, AgradCdfExponential_fv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_15, AgradCdfTestFixture, AgradCdfExponential_fv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_16, AgradCdfTestFixture, AgradCdfExponential_fv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_17, AgradCdfTestFixture, AgradCdfExponential_fv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_18, AgradCdfTestFixture, AgradCdfExponential_fv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_19, AgradCdfTestFixture, AgradCdfExponential_fv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_20, AgradCdfTestFixture, AgradCdfExponential_fv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_21, AgradCdfTestFixture, AgradCdfExponential_fv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_22, AgradCdfTestFixture, AgradCdfExponential_fv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_23, AgradCdfTestFixture, AgradCdfExponential_fv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_24, AgradCdfTestFixture, AgradCdfExponential_fv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_25, AgradCdfTestFixture, AgradCdfExponential_fv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_26, AgradCdfTestFixture, AgradCdfExponential_fv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_27, AgradCdfTestFixture, AgradCdfExponential_fv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_28, AgradCdfTestFixture, AgradCdfExponential_fv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_29, AgradCdfTestFixture, AgradCdfExponential_fv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_30, AgradCdfTestFixture, AgradCdfExponential_fv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_31, AgradCdfTestFixture, AgradCdfExponential_fv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_32, AgradCdfTestFixture, AgradCdfExponential_fv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_33, AgradCdfTestFixture, AgradCdfExponential_fv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_34, AgradCdfTestFixture, AgradCdfExponential_fv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_35, AgradCdfTestFixture, AgradCdfExponential_fv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_36, AgradCdfTestFixture, AgradCdfExponential_fv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_37, AgradCdfTestFixture, AgradCdfExponential_fv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_38, AgradCdfTestFixture, AgradCdfExponential_fv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_39, AgradCdfTestFixture, AgradCdfExponential_fv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_40, AgradCdfTestFixture, AgradCdfExponential_fv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_41, AgradCdfTestFixture, AgradCdfExponential_fv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_42, AgradCdfTestFixture, AgradCdfExponential_fv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_43, AgradCdfTestFixture, AgradCdfExponential_fv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_44, AgradCdfTestFixture, AgradCdfExponential_fv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_45, AgradCdfTestFixture, AgradCdfExponential_fv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_46, AgradCdfTestFixture, AgradCdfExponential_fv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfExponential_fv_47, AgradCdfTestFixture, AgradCdfExponential_fv_47);

