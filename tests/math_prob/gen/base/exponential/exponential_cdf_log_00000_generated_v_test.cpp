#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <exponential/exponential_cdf_log_test.hpp>

typedef boost::mpl::vector<double, double, empty, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<double, std::vector<double>, empty, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<double, var, empty, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<double, std::vector<var>, empty, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<std::vector<double>, double, empty, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, empty, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<std::vector<double>, var, empty, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<std::vector<double>, std::vector<var>, empty, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<var, double, empty, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<var, std::vector<double>, empty, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<var, var, empty, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<var, std::vector<var>, empty, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<std::vector<var>, double, empty, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, empty, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<std::vector<var>, var, empty, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, empty, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_v_63;

typedef boost::mpl::vector<AgradCdfLogExponential, type_v_0> AgradCdfLogExponential_v_0;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_1> AgradCdfLogExponential_v_1;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_2> AgradCdfLogExponential_v_2;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_3> AgradCdfLogExponential_v_3;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_4> AgradCdfLogExponential_v_4;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_5> AgradCdfLogExponential_v_5;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_6> AgradCdfLogExponential_v_6;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_7> AgradCdfLogExponential_v_7;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_8> AgradCdfLogExponential_v_8;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_9> AgradCdfLogExponential_v_9;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_10> AgradCdfLogExponential_v_10;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_11> AgradCdfLogExponential_v_11;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_12> AgradCdfLogExponential_v_12;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_13> AgradCdfLogExponential_v_13;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_14> AgradCdfLogExponential_v_14;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_15> AgradCdfLogExponential_v_15;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_16> AgradCdfLogExponential_v_16;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_17> AgradCdfLogExponential_v_17;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_18> AgradCdfLogExponential_v_18;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_19> AgradCdfLogExponential_v_19;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_20> AgradCdfLogExponential_v_20;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_21> AgradCdfLogExponential_v_21;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_22> AgradCdfLogExponential_v_22;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_23> AgradCdfLogExponential_v_23;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_24> AgradCdfLogExponential_v_24;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_25> AgradCdfLogExponential_v_25;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_26> AgradCdfLogExponential_v_26;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_27> AgradCdfLogExponential_v_27;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_28> AgradCdfLogExponential_v_28;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_29> AgradCdfLogExponential_v_29;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_30> AgradCdfLogExponential_v_30;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_31> AgradCdfLogExponential_v_31;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_32> AgradCdfLogExponential_v_32;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_33> AgradCdfLogExponential_v_33;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_34> AgradCdfLogExponential_v_34;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_35> AgradCdfLogExponential_v_35;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_36> AgradCdfLogExponential_v_36;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_37> AgradCdfLogExponential_v_37;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_38> AgradCdfLogExponential_v_38;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_39> AgradCdfLogExponential_v_39;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_40> AgradCdfLogExponential_v_40;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_41> AgradCdfLogExponential_v_41;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_42> AgradCdfLogExponential_v_42;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_43> AgradCdfLogExponential_v_43;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_44> AgradCdfLogExponential_v_44;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_45> AgradCdfLogExponential_v_45;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_46> AgradCdfLogExponential_v_46;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_47> AgradCdfLogExponential_v_47;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_48> AgradCdfLogExponential_v_48;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_49> AgradCdfLogExponential_v_49;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_50> AgradCdfLogExponential_v_50;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_51> AgradCdfLogExponential_v_51;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_52> AgradCdfLogExponential_v_52;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_53> AgradCdfLogExponential_v_53;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_54> AgradCdfLogExponential_v_54;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_55> AgradCdfLogExponential_v_55;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_56> AgradCdfLogExponential_v_56;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_57> AgradCdfLogExponential_v_57;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_58> AgradCdfLogExponential_v_58;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_59> AgradCdfLogExponential_v_59;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_60> AgradCdfLogExponential_v_60;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_61> AgradCdfLogExponential_v_61;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_62> AgradCdfLogExponential_v_62;
typedef boost::mpl::vector<AgradCdfLogExponential, type_v_63> AgradCdfLogExponential_v_63;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_0, AgradCdfLogTestFixture, AgradCdfLogExponential_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_1, AgradCdfLogTestFixture, AgradCdfLogExponential_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_2, AgradCdfLogTestFixture, AgradCdfLogExponential_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_3, AgradCdfLogTestFixture, AgradCdfLogExponential_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_4, AgradCdfLogTestFixture, AgradCdfLogExponential_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_5, AgradCdfLogTestFixture, AgradCdfLogExponential_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_6, AgradCdfLogTestFixture, AgradCdfLogExponential_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_7, AgradCdfLogTestFixture, AgradCdfLogExponential_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_8, AgradCdfLogTestFixture, AgradCdfLogExponential_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_9, AgradCdfLogTestFixture, AgradCdfLogExponential_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_10, AgradCdfLogTestFixture, AgradCdfLogExponential_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_11, AgradCdfLogTestFixture, AgradCdfLogExponential_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_12, AgradCdfLogTestFixture, AgradCdfLogExponential_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_13, AgradCdfLogTestFixture, AgradCdfLogExponential_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_14, AgradCdfLogTestFixture, AgradCdfLogExponential_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_15, AgradCdfLogTestFixture, AgradCdfLogExponential_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_16, AgradCdfLogTestFixture, AgradCdfLogExponential_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_17, AgradCdfLogTestFixture, AgradCdfLogExponential_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_18, AgradCdfLogTestFixture, AgradCdfLogExponential_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_19, AgradCdfLogTestFixture, AgradCdfLogExponential_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_20, AgradCdfLogTestFixture, AgradCdfLogExponential_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_21, AgradCdfLogTestFixture, AgradCdfLogExponential_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_22, AgradCdfLogTestFixture, AgradCdfLogExponential_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_23, AgradCdfLogTestFixture, AgradCdfLogExponential_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_24, AgradCdfLogTestFixture, AgradCdfLogExponential_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_25, AgradCdfLogTestFixture, AgradCdfLogExponential_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_26, AgradCdfLogTestFixture, AgradCdfLogExponential_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_27, AgradCdfLogTestFixture, AgradCdfLogExponential_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_28, AgradCdfLogTestFixture, AgradCdfLogExponential_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_29, AgradCdfLogTestFixture, AgradCdfLogExponential_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_30, AgradCdfLogTestFixture, AgradCdfLogExponential_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_31, AgradCdfLogTestFixture, AgradCdfLogExponential_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_32, AgradCdfLogTestFixture, AgradCdfLogExponential_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_33, AgradCdfLogTestFixture, AgradCdfLogExponential_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_34, AgradCdfLogTestFixture, AgradCdfLogExponential_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_35, AgradCdfLogTestFixture, AgradCdfLogExponential_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_36, AgradCdfLogTestFixture, AgradCdfLogExponential_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_37, AgradCdfLogTestFixture, AgradCdfLogExponential_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_38, AgradCdfLogTestFixture, AgradCdfLogExponential_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_39, AgradCdfLogTestFixture, AgradCdfLogExponential_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_40, AgradCdfLogTestFixture, AgradCdfLogExponential_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_41, AgradCdfLogTestFixture, AgradCdfLogExponential_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_42, AgradCdfLogTestFixture, AgradCdfLogExponential_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_43, AgradCdfLogTestFixture, AgradCdfLogExponential_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_44, AgradCdfLogTestFixture, AgradCdfLogExponential_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_45, AgradCdfLogTestFixture, AgradCdfLogExponential_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_46, AgradCdfLogTestFixture, AgradCdfLogExponential_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_47, AgradCdfLogTestFixture, AgradCdfLogExponential_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_48, AgradCdfLogTestFixture, AgradCdfLogExponential_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_49, AgradCdfLogTestFixture, AgradCdfLogExponential_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_50, AgradCdfLogTestFixture, AgradCdfLogExponential_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_51, AgradCdfLogTestFixture, AgradCdfLogExponential_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_52, AgradCdfLogTestFixture, AgradCdfLogExponential_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_53, AgradCdfLogTestFixture, AgradCdfLogExponential_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_54, AgradCdfLogTestFixture, AgradCdfLogExponential_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_55, AgradCdfLogTestFixture, AgradCdfLogExponential_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_56, AgradCdfLogTestFixture, AgradCdfLogExponential_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_57, AgradCdfLogTestFixture, AgradCdfLogExponential_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_58, AgradCdfLogTestFixture, AgradCdfLogExponential_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_59, AgradCdfLogTestFixture, AgradCdfLogExponential_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_60, AgradCdfLogTestFixture, AgradCdfLogExponential_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_61, AgradCdfLogTestFixture, AgradCdfLogExponential_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_62, AgradCdfLogTestFixture, AgradCdfLogExponential_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogExponential_v_63, AgradCdfLogTestFixture, AgradCdfLogExponential_v_63);

