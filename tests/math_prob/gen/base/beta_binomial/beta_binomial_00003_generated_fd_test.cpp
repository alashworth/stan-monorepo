#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, double, empty, empty> type_fd_600;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_601;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_602;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_603;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_604;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_605;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_606;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_607;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_608;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_609;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_610;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_611;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_612;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_613;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_614;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_615;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_616;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_617;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_618;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_619;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_620;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_621;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_622;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_623;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, fvar<double>, empty, empty> type_fd_624;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<fvar<double>>, empty, empty> type_fd_625;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_626;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_627;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, fvar<double>, empty, empty> type_fd_628;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_629;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_630;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_631;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_632;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_633;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_634;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_635;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_636;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_637;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_638;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_639;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, double, empty, empty> type_fd_640;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, std::vector<double>, empty, empty> type_fd_641;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_642;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_643;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, fvar<double>, empty, empty> type_fd_644;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_645;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_646;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_647;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, double, empty, empty> type_fd_648;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_649;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_650;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_651;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_652;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_653;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_654;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_655;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_656;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_657;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_658;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_659;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_660;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_661;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_662;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_663;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_664;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_665;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_666;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_667;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_668;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_669;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_670;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_671;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty> type_fd_672;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty> type_fd_673;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_674;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_675;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty> type_fd_676;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_677;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_678;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_679;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_680;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_681;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_682;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_683;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_684;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_685;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_686;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_687;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty> type_fd_688;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty> type_fd_689;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_690;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_691;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty> type_fd_692;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_693;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_694;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_695;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty> type_fd_696;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_697;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_698;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_699;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_700;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_701;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_702;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_703;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_704;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_705;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_706;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_707;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_708;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_709;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_710;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_711;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_712;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_713;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_714;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_715;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_716;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_717;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_718;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_719;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty> type_fd_720;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty> type_fd_721;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_722;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_723;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty> type_fd_724;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_725;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_726;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_727;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_728;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_729;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_730;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_731;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_732;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_733;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_734;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_735;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty> type_fd_736;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty> type_fd_737;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_738;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_739;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty> type_fd_740;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_741;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_742;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_743;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty> type_fd_744;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_745;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_746;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_747;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_748;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_749;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_750;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_751;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_752;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_753;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_754;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_755;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_756;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_757;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_758;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_759;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_760;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_761;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_762;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_763;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_764;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_765;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_766;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_767;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_600> AgradDistributionsBetaBinomial_fd_600;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_601> AgradDistributionsBetaBinomial_fd_601;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_602> AgradDistributionsBetaBinomial_fd_602;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_603> AgradDistributionsBetaBinomial_fd_603;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_604> AgradDistributionsBetaBinomial_fd_604;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_605> AgradDistributionsBetaBinomial_fd_605;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_606> AgradDistributionsBetaBinomial_fd_606;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_607> AgradDistributionsBetaBinomial_fd_607;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_608> AgradDistributionsBetaBinomial_fd_608;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_609> AgradDistributionsBetaBinomial_fd_609;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_610> AgradDistributionsBetaBinomial_fd_610;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_611> AgradDistributionsBetaBinomial_fd_611;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_612> AgradDistributionsBetaBinomial_fd_612;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_613> AgradDistributionsBetaBinomial_fd_613;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_614> AgradDistributionsBetaBinomial_fd_614;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_615> AgradDistributionsBetaBinomial_fd_615;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_616> AgradDistributionsBetaBinomial_fd_616;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_617> AgradDistributionsBetaBinomial_fd_617;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_618> AgradDistributionsBetaBinomial_fd_618;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_619> AgradDistributionsBetaBinomial_fd_619;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_620> AgradDistributionsBetaBinomial_fd_620;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_621> AgradDistributionsBetaBinomial_fd_621;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_622> AgradDistributionsBetaBinomial_fd_622;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_623> AgradDistributionsBetaBinomial_fd_623;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_624> AgradDistributionsBetaBinomial_fd_624;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_625> AgradDistributionsBetaBinomial_fd_625;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_626> AgradDistributionsBetaBinomial_fd_626;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_627> AgradDistributionsBetaBinomial_fd_627;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_628> AgradDistributionsBetaBinomial_fd_628;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_629> AgradDistributionsBetaBinomial_fd_629;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_630> AgradDistributionsBetaBinomial_fd_630;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_631> AgradDistributionsBetaBinomial_fd_631;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_632> AgradDistributionsBetaBinomial_fd_632;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_633> AgradDistributionsBetaBinomial_fd_633;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_634> AgradDistributionsBetaBinomial_fd_634;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_635> AgradDistributionsBetaBinomial_fd_635;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_636> AgradDistributionsBetaBinomial_fd_636;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_637> AgradDistributionsBetaBinomial_fd_637;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_638> AgradDistributionsBetaBinomial_fd_638;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_639> AgradDistributionsBetaBinomial_fd_639;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_640> AgradDistributionsBetaBinomial_fd_640;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_641> AgradDistributionsBetaBinomial_fd_641;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_642> AgradDistributionsBetaBinomial_fd_642;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_643> AgradDistributionsBetaBinomial_fd_643;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_644> AgradDistributionsBetaBinomial_fd_644;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_645> AgradDistributionsBetaBinomial_fd_645;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_646> AgradDistributionsBetaBinomial_fd_646;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_647> AgradDistributionsBetaBinomial_fd_647;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_648> AgradDistributionsBetaBinomial_fd_648;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_649> AgradDistributionsBetaBinomial_fd_649;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_650> AgradDistributionsBetaBinomial_fd_650;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_651> AgradDistributionsBetaBinomial_fd_651;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_652> AgradDistributionsBetaBinomial_fd_652;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_653> AgradDistributionsBetaBinomial_fd_653;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_654> AgradDistributionsBetaBinomial_fd_654;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_655> AgradDistributionsBetaBinomial_fd_655;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_656> AgradDistributionsBetaBinomial_fd_656;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_657> AgradDistributionsBetaBinomial_fd_657;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_658> AgradDistributionsBetaBinomial_fd_658;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_659> AgradDistributionsBetaBinomial_fd_659;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_660> AgradDistributionsBetaBinomial_fd_660;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_661> AgradDistributionsBetaBinomial_fd_661;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_662> AgradDistributionsBetaBinomial_fd_662;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_663> AgradDistributionsBetaBinomial_fd_663;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_664> AgradDistributionsBetaBinomial_fd_664;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_665> AgradDistributionsBetaBinomial_fd_665;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_666> AgradDistributionsBetaBinomial_fd_666;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_667> AgradDistributionsBetaBinomial_fd_667;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_668> AgradDistributionsBetaBinomial_fd_668;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_669> AgradDistributionsBetaBinomial_fd_669;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_670> AgradDistributionsBetaBinomial_fd_670;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_671> AgradDistributionsBetaBinomial_fd_671;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_672> AgradDistributionsBetaBinomial_fd_672;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_673> AgradDistributionsBetaBinomial_fd_673;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_674> AgradDistributionsBetaBinomial_fd_674;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_675> AgradDistributionsBetaBinomial_fd_675;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_676> AgradDistributionsBetaBinomial_fd_676;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_677> AgradDistributionsBetaBinomial_fd_677;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_678> AgradDistributionsBetaBinomial_fd_678;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_679> AgradDistributionsBetaBinomial_fd_679;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_680> AgradDistributionsBetaBinomial_fd_680;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_681> AgradDistributionsBetaBinomial_fd_681;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_682> AgradDistributionsBetaBinomial_fd_682;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_683> AgradDistributionsBetaBinomial_fd_683;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_684> AgradDistributionsBetaBinomial_fd_684;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_685> AgradDistributionsBetaBinomial_fd_685;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_686> AgradDistributionsBetaBinomial_fd_686;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_687> AgradDistributionsBetaBinomial_fd_687;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_688> AgradDistributionsBetaBinomial_fd_688;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_689> AgradDistributionsBetaBinomial_fd_689;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_690> AgradDistributionsBetaBinomial_fd_690;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_691> AgradDistributionsBetaBinomial_fd_691;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_692> AgradDistributionsBetaBinomial_fd_692;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_693> AgradDistributionsBetaBinomial_fd_693;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_694> AgradDistributionsBetaBinomial_fd_694;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_695> AgradDistributionsBetaBinomial_fd_695;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_696> AgradDistributionsBetaBinomial_fd_696;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_697> AgradDistributionsBetaBinomial_fd_697;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_698> AgradDistributionsBetaBinomial_fd_698;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_699> AgradDistributionsBetaBinomial_fd_699;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_700> AgradDistributionsBetaBinomial_fd_700;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_701> AgradDistributionsBetaBinomial_fd_701;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_702> AgradDistributionsBetaBinomial_fd_702;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_703> AgradDistributionsBetaBinomial_fd_703;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_704> AgradDistributionsBetaBinomial_fd_704;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_705> AgradDistributionsBetaBinomial_fd_705;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_706> AgradDistributionsBetaBinomial_fd_706;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_707> AgradDistributionsBetaBinomial_fd_707;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_708> AgradDistributionsBetaBinomial_fd_708;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_709> AgradDistributionsBetaBinomial_fd_709;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_710> AgradDistributionsBetaBinomial_fd_710;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_711> AgradDistributionsBetaBinomial_fd_711;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_712> AgradDistributionsBetaBinomial_fd_712;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_713> AgradDistributionsBetaBinomial_fd_713;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_714> AgradDistributionsBetaBinomial_fd_714;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_715> AgradDistributionsBetaBinomial_fd_715;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_716> AgradDistributionsBetaBinomial_fd_716;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_717> AgradDistributionsBetaBinomial_fd_717;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_718> AgradDistributionsBetaBinomial_fd_718;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_719> AgradDistributionsBetaBinomial_fd_719;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_720> AgradDistributionsBetaBinomial_fd_720;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_721> AgradDistributionsBetaBinomial_fd_721;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_722> AgradDistributionsBetaBinomial_fd_722;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_723> AgradDistributionsBetaBinomial_fd_723;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_724> AgradDistributionsBetaBinomial_fd_724;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_725> AgradDistributionsBetaBinomial_fd_725;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_726> AgradDistributionsBetaBinomial_fd_726;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_727> AgradDistributionsBetaBinomial_fd_727;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_728> AgradDistributionsBetaBinomial_fd_728;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_729> AgradDistributionsBetaBinomial_fd_729;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_730> AgradDistributionsBetaBinomial_fd_730;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_731> AgradDistributionsBetaBinomial_fd_731;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_732> AgradDistributionsBetaBinomial_fd_732;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_733> AgradDistributionsBetaBinomial_fd_733;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_734> AgradDistributionsBetaBinomial_fd_734;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_735> AgradDistributionsBetaBinomial_fd_735;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_736> AgradDistributionsBetaBinomial_fd_736;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_737> AgradDistributionsBetaBinomial_fd_737;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_738> AgradDistributionsBetaBinomial_fd_738;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_739> AgradDistributionsBetaBinomial_fd_739;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_740> AgradDistributionsBetaBinomial_fd_740;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_741> AgradDistributionsBetaBinomial_fd_741;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_742> AgradDistributionsBetaBinomial_fd_742;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_743> AgradDistributionsBetaBinomial_fd_743;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_744> AgradDistributionsBetaBinomial_fd_744;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_745> AgradDistributionsBetaBinomial_fd_745;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_746> AgradDistributionsBetaBinomial_fd_746;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_747> AgradDistributionsBetaBinomial_fd_747;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_748> AgradDistributionsBetaBinomial_fd_748;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_749> AgradDistributionsBetaBinomial_fd_749;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_750> AgradDistributionsBetaBinomial_fd_750;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_751> AgradDistributionsBetaBinomial_fd_751;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_752> AgradDistributionsBetaBinomial_fd_752;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_753> AgradDistributionsBetaBinomial_fd_753;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_754> AgradDistributionsBetaBinomial_fd_754;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_755> AgradDistributionsBetaBinomial_fd_755;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_756> AgradDistributionsBetaBinomial_fd_756;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_757> AgradDistributionsBetaBinomial_fd_757;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_758> AgradDistributionsBetaBinomial_fd_758;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_759> AgradDistributionsBetaBinomial_fd_759;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_760> AgradDistributionsBetaBinomial_fd_760;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_761> AgradDistributionsBetaBinomial_fd_761;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_762> AgradDistributionsBetaBinomial_fd_762;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_763> AgradDistributionsBetaBinomial_fd_763;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_764> AgradDistributionsBetaBinomial_fd_764;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_765> AgradDistributionsBetaBinomial_fd_765;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_766> AgradDistributionsBetaBinomial_fd_766;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_767> AgradDistributionsBetaBinomial_fd_767;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_600, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_600);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_601, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_601);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_602, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_602);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_603, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_603);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_604, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_604);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_605, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_605);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_606, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_606);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_607, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_607);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_608, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_608);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_609, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_609);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_610, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_610);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_611, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_611);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_612, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_612);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_613, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_613);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_614, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_614);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_615, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_615);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_616, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_616);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_617, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_617);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_618, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_618);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_619, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_619);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_620, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_620);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_621, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_621);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_622, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_622);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_623, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_623);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_624, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_624);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_625, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_625);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_626, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_626);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_627, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_627);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_628, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_628);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_629, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_629);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_630, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_630);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_631, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_631);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_632, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_632);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_633, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_633);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_634, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_634);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_635, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_635);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_636, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_636);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_637, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_637);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_638, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_638);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_639, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_639);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_640, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_640);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_641, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_641);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_642, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_642);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_643, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_643);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_644, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_644);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_645, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_645);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_646, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_646);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_647, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_647);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_648, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_648);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_649, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_649);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_650, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_650);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_651, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_651);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_652, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_652);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_653, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_653);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_654, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_654);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_655, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_655);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_656, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_656);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_657, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_657);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_658, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_658);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_659, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_659);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_660, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_660);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_661, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_661);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_662, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_662);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_663, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_663);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_664, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_664);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_665, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_665);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_666, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_666);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_667, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_667);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_668, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_668);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_669, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_669);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_670, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_670);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_671, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_671);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_672, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_672);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_673, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_673);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_674, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_674);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_675, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_675);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_676, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_676);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_677, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_677);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_678, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_678);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_679, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_679);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_680, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_680);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_681, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_681);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_682, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_682);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_683, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_683);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_684, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_684);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_685, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_685);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_686, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_686);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_687, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_687);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_688, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_688);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_689, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_689);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_690, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_690);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_691, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_691);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_692, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_692);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_693, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_693);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_694, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_694);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_695, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_695);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_696, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_696);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_697, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_697);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_698, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_698);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_699, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_699);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_700, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_700);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_701, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_701);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_702, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_702);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_703, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_703);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_704, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_704);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_705, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_705);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_706, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_706);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_707, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_707);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_708, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_708);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_709, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_709);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_710, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_710);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_711, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_711);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_712, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_712);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_713, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_713);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_714, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_714);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_715, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_715);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_716, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_716);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_717, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_717);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_718, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_718);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_719, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_719);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_720, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_720);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_721, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_721);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_722, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_722);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_723, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_723);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_724, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_724);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_725, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_725);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_726, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_726);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_727, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_727);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_728, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_728);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_729, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_729);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_730, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_730);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_731, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_731);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_732, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_732);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_733, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_733);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_734, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_734);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_735, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_735);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_736, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_736);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_737, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_737);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_738, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_738);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_739, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_739);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_740, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_740);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_741, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_741);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_742, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_742);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_743, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_743);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_744, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_744);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_745, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_745);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_746, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_746);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_747, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_747);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_748, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_748);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_749, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_749);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_750, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_750);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_751, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_751);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_752, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_752);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_753, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_753);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_754, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_754);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_755, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_755);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_756, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_756);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_757, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_757);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_758, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_758);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_759, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_759);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_760, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_760);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_761, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_761);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_762, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_762);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_763, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_763);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_764, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_764);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_765, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_765);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_766, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_766);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_767, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_767);

