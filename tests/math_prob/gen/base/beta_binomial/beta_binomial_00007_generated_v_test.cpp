#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_700;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_701;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_702;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_703;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_704;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_705;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_706;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_707;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_708;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_709;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_710;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_711;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_712;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_713;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_714;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_715;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_716;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_717;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_718;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_719;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_720;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_721;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_722;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_723;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_724;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_725;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_726;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_727;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_728;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_729;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_730;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_731;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_732;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_733;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_734;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_735;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_736;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_737;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_738;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_739;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_740;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_741;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_742;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_743;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_744;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_745;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_746;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_747;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_748;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_749;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_750;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_751;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_752;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_753;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_754;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_755;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_756;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_757;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_758;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_759;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_760;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_761;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_762;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_763;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_764;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_765;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_766;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_767;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, double, empty, empty> type_v_768;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<double>, empty, empty> type_v_769;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_770;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_771;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, var, empty, empty> type_v_772;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<var>, empty, empty> type_v_773;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_774;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_775;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, double, empty, empty> type_v_776;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_777;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_778;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_779;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, var, empty, empty> type_v_780;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_781;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_782;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_783;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_784;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_785;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_786;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_787;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_788;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_789;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_790;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_791;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_792;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_793;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_794;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_795;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_796;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_797;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_798;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_799;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_700> AgradDistributionsBetaBinomial_v_700;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_701> AgradDistributionsBetaBinomial_v_701;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_702> AgradDistributionsBetaBinomial_v_702;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_703> AgradDistributionsBetaBinomial_v_703;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_704> AgradDistributionsBetaBinomial_v_704;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_705> AgradDistributionsBetaBinomial_v_705;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_706> AgradDistributionsBetaBinomial_v_706;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_707> AgradDistributionsBetaBinomial_v_707;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_708> AgradDistributionsBetaBinomial_v_708;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_709> AgradDistributionsBetaBinomial_v_709;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_710> AgradDistributionsBetaBinomial_v_710;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_711> AgradDistributionsBetaBinomial_v_711;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_712> AgradDistributionsBetaBinomial_v_712;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_713> AgradDistributionsBetaBinomial_v_713;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_714> AgradDistributionsBetaBinomial_v_714;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_715> AgradDistributionsBetaBinomial_v_715;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_716> AgradDistributionsBetaBinomial_v_716;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_717> AgradDistributionsBetaBinomial_v_717;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_718> AgradDistributionsBetaBinomial_v_718;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_719> AgradDistributionsBetaBinomial_v_719;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_720> AgradDistributionsBetaBinomial_v_720;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_721> AgradDistributionsBetaBinomial_v_721;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_722> AgradDistributionsBetaBinomial_v_722;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_723> AgradDistributionsBetaBinomial_v_723;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_724> AgradDistributionsBetaBinomial_v_724;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_725> AgradDistributionsBetaBinomial_v_725;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_726> AgradDistributionsBetaBinomial_v_726;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_727> AgradDistributionsBetaBinomial_v_727;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_728> AgradDistributionsBetaBinomial_v_728;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_729> AgradDistributionsBetaBinomial_v_729;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_730> AgradDistributionsBetaBinomial_v_730;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_731> AgradDistributionsBetaBinomial_v_731;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_732> AgradDistributionsBetaBinomial_v_732;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_733> AgradDistributionsBetaBinomial_v_733;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_734> AgradDistributionsBetaBinomial_v_734;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_735> AgradDistributionsBetaBinomial_v_735;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_736> AgradDistributionsBetaBinomial_v_736;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_737> AgradDistributionsBetaBinomial_v_737;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_738> AgradDistributionsBetaBinomial_v_738;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_739> AgradDistributionsBetaBinomial_v_739;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_740> AgradDistributionsBetaBinomial_v_740;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_741> AgradDistributionsBetaBinomial_v_741;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_742> AgradDistributionsBetaBinomial_v_742;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_743> AgradDistributionsBetaBinomial_v_743;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_744> AgradDistributionsBetaBinomial_v_744;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_745> AgradDistributionsBetaBinomial_v_745;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_746> AgradDistributionsBetaBinomial_v_746;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_747> AgradDistributionsBetaBinomial_v_747;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_748> AgradDistributionsBetaBinomial_v_748;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_749> AgradDistributionsBetaBinomial_v_749;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_750> AgradDistributionsBetaBinomial_v_750;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_751> AgradDistributionsBetaBinomial_v_751;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_752> AgradDistributionsBetaBinomial_v_752;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_753> AgradDistributionsBetaBinomial_v_753;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_754> AgradDistributionsBetaBinomial_v_754;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_755> AgradDistributionsBetaBinomial_v_755;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_756> AgradDistributionsBetaBinomial_v_756;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_757> AgradDistributionsBetaBinomial_v_757;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_758> AgradDistributionsBetaBinomial_v_758;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_759> AgradDistributionsBetaBinomial_v_759;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_760> AgradDistributionsBetaBinomial_v_760;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_761> AgradDistributionsBetaBinomial_v_761;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_762> AgradDistributionsBetaBinomial_v_762;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_763> AgradDistributionsBetaBinomial_v_763;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_764> AgradDistributionsBetaBinomial_v_764;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_765> AgradDistributionsBetaBinomial_v_765;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_766> AgradDistributionsBetaBinomial_v_766;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_767> AgradDistributionsBetaBinomial_v_767;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_768> AgradDistributionsBetaBinomial_v_768;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_769> AgradDistributionsBetaBinomial_v_769;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_770> AgradDistributionsBetaBinomial_v_770;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_771> AgradDistributionsBetaBinomial_v_771;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_772> AgradDistributionsBetaBinomial_v_772;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_773> AgradDistributionsBetaBinomial_v_773;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_774> AgradDistributionsBetaBinomial_v_774;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_775> AgradDistributionsBetaBinomial_v_775;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_776> AgradDistributionsBetaBinomial_v_776;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_777> AgradDistributionsBetaBinomial_v_777;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_778> AgradDistributionsBetaBinomial_v_778;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_779> AgradDistributionsBetaBinomial_v_779;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_780> AgradDistributionsBetaBinomial_v_780;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_781> AgradDistributionsBetaBinomial_v_781;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_782> AgradDistributionsBetaBinomial_v_782;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_783> AgradDistributionsBetaBinomial_v_783;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_784> AgradDistributionsBetaBinomial_v_784;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_785> AgradDistributionsBetaBinomial_v_785;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_786> AgradDistributionsBetaBinomial_v_786;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_787> AgradDistributionsBetaBinomial_v_787;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_788> AgradDistributionsBetaBinomial_v_788;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_789> AgradDistributionsBetaBinomial_v_789;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_790> AgradDistributionsBetaBinomial_v_790;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_791> AgradDistributionsBetaBinomial_v_791;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_792> AgradDistributionsBetaBinomial_v_792;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_793> AgradDistributionsBetaBinomial_v_793;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_794> AgradDistributionsBetaBinomial_v_794;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_795> AgradDistributionsBetaBinomial_v_795;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_796> AgradDistributionsBetaBinomial_v_796;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_797> AgradDistributionsBetaBinomial_v_797;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_798> AgradDistributionsBetaBinomial_v_798;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_799> AgradDistributionsBetaBinomial_v_799;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_700, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_700);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_701, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_701);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_702, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_702);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_703, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_703);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_704, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_704);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_705, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_705);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_706, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_706);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_707, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_707);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_708, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_708);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_709, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_709);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_710, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_710);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_711, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_711);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_712, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_712);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_713, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_713);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_714, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_714);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_715, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_715);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_716, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_716);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_717, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_717);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_718, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_718);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_719, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_719);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_720, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_720);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_721, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_721);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_722, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_722);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_723, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_723);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_724, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_724);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_725, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_725);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_726, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_726);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_727, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_727);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_728, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_728);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_729, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_729);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_730, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_730);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_731, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_731);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_732, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_732);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_733, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_733);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_734, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_734);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_735, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_735);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_736, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_736);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_737, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_737);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_738, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_738);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_739, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_739);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_740, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_740);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_741, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_741);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_742, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_742);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_743, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_743);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_744, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_744);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_745, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_745);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_746, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_746);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_747, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_747);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_748, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_748);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_749, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_749);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_750, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_750);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_751, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_751);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_752, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_752);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_753, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_753);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_754, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_754);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_755, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_755);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_756, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_756);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_757, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_757);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_758, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_758);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_759, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_759);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_760, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_760);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_761, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_761);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_762, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_762);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_763, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_763);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_764, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_764);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_765, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_765);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_766, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_766);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_767, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_767);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_768, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_768);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_769, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_769);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_770, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_770);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_771, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_771);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_772, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_772);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_773, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_773);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_774, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_774);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_775, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_775);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_776, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_776);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_777, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_777);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_778, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_778);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_779, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_779);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_780, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_780);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_781, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_781);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_782, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_782);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_783, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_783);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_784, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_784);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_785, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_785);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_786, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_786);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_787, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_787);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_788, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_788);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_789, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_789);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_790, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_790);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_791, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_791);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_792, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_792);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_793, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_793);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_794, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_794);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_795, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_795);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_796, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_796);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_797, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_797);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_798, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_798);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_799, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_799);

