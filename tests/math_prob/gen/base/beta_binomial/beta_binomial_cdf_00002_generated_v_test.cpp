#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_400;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_401;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_402;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_403;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_404;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_405;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_406;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_407;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_408;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_409;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_410;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_411;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_412;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_413;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_414;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_415;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_416;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_417;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_418;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_419;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_420;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_421;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_422;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_423;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_424;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_425;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_426;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_427;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_428;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_429;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_430;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_431;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_432;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_433;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_434;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_435;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_436;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_437;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_438;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_439;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_440;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_441;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_442;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_443;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_444;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_445;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_446;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_447;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_448;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_449;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_450;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_451;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_452;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_453;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_454;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_455;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_456;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_457;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_458;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_459;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_460;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_461;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_462;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_463;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_464;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_465;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_466;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_467;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_468;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_469;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_470;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_471;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_472;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_473;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_474;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_475;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_476;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_477;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_478;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_479;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_480;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_481;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_482;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_483;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_484;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_485;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_486;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_487;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_488;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_489;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_490;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_491;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_492;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_493;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_494;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_495;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_496;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_497;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_498;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_499;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_500;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_501;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_502;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_503;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_504;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_505;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_506;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_507;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_508;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_509;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_510;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, double, empty, empty> type_v_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<double>, empty, empty> type_v_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, var, empty, empty> type_v_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<var>, empty, empty> type_v_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, double, empty, empty> type_v_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, var, empty, empty> type_v_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, double, empty, empty> type_v_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<double>, empty, empty> type_v_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, var, empty, empty> type_v_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<var>, empty, empty> type_v_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, double, empty, empty> type_v_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, var, empty, empty> type_v_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_575;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, double, empty, empty> type_v_576;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_577;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_578;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_579;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, var, empty, empty> type_v_580;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_581;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_582;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_583;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_584;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_585;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_586;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_587;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_588;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_589;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_590;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_591;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_592;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_593;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_594;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_595;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_596;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_597;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_598;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_599;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_400> AgradCdfBetaBinomial_v_400;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_401> AgradCdfBetaBinomial_v_401;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_402> AgradCdfBetaBinomial_v_402;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_403> AgradCdfBetaBinomial_v_403;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_404> AgradCdfBetaBinomial_v_404;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_405> AgradCdfBetaBinomial_v_405;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_406> AgradCdfBetaBinomial_v_406;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_407> AgradCdfBetaBinomial_v_407;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_408> AgradCdfBetaBinomial_v_408;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_409> AgradCdfBetaBinomial_v_409;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_410> AgradCdfBetaBinomial_v_410;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_411> AgradCdfBetaBinomial_v_411;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_412> AgradCdfBetaBinomial_v_412;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_413> AgradCdfBetaBinomial_v_413;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_414> AgradCdfBetaBinomial_v_414;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_415> AgradCdfBetaBinomial_v_415;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_416> AgradCdfBetaBinomial_v_416;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_417> AgradCdfBetaBinomial_v_417;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_418> AgradCdfBetaBinomial_v_418;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_419> AgradCdfBetaBinomial_v_419;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_420> AgradCdfBetaBinomial_v_420;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_421> AgradCdfBetaBinomial_v_421;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_422> AgradCdfBetaBinomial_v_422;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_423> AgradCdfBetaBinomial_v_423;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_424> AgradCdfBetaBinomial_v_424;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_425> AgradCdfBetaBinomial_v_425;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_426> AgradCdfBetaBinomial_v_426;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_427> AgradCdfBetaBinomial_v_427;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_428> AgradCdfBetaBinomial_v_428;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_429> AgradCdfBetaBinomial_v_429;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_430> AgradCdfBetaBinomial_v_430;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_431> AgradCdfBetaBinomial_v_431;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_432> AgradCdfBetaBinomial_v_432;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_433> AgradCdfBetaBinomial_v_433;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_434> AgradCdfBetaBinomial_v_434;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_435> AgradCdfBetaBinomial_v_435;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_436> AgradCdfBetaBinomial_v_436;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_437> AgradCdfBetaBinomial_v_437;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_438> AgradCdfBetaBinomial_v_438;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_439> AgradCdfBetaBinomial_v_439;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_440> AgradCdfBetaBinomial_v_440;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_441> AgradCdfBetaBinomial_v_441;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_442> AgradCdfBetaBinomial_v_442;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_443> AgradCdfBetaBinomial_v_443;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_444> AgradCdfBetaBinomial_v_444;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_445> AgradCdfBetaBinomial_v_445;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_446> AgradCdfBetaBinomial_v_446;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_447> AgradCdfBetaBinomial_v_447;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_448> AgradCdfBetaBinomial_v_448;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_449> AgradCdfBetaBinomial_v_449;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_450> AgradCdfBetaBinomial_v_450;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_451> AgradCdfBetaBinomial_v_451;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_452> AgradCdfBetaBinomial_v_452;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_453> AgradCdfBetaBinomial_v_453;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_454> AgradCdfBetaBinomial_v_454;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_455> AgradCdfBetaBinomial_v_455;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_456> AgradCdfBetaBinomial_v_456;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_457> AgradCdfBetaBinomial_v_457;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_458> AgradCdfBetaBinomial_v_458;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_459> AgradCdfBetaBinomial_v_459;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_460> AgradCdfBetaBinomial_v_460;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_461> AgradCdfBetaBinomial_v_461;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_462> AgradCdfBetaBinomial_v_462;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_463> AgradCdfBetaBinomial_v_463;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_464> AgradCdfBetaBinomial_v_464;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_465> AgradCdfBetaBinomial_v_465;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_466> AgradCdfBetaBinomial_v_466;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_467> AgradCdfBetaBinomial_v_467;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_468> AgradCdfBetaBinomial_v_468;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_469> AgradCdfBetaBinomial_v_469;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_470> AgradCdfBetaBinomial_v_470;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_471> AgradCdfBetaBinomial_v_471;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_472> AgradCdfBetaBinomial_v_472;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_473> AgradCdfBetaBinomial_v_473;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_474> AgradCdfBetaBinomial_v_474;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_475> AgradCdfBetaBinomial_v_475;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_476> AgradCdfBetaBinomial_v_476;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_477> AgradCdfBetaBinomial_v_477;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_478> AgradCdfBetaBinomial_v_478;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_479> AgradCdfBetaBinomial_v_479;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_480> AgradCdfBetaBinomial_v_480;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_481> AgradCdfBetaBinomial_v_481;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_482> AgradCdfBetaBinomial_v_482;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_483> AgradCdfBetaBinomial_v_483;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_484> AgradCdfBetaBinomial_v_484;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_485> AgradCdfBetaBinomial_v_485;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_486> AgradCdfBetaBinomial_v_486;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_487> AgradCdfBetaBinomial_v_487;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_488> AgradCdfBetaBinomial_v_488;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_489> AgradCdfBetaBinomial_v_489;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_490> AgradCdfBetaBinomial_v_490;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_491> AgradCdfBetaBinomial_v_491;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_492> AgradCdfBetaBinomial_v_492;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_493> AgradCdfBetaBinomial_v_493;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_494> AgradCdfBetaBinomial_v_494;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_495> AgradCdfBetaBinomial_v_495;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_496> AgradCdfBetaBinomial_v_496;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_497> AgradCdfBetaBinomial_v_497;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_498> AgradCdfBetaBinomial_v_498;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_499> AgradCdfBetaBinomial_v_499;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_500> AgradCdfBetaBinomial_v_500;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_501> AgradCdfBetaBinomial_v_501;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_502> AgradCdfBetaBinomial_v_502;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_503> AgradCdfBetaBinomial_v_503;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_504> AgradCdfBetaBinomial_v_504;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_505> AgradCdfBetaBinomial_v_505;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_506> AgradCdfBetaBinomial_v_506;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_507> AgradCdfBetaBinomial_v_507;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_508> AgradCdfBetaBinomial_v_508;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_509> AgradCdfBetaBinomial_v_509;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_510> AgradCdfBetaBinomial_v_510;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_511> AgradCdfBetaBinomial_v_511;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_512> AgradCdfBetaBinomial_v_512;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_513> AgradCdfBetaBinomial_v_513;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_514> AgradCdfBetaBinomial_v_514;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_515> AgradCdfBetaBinomial_v_515;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_516> AgradCdfBetaBinomial_v_516;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_517> AgradCdfBetaBinomial_v_517;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_518> AgradCdfBetaBinomial_v_518;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_519> AgradCdfBetaBinomial_v_519;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_520> AgradCdfBetaBinomial_v_520;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_521> AgradCdfBetaBinomial_v_521;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_522> AgradCdfBetaBinomial_v_522;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_523> AgradCdfBetaBinomial_v_523;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_524> AgradCdfBetaBinomial_v_524;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_525> AgradCdfBetaBinomial_v_525;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_526> AgradCdfBetaBinomial_v_526;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_527> AgradCdfBetaBinomial_v_527;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_528> AgradCdfBetaBinomial_v_528;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_529> AgradCdfBetaBinomial_v_529;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_530> AgradCdfBetaBinomial_v_530;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_531> AgradCdfBetaBinomial_v_531;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_532> AgradCdfBetaBinomial_v_532;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_533> AgradCdfBetaBinomial_v_533;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_534> AgradCdfBetaBinomial_v_534;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_535> AgradCdfBetaBinomial_v_535;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_536> AgradCdfBetaBinomial_v_536;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_537> AgradCdfBetaBinomial_v_537;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_538> AgradCdfBetaBinomial_v_538;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_539> AgradCdfBetaBinomial_v_539;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_540> AgradCdfBetaBinomial_v_540;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_541> AgradCdfBetaBinomial_v_541;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_542> AgradCdfBetaBinomial_v_542;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_543> AgradCdfBetaBinomial_v_543;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_544> AgradCdfBetaBinomial_v_544;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_545> AgradCdfBetaBinomial_v_545;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_546> AgradCdfBetaBinomial_v_546;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_547> AgradCdfBetaBinomial_v_547;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_548> AgradCdfBetaBinomial_v_548;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_549> AgradCdfBetaBinomial_v_549;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_550> AgradCdfBetaBinomial_v_550;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_551> AgradCdfBetaBinomial_v_551;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_552> AgradCdfBetaBinomial_v_552;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_553> AgradCdfBetaBinomial_v_553;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_554> AgradCdfBetaBinomial_v_554;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_555> AgradCdfBetaBinomial_v_555;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_556> AgradCdfBetaBinomial_v_556;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_557> AgradCdfBetaBinomial_v_557;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_558> AgradCdfBetaBinomial_v_558;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_559> AgradCdfBetaBinomial_v_559;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_560> AgradCdfBetaBinomial_v_560;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_561> AgradCdfBetaBinomial_v_561;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_562> AgradCdfBetaBinomial_v_562;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_563> AgradCdfBetaBinomial_v_563;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_564> AgradCdfBetaBinomial_v_564;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_565> AgradCdfBetaBinomial_v_565;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_566> AgradCdfBetaBinomial_v_566;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_567> AgradCdfBetaBinomial_v_567;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_568> AgradCdfBetaBinomial_v_568;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_569> AgradCdfBetaBinomial_v_569;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_570> AgradCdfBetaBinomial_v_570;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_571> AgradCdfBetaBinomial_v_571;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_572> AgradCdfBetaBinomial_v_572;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_573> AgradCdfBetaBinomial_v_573;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_574> AgradCdfBetaBinomial_v_574;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_575> AgradCdfBetaBinomial_v_575;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_576> AgradCdfBetaBinomial_v_576;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_577> AgradCdfBetaBinomial_v_577;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_578> AgradCdfBetaBinomial_v_578;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_579> AgradCdfBetaBinomial_v_579;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_580> AgradCdfBetaBinomial_v_580;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_581> AgradCdfBetaBinomial_v_581;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_582> AgradCdfBetaBinomial_v_582;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_583> AgradCdfBetaBinomial_v_583;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_584> AgradCdfBetaBinomial_v_584;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_585> AgradCdfBetaBinomial_v_585;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_586> AgradCdfBetaBinomial_v_586;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_587> AgradCdfBetaBinomial_v_587;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_588> AgradCdfBetaBinomial_v_588;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_589> AgradCdfBetaBinomial_v_589;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_590> AgradCdfBetaBinomial_v_590;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_591> AgradCdfBetaBinomial_v_591;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_592> AgradCdfBetaBinomial_v_592;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_593> AgradCdfBetaBinomial_v_593;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_594> AgradCdfBetaBinomial_v_594;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_595> AgradCdfBetaBinomial_v_595;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_596> AgradCdfBetaBinomial_v_596;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_597> AgradCdfBetaBinomial_v_597;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_598> AgradCdfBetaBinomial_v_598;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_599> AgradCdfBetaBinomial_v_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_400, AgradCdfTestFixture, AgradCdfBetaBinomial_v_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_401, AgradCdfTestFixture, AgradCdfBetaBinomial_v_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_402, AgradCdfTestFixture, AgradCdfBetaBinomial_v_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_403, AgradCdfTestFixture, AgradCdfBetaBinomial_v_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_404, AgradCdfTestFixture, AgradCdfBetaBinomial_v_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_405, AgradCdfTestFixture, AgradCdfBetaBinomial_v_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_406, AgradCdfTestFixture, AgradCdfBetaBinomial_v_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_407, AgradCdfTestFixture, AgradCdfBetaBinomial_v_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_408, AgradCdfTestFixture, AgradCdfBetaBinomial_v_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_409, AgradCdfTestFixture, AgradCdfBetaBinomial_v_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_410, AgradCdfTestFixture, AgradCdfBetaBinomial_v_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_411, AgradCdfTestFixture, AgradCdfBetaBinomial_v_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_412, AgradCdfTestFixture, AgradCdfBetaBinomial_v_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_413, AgradCdfTestFixture, AgradCdfBetaBinomial_v_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_414, AgradCdfTestFixture, AgradCdfBetaBinomial_v_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_415, AgradCdfTestFixture, AgradCdfBetaBinomial_v_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_416, AgradCdfTestFixture, AgradCdfBetaBinomial_v_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_417, AgradCdfTestFixture, AgradCdfBetaBinomial_v_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_418, AgradCdfTestFixture, AgradCdfBetaBinomial_v_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_419, AgradCdfTestFixture, AgradCdfBetaBinomial_v_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_420, AgradCdfTestFixture, AgradCdfBetaBinomial_v_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_421, AgradCdfTestFixture, AgradCdfBetaBinomial_v_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_422, AgradCdfTestFixture, AgradCdfBetaBinomial_v_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_423, AgradCdfTestFixture, AgradCdfBetaBinomial_v_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_424, AgradCdfTestFixture, AgradCdfBetaBinomial_v_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_425, AgradCdfTestFixture, AgradCdfBetaBinomial_v_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_426, AgradCdfTestFixture, AgradCdfBetaBinomial_v_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_427, AgradCdfTestFixture, AgradCdfBetaBinomial_v_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_428, AgradCdfTestFixture, AgradCdfBetaBinomial_v_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_429, AgradCdfTestFixture, AgradCdfBetaBinomial_v_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_430, AgradCdfTestFixture, AgradCdfBetaBinomial_v_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_431, AgradCdfTestFixture, AgradCdfBetaBinomial_v_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_432, AgradCdfTestFixture, AgradCdfBetaBinomial_v_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_433, AgradCdfTestFixture, AgradCdfBetaBinomial_v_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_434, AgradCdfTestFixture, AgradCdfBetaBinomial_v_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_435, AgradCdfTestFixture, AgradCdfBetaBinomial_v_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_436, AgradCdfTestFixture, AgradCdfBetaBinomial_v_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_437, AgradCdfTestFixture, AgradCdfBetaBinomial_v_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_438, AgradCdfTestFixture, AgradCdfBetaBinomial_v_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_439, AgradCdfTestFixture, AgradCdfBetaBinomial_v_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_440, AgradCdfTestFixture, AgradCdfBetaBinomial_v_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_441, AgradCdfTestFixture, AgradCdfBetaBinomial_v_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_442, AgradCdfTestFixture, AgradCdfBetaBinomial_v_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_443, AgradCdfTestFixture, AgradCdfBetaBinomial_v_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_444, AgradCdfTestFixture, AgradCdfBetaBinomial_v_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_445, AgradCdfTestFixture, AgradCdfBetaBinomial_v_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_446, AgradCdfTestFixture, AgradCdfBetaBinomial_v_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_447, AgradCdfTestFixture, AgradCdfBetaBinomial_v_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_448, AgradCdfTestFixture, AgradCdfBetaBinomial_v_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_449, AgradCdfTestFixture, AgradCdfBetaBinomial_v_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_450, AgradCdfTestFixture, AgradCdfBetaBinomial_v_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_451, AgradCdfTestFixture, AgradCdfBetaBinomial_v_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_452, AgradCdfTestFixture, AgradCdfBetaBinomial_v_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_453, AgradCdfTestFixture, AgradCdfBetaBinomial_v_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_454, AgradCdfTestFixture, AgradCdfBetaBinomial_v_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_455, AgradCdfTestFixture, AgradCdfBetaBinomial_v_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_456, AgradCdfTestFixture, AgradCdfBetaBinomial_v_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_457, AgradCdfTestFixture, AgradCdfBetaBinomial_v_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_458, AgradCdfTestFixture, AgradCdfBetaBinomial_v_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_459, AgradCdfTestFixture, AgradCdfBetaBinomial_v_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_460, AgradCdfTestFixture, AgradCdfBetaBinomial_v_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_461, AgradCdfTestFixture, AgradCdfBetaBinomial_v_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_462, AgradCdfTestFixture, AgradCdfBetaBinomial_v_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_463, AgradCdfTestFixture, AgradCdfBetaBinomial_v_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_464, AgradCdfTestFixture, AgradCdfBetaBinomial_v_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_465, AgradCdfTestFixture, AgradCdfBetaBinomial_v_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_466, AgradCdfTestFixture, AgradCdfBetaBinomial_v_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_467, AgradCdfTestFixture, AgradCdfBetaBinomial_v_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_468, AgradCdfTestFixture, AgradCdfBetaBinomial_v_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_469, AgradCdfTestFixture, AgradCdfBetaBinomial_v_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_470, AgradCdfTestFixture, AgradCdfBetaBinomial_v_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_471, AgradCdfTestFixture, AgradCdfBetaBinomial_v_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_472, AgradCdfTestFixture, AgradCdfBetaBinomial_v_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_473, AgradCdfTestFixture, AgradCdfBetaBinomial_v_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_474, AgradCdfTestFixture, AgradCdfBetaBinomial_v_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_475, AgradCdfTestFixture, AgradCdfBetaBinomial_v_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_476, AgradCdfTestFixture, AgradCdfBetaBinomial_v_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_477, AgradCdfTestFixture, AgradCdfBetaBinomial_v_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_478, AgradCdfTestFixture, AgradCdfBetaBinomial_v_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_479, AgradCdfTestFixture, AgradCdfBetaBinomial_v_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_480, AgradCdfTestFixture, AgradCdfBetaBinomial_v_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_481, AgradCdfTestFixture, AgradCdfBetaBinomial_v_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_482, AgradCdfTestFixture, AgradCdfBetaBinomial_v_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_483, AgradCdfTestFixture, AgradCdfBetaBinomial_v_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_484, AgradCdfTestFixture, AgradCdfBetaBinomial_v_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_485, AgradCdfTestFixture, AgradCdfBetaBinomial_v_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_486, AgradCdfTestFixture, AgradCdfBetaBinomial_v_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_487, AgradCdfTestFixture, AgradCdfBetaBinomial_v_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_488, AgradCdfTestFixture, AgradCdfBetaBinomial_v_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_489, AgradCdfTestFixture, AgradCdfBetaBinomial_v_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_490, AgradCdfTestFixture, AgradCdfBetaBinomial_v_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_491, AgradCdfTestFixture, AgradCdfBetaBinomial_v_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_492, AgradCdfTestFixture, AgradCdfBetaBinomial_v_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_493, AgradCdfTestFixture, AgradCdfBetaBinomial_v_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_494, AgradCdfTestFixture, AgradCdfBetaBinomial_v_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_495, AgradCdfTestFixture, AgradCdfBetaBinomial_v_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_496, AgradCdfTestFixture, AgradCdfBetaBinomial_v_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_497, AgradCdfTestFixture, AgradCdfBetaBinomial_v_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_498, AgradCdfTestFixture, AgradCdfBetaBinomial_v_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_499, AgradCdfTestFixture, AgradCdfBetaBinomial_v_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_500, AgradCdfTestFixture, AgradCdfBetaBinomial_v_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_501, AgradCdfTestFixture, AgradCdfBetaBinomial_v_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_502, AgradCdfTestFixture, AgradCdfBetaBinomial_v_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_503, AgradCdfTestFixture, AgradCdfBetaBinomial_v_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_504, AgradCdfTestFixture, AgradCdfBetaBinomial_v_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_505, AgradCdfTestFixture, AgradCdfBetaBinomial_v_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_506, AgradCdfTestFixture, AgradCdfBetaBinomial_v_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_507, AgradCdfTestFixture, AgradCdfBetaBinomial_v_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_508, AgradCdfTestFixture, AgradCdfBetaBinomial_v_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_509, AgradCdfTestFixture, AgradCdfBetaBinomial_v_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_510, AgradCdfTestFixture, AgradCdfBetaBinomial_v_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_511, AgradCdfTestFixture, AgradCdfBetaBinomial_v_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_512, AgradCdfTestFixture, AgradCdfBetaBinomial_v_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_513, AgradCdfTestFixture, AgradCdfBetaBinomial_v_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_514, AgradCdfTestFixture, AgradCdfBetaBinomial_v_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_515, AgradCdfTestFixture, AgradCdfBetaBinomial_v_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_516, AgradCdfTestFixture, AgradCdfBetaBinomial_v_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_517, AgradCdfTestFixture, AgradCdfBetaBinomial_v_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_518, AgradCdfTestFixture, AgradCdfBetaBinomial_v_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_519, AgradCdfTestFixture, AgradCdfBetaBinomial_v_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_520, AgradCdfTestFixture, AgradCdfBetaBinomial_v_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_521, AgradCdfTestFixture, AgradCdfBetaBinomial_v_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_522, AgradCdfTestFixture, AgradCdfBetaBinomial_v_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_523, AgradCdfTestFixture, AgradCdfBetaBinomial_v_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_524, AgradCdfTestFixture, AgradCdfBetaBinomial_v_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_525, AgradCdfTestFixture, AgradCdfBetaBinomial_v_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_526, AgradCdfTestFixture, AgradCdfBetaBinomial_v_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_527, AgradCdfTestFixture, AgradCdfBetaBinomial_v_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_528, AgradCdfTestFixture, AgradCdfBetaBinomial_v_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_529, AgradCdfTestFixture, AgradCdfBetaBinomial_v_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_530, AgradCdfTestFixture, AgradCdfBetaBinomial_v_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_531, AgradCdfTestFixture, AgradCdfBetaBinomial_v_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_532, AgradCdfTestFixture, AgradCdfBetaBinomial_v_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_533, AgradCdfTestFixture, AgradCdfBetaBinomial_v_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_534, AgradCdfTestFixture, AgradCdfBetaBinomial_v_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_535, AgradCdfTestFixture, AgradCdfBetaBinomial_v_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_536, AgradCdfTestFixture, AgradCdfBetaBinomial_v_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_537, AgradCdfTestFixture, AgradCdfBetaBinomial_v_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_538, AgradCdfTestFixture, AgradCdfBetaBinomial_v_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_539, AgradCdfTestFixture, AgradCdfBetaBinomial_v_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_540, AgradCdfTestFixture, AgradCdfBetaBinomial_v_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_541, AgradCdfTestFixture, AgradCdfBetaBinomial_v_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_542, AgradCdfTestFixture, AgradCdfBetaBinomial_v_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_543, AgradCdfTestFixture, AgradCdfBetaBinomial_v_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_544, AgradCdfTestFixture, AgradCdfBetaBinomial_v_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_545, AgradCdfTestFixture, AgradCdfBetaBinomial_v_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_546, AgradCdfTestFixture, AgradCdfBetaBinomial_v_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_547, AgradCdfTestFixture, AgradCdfBetaBinomial_v_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_548, AgradCdfTestFixture, AgradCdfBetaBinomial_v_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_549, AgradCdfTestFixture, AgradCdfBetaBinomial_v_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_550, AgradCdfTestFixture, AgradCdfBetaBinomial_v_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_551, AgradCdfTestFixture, AgradCdfBetaBinomial_v_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_552, AgradCdfTestFixture, AgradCdfBetaBinomial_v_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_553, AgradCdfTestFixture, AgradCdfBetaBinomial_v_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_554, AgradCdfTestFixture, AgradCdfBetaBinomial_v_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_555, AgradCdfTestFixture, AgradCdfBetaBinomial_v_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_556, AgradCdfTestFixture, AgradCdfBetaBinomial_v_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_557, AgradCdfTestFixture, AgradCdfBetaBinomial_v_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_558, AgradCdfTestFixture, AgradCdfBetaBinomial_v_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_559, AgradCdfTestFixture, AgradCdfBetaBinomial_v_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_560, AgradCdfTestFixture, AgradCdfBetaBinomial_v_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_561, AgradCdfTestFixture, AgradCdfBetaBinomial_v_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_562, AgradCdfTestFixture, AgradCdfBetaBinomial_v_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_563, AgradCdfTestFixture, AgradCdfBetaBinomial_v_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_564, AgradCdfTestFixture, AgradCdfBetaBinomial_v_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_565, AgradCdfTestFixture, AgradCdfBetaBinomial_v_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_566, AgradCdfTestFixture, AgradCdfBetaBinomial_v_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_567, AgradCdfTestFixture, AgradCdfBetaBinomial_v_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_568, AgradCdfTestFixture, AgradCdfBetaBinomial_v_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_569, AgradCdfTestFixture, AgradCdfBetaBinomial_v_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_570, AgradCdfTestFixture, AgradCdfBetaBinomial_v_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_571, AgradCdfTestFixture, AgradCdfBetaBinomial_v_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_572, AgradCdfTestFixture, AgradCdfBetaBinomial_v_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_573, AgradCdfTestFixture, AgradCdfBetaBinomial_v_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_574, AgradCdfTestFixture, AgradCdfBetaBinomial_v_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_575, AgradCdfTestFixture, AgradCdfBetaBinomial_v_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_576, AgradCdfTestFixture, AgradCdfBetaBinomial_v_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_577, AgradCdfTestFixture, AgradCdfBetaBinomial_v_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_578, AgradCdfTestFixture, AgradCdfBetaBinomial_v_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_579, AgradCdfTestFixture, AgradCdfBetaBinomial_v_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_580, AgradCdfTestFixture, AgradCdfBetaBinomial_v_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_581, AgradCdfTestFixture, AgradCdfBetaBinomial_v_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_582, AgradCdfTestFixture, AgradCdfBetaBinomial_v_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_583, AgradCdfTestFixture, AgradCdfBetaBinomial_v_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_584, AgradCdfTestFixture, AgradCdfBetaBinomial_v_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_585, AgradCdfTestFixture, AgradCdfBetaBinomial_v_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_586, AgradCdfTestFixture, AgradCdfBetaBinomial_v_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_587, AgradCdfTestFixture, AgradCdfBetaBinomial_v_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_588, AgradCdfTestFixture, AgradCdfBetaBinomial_v_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_589, AgradCdfTestFixture, AgradCdfBetaBinomial_v_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_590, AgradCdfTestFixture, AgradCdfBetaBinomial_v_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_591, AgradCdfTestFixture, AgradCdfBetaBinomial_v_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_592, AgradCdfTestFixture, AgradCdfBetaBinomial_v_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_593, AgradCdfTestFixture, AgradCdfBetaBinomial_v_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_594, AgradCdfTestFixture, AgradCdfBetaBinomial_v_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_595, AgradCdfTestFixture, AgradCdfBetaBinomial_v_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_596, AgradCdfTestFixture, AgradCdfBetaBinomial_v_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_597, AgradCdfTestFixture, AgradCdfBetaBinomial_v_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_598, AgradCdfTestFixture, AgradCdfBetaBinomial_v_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_599, AgradCdfTestFixture, AgradCdfBetaBinomial_v_599);

