#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, double, empty, empty> type_ffv_400;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, std::vector<double>, empty, empty> type_ffv_401;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_402;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_403;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty> type_ffv_404;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_405;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_406;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_407;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, double, empty, empty> type_ffv_408;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty> type_ffv_409;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_410;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_411;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty> type_ffv_412;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_413;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_414;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_415;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffv_416;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffv_417;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_418;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_419;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty> type_ffv_420;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_421;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_422;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_423;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffv_424;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffv_425;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_426;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_427;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty> type_ffv_428;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_429;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_430;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_431;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, fvar<fvar<var> >, empty, empty> type_ffv_432;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_433;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_434;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_435;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, fvar<fvar<var> >, empty, empty> type_ffv_436;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_437;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_438;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_439;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty> type_ffv_440;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_441;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_442;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_443;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty> type_ffv_444;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_445;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_446;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_447;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, double, empty, empty> type_ffv_448;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, std::vector<double>, empty, empty> type_ffv_449;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_450;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_451;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty> type_ffv_452;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_453;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_454;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_455;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, double, empty, empty> type_ffv_456;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty> type_ffv_457;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_458;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_459;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty> type_ffv_460;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_461;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_462;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_463;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffv_464;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffv_465;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_466;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_467;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty> type_ffv_468;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_469;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_470;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_471;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffv_472;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffv_473;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_474;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_475;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty> type_ffv_476;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_477;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_478;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_479;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty> type_ffv_480;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_481;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_482;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_483;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty> type_ffv_484;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_485;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_486;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_487;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty> type_ffv_488;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_489;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_490;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_491;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty> type_ffv_492;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty> type_ffv_493;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty> type_ffv_494;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty> type_ffv_495;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty> type_ffv_496;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty> type_ffv_497;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffv_498;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffv_499;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_400> AgradDistributionsBetaBinomial_ffv_400;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_401> AgradDistributionsBetaBinomial_ffv_401;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_402> AgradDistributionsBetaBinomial_ffv_402;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_403> AgradDistributionsBetaBinomial_ffv_403;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_404> AgradDistributionsBetaBinomial_ffv_404;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_405> AgradDistributionsBetaBinomial_ffv_405;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_406> AgradDistributionsBetaBinomial_ffv_406;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_407> AgradDistributionsBetaBinomial_ffv_407;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_408> AgradDistributionsBetaBinomial_ffv_408;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_409> AgradDistributionsBetaBinomial_ffv_409;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_410> AgradDistributionsBetaBinomial_ffv_410;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_411> AgradDistributionsBetaBinomial_ffv_411;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_412> AgradDistributionsBetaBinomial_ffv_412;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_413> AgradDistributionsBetaBinomial_ffv_413;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_414> AgradDistributionsBetaBinomial_ffv_414;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_415> AgradDistributionsBetaBinomial_ffv_415;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_416> AgradDistributionsBetaBinomial_ffv_416;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_417> AgradDistributionsBetaBinomial_ffv_417;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_418> AgradDistributionsBetaBinomial_ffv_418;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_419> AgradDistributionsBetaBinomial_ffv_419;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_420> AgradDistributionsBetaBinomial_ffv_420;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_421> AgradDistributionsBetaBinomial_ffv_421;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_422> AgradDistributionsBetaBinomial_ffv_422;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_423> AgradDistributionsBetaBinomial_ffv_423;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_424> AgradDistributionsBetaBinomial_ffv_424;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_425> AgradDistributionsBetaBinomial_ffv_425;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_426> AgradDistributionsBetaBinomial_ffv_426;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_427> AgradDistributionsBetaBinomial_ffv_427;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_428> AgradDistributionsBetaBinomial_ffv_428;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_429> AgradDistributionsBetaBinomial_ffv_429;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_430> AgradDistributionsBetaBinomial_ffv_430;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_431> AgradDistributionsBetaBinomial_ffv_431;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_432> AgradDistributionsBetaBinomial_ffv_432;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_433> AgradDistributionsBetaBinomial_ffv_433;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_434> AgradDistributionsBetaBinomial_ffv_434;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_435> AgradDistributionsBetaBinomial_ffv_435;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_436> AgradDistributionsBetaBinomial_ffv_436;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_437> AgradDistributionsBetaBinomial_ffv_437;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_438> AgradDistributionsBetaBinomial_ffv_438;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_439> AgradDistributionsBetaBinomial_ffv_439;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_440> AgradDistributionsBetaBinomial_ffv_440;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_441> AgradDistributionsBetaBinomial_ffv_441;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_442> AgradDistributionsBetaBinomial_ffv_442;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_443> AgradDistributionsBetaBinomial_ffv_443;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_444> AgradDistributionsBetaBinomial_ffv_444;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_445> AgradDistributionsBetaBinomial_ffv_445;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_446> AgradDistributionsBetaBinomial_ffv_446;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_447> AgradDistributionsBetaBinomial_ffv_447;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_448> AgradDistributionsBetaBinomial_ffv_448;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_449> AgradDistributionsBetaBinomial_ffv_449;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_450> AgradDistributionsBetaBinomial_ffv_450;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_451> AgradDistributionsBetaBinomial_ffv_451;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_452> AgradDistributionsBetaBinomial_ffv_452;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_453> AgradDistributionsBetaBinomial_ffv_453;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_454> AgradDistributionsBetaBinomial_ffv_454;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_455> AgradDistributionsBetaBinomial_ffv_455;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_456> AgradDistributionsBetaBinomial_ffv_456;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_457> AgradDistributionsBetaBinomial_ffv_457;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_458> AgradDistributionsBetaBinomial_ffv_458;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_459> AgradDistributionsBetaBinomial_ffv_459;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_460> AgradDistributionsBetaBinomial_ffv_460;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_461> AgradDistributionsBetaBinomial_ffv_461;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_462> AgradDistributionsBetaBinomial_ffv_462;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_463> AgradDistributionsBetaBinomial_ffv_463;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_464> AgradDistributionsBetaBinomial_ffv_464;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_465> AgradDistributionsBetaBinomial_ffv_465;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_466> AgradDistributionsBetaBinomial_ffv_466;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_467> AgradDistributionsBetaBinomial_ffv_467;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_468> AgradDistributionsBetaBinomial_ffv_468;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_469> AgradDistributionsBetaBinomial_ffv_469;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_470> AgradDistributionsBetaBinomial_ffv_470;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_471> AgradDistributionsBetaBinomial_ffv_471;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_472> AgradDistributionsBetaBinomial_ffv_472;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_473> AgradDistributionsBetaBinomial_ffv_473;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_474> AgradDistributionsBetaBinomial_ffv_474;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_475> AgradDistributionsBetaBinomial_ffv_475;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_476> AgradDistributionsBetaBinomial_ffv_476;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_477> AgradDistributionsBetaBinomial_ffv_477;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_478> AgradDistributionsBetaBinomial_ffv_478;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_479> AgradDistributionsBetaBinomial_ffv_479;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_480> AgradDistributionsBetaBinomial_ffv_480;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_481> AgradDistributionsBetaBinomial_ffv_481;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_482> AgradDistributionsBetaBinomial_ffv_482;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_483> AgradDistributionsBetaBinomial_ffv_483;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_484> AgradDistributionsBetaBinomial_ffv_484;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_485> AgradDistributionsBetaBinomial_ffv_485;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_486> AgradDistributionsBetaBinomial_ffv_486;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_487> AgradDistributionsBetaBinomial_ffv_487;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_488> AgradDistributionsBetaBinomial_ffv_488;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_489> AgradDistributionsBetaBinomial_ffv_489;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_490> AgradDistributionsBetaBinomial_ffv_490;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_491> AgradDistributionsBetaBinomial_ffv_491;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_492> AgradDistributionsBetaBinomial_ffv_492;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_493> AgradDistributionsBetaBinomial_ffv_493;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_494> AgradDistributionsBetaBinomial_ffv_494;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_495> AgradDistributionsBetaBinomial_ffv_495;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_496> AgradDistributionsBetaBinomial_ffv_496;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_497> AgradDistributionsBetaBinomial_ffv_497;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_498> AgradDistributionsBetaBinomial_ffv_498;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffv_499> AgradDistributionsBetaBinomial_ffv_499;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_400, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_401, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_402, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_403, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_404, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_405, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_406, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_407, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_408, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_409, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_410, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_411, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_412, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_413, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_414, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_415, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_416, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_417, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_418, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_419, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_420, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_421, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_422, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_423, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_424, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_425, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_426, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_427, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_428, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_429, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_430, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_431, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_432, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_433, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_434, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_435, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_436, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_437, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_438, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_439, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_440, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_441, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_442, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_443, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_444, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_445, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_446, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_447, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_448, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_449, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_450, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_451, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_452, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_453, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_454, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_455, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_456, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_457, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_458, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_459, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_460, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_461, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_462, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_463, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_464, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_465, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_466, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_467, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_468, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_469, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_470, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_471, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_472, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_473, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_474, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_475, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_476, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_477, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_478, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_479, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_480, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_481, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_482, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_483, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_484, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_485, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_486, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_487, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_488, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_489, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_490, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_491, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_492, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_493, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_494, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_495, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_496, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_497, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_498, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffv_499, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffv_499);

