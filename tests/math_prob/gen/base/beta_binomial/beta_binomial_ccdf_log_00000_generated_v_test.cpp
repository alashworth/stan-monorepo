#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_ccdf_log_test.hpp>

typedef boost::mpl::vector<int, int, double, double, empty, empty> type_v_0;
typedef boost::mpl::vector<int, int, double, std::vector<double>, empty, empty> type_v_1;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_2;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_3;
typedef boost::mpl::vector<int, int, double, var, empty, empty> type_v_4;
typedef boost::mpl::vector<int, int, double, std::vector<var>, empty, empty> type_v_5;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_6;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_7;
typedef boost::mpl::vector<int, int, std::vector<double>, double, empty, empty> type_v_8;
typedef boost::mpl::vector<int, int, std::vector<double>, std::vector<double>, empty, empty> type_v_9;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_10;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_11;
typedef boost::mpl::vector<int, int, std::vector<double>, var, empty, empty> type_v_12;
typedef boost::mpl::vector<int, int, std::vector<double>, std::vector<var>, empty, empty> type_v_13;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_14;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_15;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_16;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_17;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_18;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_19;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_20;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_21;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_22;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_23;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_24;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_25;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_26;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_27;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_28;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_29;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_30;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_31;
typedef boost::mpl::vector<int, int, var, double, empty, empty> type_v_32;
typedef boost::mpl::vector<int, int, var, std::vector<double>, empty, empty> type_v_33;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_34;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_35;
typedef boost::mpl::vector<int, int, var, var, empty, empty> type_v_36;
typedef boost::mpl::vector<int, int, var, std::vector<var>, empty, empty> type_v_37;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_38;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_39;
typedef boost::mpl::vector<int, int, std::vector<var>, double, empty, empty> type_v_40;
typedef boost::mpl::vector<int, int, std::vector<var>, std::vector<double>, empty, empty> type_v_41;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_42;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_43;
typedef boost::mpl::vector<int, int, std::vector<var>, var, empty, empty> type_v_44;
typedef boost::mpl::vector<int, int, std::vector<var>, std::vector<var>, empty, empty> type_v_45;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_46;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_47;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_48;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_49;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_50;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_51;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_52;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_53;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_54;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_55;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_56;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_57;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_58;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_59;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_60;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_61;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_62;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_63;
typedef boost::mpl::vector<int, std::vector<int>, double, double, empty, empty> type_v_64;
typedef boost::mpl::vector<int, std::vector<int>, double, std::vector<double>, empty, empty> type_v_65;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_66;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_67;
typedef boost::mpl::vector<int, std::vector<int>, double, var, empty, empty> type_v_68;
typedef boost::mpl::vector<int, std::vector<int>, double, std::vector<var>, empty, empty> type_v_69;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_70;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_71;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, double, empty, empty> type_v_72;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_73;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_74;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_75;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, var, empty, empty> type_v_76;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_77;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_78;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_79;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_80;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_81;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_82;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_83;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_84;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_85;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_86;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_87;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_88;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_89;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_90;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_91;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_92;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_93;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_94;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_95;
typedef boost::mpl::vector<int, std::vector<int>, var, double, empty, empty> type_v_96;
typedef boost::mpl::vector<int, std::vector<int>, var, std::vector<double>, empty, empty> type_v_97;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_98;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_99;
typedef boost::mpl::vector<int, std::vector<int>, var, var, empty, empty> type_v_100;
typedef boost::mpl::vector<int, std::vector<int>, var, std::vector<var>, empty, empty> type_v_101;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_102;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_103;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, double, empty, empty> type_v_104;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_105;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_106;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_107;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, var, empty, empty> type_v_108;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_109;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_110;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_111;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_112;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_113;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_114;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_115;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_116;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_117;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_118;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_119;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_120;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_121;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_122;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_123;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_124;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_125;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_126;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_127;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_128;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_129;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_130;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_131;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_132;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_133;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_134;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_135;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_136;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_137;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_138;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_139;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_140;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_141;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_142;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_143;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_144;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_145;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_146;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_147;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_148;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_149;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_150;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_151;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_152;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_153;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_154;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_155;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_156;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_157;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_158;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_159;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_160;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_161;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_162;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_163;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_164;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_165;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_166;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_167;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_168;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_169;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_170;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_171;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_172;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_173;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_174;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_175;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_176;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_177;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_178;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_179;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_180;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_181;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_182;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_183;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_184;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_185;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_186;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_187;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_188;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_189;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_190;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_191;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_192;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_193;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_194;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_195;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_196;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_197;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_198;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_199;

typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_0> AgradCcdfLogBetaBinomial_v_0;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_1> AgradCcdfLogBetaBinomial_v_1;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_2> AgradCcdfLogBetaBinomial_v_2;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_3> AgradCcdfLogBetaBinomial_v_3;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_4> AgradCcdfLogBetaBinomial_v_4;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_5> AgradCcdfLogBetaBinomial_v_5;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_6> AgradCcdfLogBetaBinomial_v_6;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_7> AgradCcdfLogBetaBinomial_v_7;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_8> AgradCcdfLogBetaBinomial_v_8;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_9> AgradCcdfLogBetaBinomial_v_9;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_10> AgradCcdfLogBetaBinomial_v_10;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_11> AgradCcdfLogBetaBinomial_v_11;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_12> AgradCcdfLogBetaBinomial_v_12;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_13> AgradCcdfLogBetaBinomial_v_13;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_14> AgradCcdfLogBetaBinomial_v_14;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_15> AgradCcdfLogBetaBinomial_v_15;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_16> AgradCcdfLogBetaBinomial_v_16;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_17> AgradCcdfLogBetaBinomial_v_17;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_18> AgradCcdfLogBetaBinomial_v_18;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_19> AgradCcdfLogBetaBinomial_v_19;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_20> AgradCcdfLogBetaBinomial_v_20;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_21> AgradCcdfLogBetaBinomial_v_21;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_22> AgradCcdfLogBetaBinomial_v_22;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_23> AgradCcdfLogBetaBinomial_v_23;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_24> AgradCcdfLogBetaBinomial_v_24;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_25> AgradCcdfLogBetaBinomial_v_25;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_26> AgradCcdfLogBetaBinomial_v_26;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_27> AgradCcdfLogBetaBinomial_v_27;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_28> AgradCcdfLogBetaBinomial_v_28;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_29> AgradCcdfLogBetaBinomial_v_29;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_30> AgradCcdfLogBetaBinomial_v_30;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_31> AgradCcdfLogBetaBinomial_v_31;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_32> AgradCcdfLogBetaBinomial_v_32;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_33> AgradCcdfLogBetaBinomial_v_33;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_34> AgradCcdfLogBetaBinomial_v_34;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_35> AgradCcdfLogBetaBinomial_v_35;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_36> AgradCcdfLogBetaBinomial_v_36;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_37> AgradCcdfLogBetaBinomial_v_37;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_38> AgradCcdfLogBetaBinomial_v_38;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_39> AgradCcdfLogBetaBinomial_v_39;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_40> AgradCcdfLogBetaBinomial_v_40;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_41> AgradCcdfLogBetaBinomial_v_41;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_42> AgradCcdfLogBetaBinomial_v_42;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_43> AgradCcdfLogBetaBinomial_v_43;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_44> AgradCcdfLogBetaBinomial_v_44;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_45> AgradCcdfLogBetaBinomial_v_45;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_46> AgradCcdfLogBetaBinomial_v_46;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_47> AgradCcdfLogBetaBinomial_v_47;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_48> AgradCcdfLogBetaBinomial_v_48;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_49> AgradCcdfLogBetaBinomial_v_49;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_50> AgradCcdfLogBetaBinomial_v_50;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_51> AgradCcdfLogBetaBinomial_v_51;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_52> AgradCcdfLogBetaBinomial_v_52;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_53> AgradCcdfLogBetaBinomial_v_53;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_54> AgradCcdfLogBetaBinomial_v_54;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_55> AgradCcdfLogBetaBinomial_v_55;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_56> AgradCcdfLogBetaBinomial_v_56;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_57> AgradCcdfLogBetaBinomial_v_57;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_58> AgradCcdfLogBetaBinomial_v_58;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_59> AgradCcdfLogBetaBinomial_v_59;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_60> AgradCcdfLogBetaBinomial_v_60;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_61> AgradCcdfLogBetaBinomial_v_61;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_62> AgradCcdfLogBetaBinomial_v_62;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_63> AgradCcdfLogBetaBinomial_v_63;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_64> AgradCcdfLogBetaBinomial_v_64;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_65> AgradCcdfLogBetaBinomial_v_65;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_66> AgradCcdfLogBetaBinomial_v_66;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_67> AgradCcdfLogBetaBinomial_v_67;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_68> AgradCcdfLogBetaBinomial_v_68;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_69> AgradCcdfLogBetaBinomial_v_69;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_70> AgradCcdfLogBetaBinomial_v_70;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_71> AgradCcdfLogBetaBinomial_v_71;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_72> AgradCcdfLogBetaBinomial_v_72;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_73> AgradCcdfLogBetaBinomial_v_73;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_74> AgradCcdfLogBetaBinomial_v_74;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_75> AgradCcdfLogBetaBinomial_v_75;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_76> AgradCcdfLogBetaBinomial_v_76;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_77> AgradCcdfLogBetaBinomial_v_77;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_78> AgradCcdfLogBetaBinomial_v_78;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_79> AgradCcdfLogBetaBinomial_v_79;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_80> AgradCcdfLogBetaBinomial_v_80;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_81> AgradCcdfLogBetaBinomial_v_81;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_82> AgradCcdfLogBetaBinomial_v_82;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_83> AgradCcdfLogBetaBinomial_v_83;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_84> AgradCcdfLogBetaBinomial_v_84;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_85> AgradCcdfLogBetaBinomial_v_85;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_86> AgradCcdfLogBetaBinomial_v_86;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_87> AgradCcdfLogBetaBinomial_v_87;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_88> AgradCcdfLogBetaBinomial_v_88;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_89> AgradCcdfLogBetaBinomial_v_89;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_90> AgradCcdfLogBetaBinomial_v_90;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_91> AgradCcdfLogBetaBinomial_v_91;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_92> AgradCcdfLogBetaBinomial_v_92;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_93> AgradCcdfLogBetaBinomial_v_93;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_94> AgradCcdfLogBetaBinomial_v_94;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_95> AgradCcdfLogBetaBinomial_v_95;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_96> AgradCcdfLogBetaBinomial_v_96;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_97> AgradCcdfLogBetaBinomial_v_97;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_98> AgradCcdfLogBetaBinomial_v_98;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_99> AgradCcdfLogBetaBinomial_v_99;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_100> AgradCcdfLogBetaBinomial_v_100;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_101> AgradCcdfLogBetaBinomial_v_101;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_102> AgradCcdfLogBetaBinomial_v_102;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_103> AgradCcdfLogBetaBinomial_v_103;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_104> AgradCcdfLogBetaBinomial_v_104;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_105> AgradCcdfLogBetaBinomial_v_105;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_106> AgradCcdfLogBetaBinomial_v_106;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_107> AgradCcdfLogBetaBinomial_v_107;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_108> AgradCcdfLogBetaBinomial_v_108;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_109> AgradCcdfLogBetaBinomial_v_109;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_110> AgradCcdfLogBetaBinomial_v_110;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_111> AgradCcdfLogBetaBinomial_v_111;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_112> AgradCcdfLogBetaBinomial_v_112;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_113> AgradCcdfLogBetaBinomial_v_113;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_114> AgradCcdfLogBetaBinomial_v_114;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_115> AgradCcdfLogBetaBinomial_v_115;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_116> AgradCcdfLogBetaBinomial_v_116;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_117> AgradCcdfLogBetaBinomial_v_117;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_118> AgradCcdfLogBetaBinomial_v_118;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_119> AgradCcdfLogBetaBinomial_v_119;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_120> AgradCcdfLogBetaBinomial_v_120;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_121> AgradCcdfLogBetaBinomial_v_121;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_122> AgradCcdfLogBetaBinomial_v_122;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_123> AgradCcdfLogBetaBinomial_v_123;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_124> AgradCcdfLogBetaBinomial_v_124;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_125> AgradCcdfLogBetaBinomial_v_125;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_126> AgradCcdfLogBetaBinomial_v_126;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_127> AgradCcdfLogBetaBinomial_v_127;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_128> AgradCcdfLogBetaBinomial_v_128;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_129> AgradCcdfLogBetaBinomial_v_129;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_130> AgradCcdfLogBetaBinomial_v_130;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_131> AgradCcdfLogBetaBinomial_v_131;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_132> AgradCcdfLogBetaBinomial_v_132;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_133> AgradCcdfLogBetaBinomial_v_133;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_134> AgradCcdfLogBetaBinomial_v_134;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_135> AgradCcdfLogBetaBinomial_v_135;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_136> AgradCcdfLogBetaBinomial_v_136;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_137> AgradCcdfLogBetaBinomial_v_137;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_138> AgradCcdfLogBetaBinomial_v_138;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_139> AgradCcdfLogBetaBinomial_v_139;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_140> AgradCcdfLogBetaBinomial_v_140;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_141> AgradCcdfLogBetaBinomial_v_141;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_142> AgradCcdfLogBetaBinomial_v_142;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_143> AgradCcdfLogBetaBinomial_v_143;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_144> AgradCcdfLogBetaBinomial_v_144;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_145> AgradCcdfLogBetaBinomial_v_145;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_146> AgradCcdfLogBetaBinomial_v_146;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_147> AgradCcdfLogBetaBinomial_v_147;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_148> AgradCcdfLogBetaBinomial_v_148;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_149> AgradCcdfLogBetaBinomial_v_149;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_150> AgradCcdfLogBetaBinomial_v_150;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_151> AgradCcdfLogBetaBinomial_v_151;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_152> AgradCcdfLogBetaBinomial_v_152;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_153> AgradCcdfLogBetaBinomial_v_153;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_154> AgradCcdfLogBetaBinomial_v_154;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_155> AgradCcdfLogBetaBinomial_v_155;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_156> AgradCcdfLogBetaBinomial_v_156;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_157> AgradCcdfLogBetaBinomial_v_157;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_158> AgradCcdfLogBetaBinomial_v_158;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_159> AgradCcdfLogBetaBinomial_v_159;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_160> AgradCcdfLogBetaBinomial_v_160;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_161> AgradCcdfLogBetaBinomial_v_161;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_162> AgradCcdfLogBetaBinomial_v_162;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_163> AgradCcdfLogBetaBinomial_v_163;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_164> AgradCcdfLogBetaBinomial_v_164;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_165> AgradCcdfLogBetaBinomial_v_165;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_166> AgradCcdfLogBetaBinomial_v_166;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_167> AgradCcdfLogBetaBinomial_v_167;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_168> AgradCcdfLogBetaBinomial_v_168;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_169> AgradCcdfLogBetaBinomial_v_169;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_170> AgradCcdfLogBetaBinomial_v_170;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_171> AgradCcdfLogBetaBinomial_v_171;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_172> AgradCcdfLogBetaBinomial_v_172;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_173> AgradCcdfLogBetaBinomial_v_173;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_174> AgradCcdfLogBetaBinomial_v_174;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_175> AgradCcdfLogBetaBinomial_v_175;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_176> AgradCcdfLogBetaBinomial_v_176;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_177> AgradCcdfLogBetaBinomial_v_177;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_178> AgradCcdfLogBetaBinomial_v_178;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_179> AgradCcdfLogBetaBinomial_v_179;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_180> AgradCcdfLogBetaBinomial_v_180;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_181> AgradCcdfLogBetaBinomial_v_181;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_182> AgradCcdfLogBetaBinomial_v_182;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_183> AgradCcdfLogBetaBinomial_v_183;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_184> AgradCcdfLogBetaBinomial_v_184;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_185> AgradCcdfLogBetaBinomial_v_185;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_186> AgradCcdfLogBetaBinomial_v_186;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_187> AgradCcdfLogBetaBinomial_v_187;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_188> AgradCcdfLogBetaBinomial_v_188;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_189> AgradCcdfLogBetaBinomial_v_189;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_190> AgradCcdfLogBetaBinomial_v_190;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_191> AgradCcdfLogBetaBinomial_v_191;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_192> AgradCcdfLogBetaBinomial_v_192;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_193> AgradCcdfLogBetaBinomial_v_193;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_194> AgradCcdfLogBetaBinomial_v_194;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_195> AgradCcdfLogBetaBinomial_v_195;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_196> AgradCcdfLogBetaBinomial_v_196;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_197> AgradCcdfLogBetaBinomial_v_197;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_198> AgradCcdfLogBetaBinomial_v_198;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_199> AgradCcdfLogBetaBinomial_v_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_0, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_1, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_2, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_3, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_4, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_5, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_6, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_7, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_8, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_9, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_10, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_11, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_12, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_13, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_14, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_15, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_16, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_17, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_18, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_19, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_20, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_21, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_22, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_23, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_24, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_25, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_26, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_27, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_28, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_29, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_30, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_31, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_32, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_33, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_34, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_35, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_36, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_37, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_38, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_39, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_40, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_41, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_42, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_43, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_44, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_45, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_46, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_47, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_48, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_49, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_50, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_51, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_52, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_53, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_54, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_55, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_56, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_57, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_58, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_59, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_60, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_61, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_62, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_63, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_64, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_65, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_66, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_67, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_68, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_69, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_70, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_71, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_72, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_73, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_74, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_75, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_76, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_77, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_78, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_79, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_80, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_81, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_82, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_83, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_84, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_85, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_86, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_87, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_88, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_89, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_90, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_91, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_92, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_93, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_94, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_95, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_96, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_97, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_98, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_99, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_100, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_101, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_102, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_103, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_104, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_105, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_106, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_107, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_108, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_109, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_110, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_111, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_112, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_113, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_114, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_115, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_116, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_117, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_118, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_119, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_120, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_121, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_122, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_123, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_124, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_125, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_126, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_127, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_128, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_129, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_130, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_131, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_132, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_133, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_134, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_135, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_136, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_137, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_138, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_139, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_140, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_141, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_142, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_143, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_144, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_145, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_146, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_147, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_148, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_149, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_150, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_151, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_152, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_153, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_154, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_155, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_156, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_157, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_158, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_159, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_160, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_161, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_162, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_163, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_164, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_165, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_166, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_167, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_168, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_169, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_170, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_171, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_172, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_173, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_174, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_175, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_176, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_177, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_178, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_179, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_180, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_181, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_182, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_183, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_184, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_185, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_186, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_187, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_188, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_189, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_190, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_191, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_192, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_193, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_194, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_195, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_196, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_197, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_198, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_199, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_199);

