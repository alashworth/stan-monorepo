#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<int, int, double, double, empty, empty> type_v_0;
typedef boost::mpl::vector<int, int, double, std::vector<double>, empty, empty> type_v_1;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_2;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_3;
typedef boost::mpl::vector<int, int, double, var, empty, empty> type_v_4;
typedef boost::mpl::vector<int, int, double, std::vector<var>, empty, empty> type_v_5;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_6;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_7;
typedef boost::mpl::vector<int, int, std::vector<double>, double, empty, empty> type_v_8;
typedef boost::mpl::vector<int, int, std::vector<double>, std::vector<double>, empty, empty> type_v_9;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_10;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_11;
typedef boost::mpl::vector<int, int, std::vector<double>, var, empty, empty> type_v_12;
typedef boost::mpl::vector<int, int, std::vector<double>, std::vector<var>, empty, empty> type_v_13;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_14;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_15;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_16;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_17;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_18;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_19;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_20;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_21;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_22;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_23;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_24;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_25;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_26;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_27;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_28;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_29;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_30;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_31;
typedef boost::mpl::vector<int, int, var, double, empty, empty> type_v_32;
typedef boost::mpl::vector<int, int, var, std::vector<double>, empty, empty> type_v_33;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_34;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_35;
typedef boost::mpl::vector<int, int, var, var, empty, empty> type_v_36;
typedef boost::mpl::vector<int, int, var, std::vector<var>, empty, empty> type_v_37;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_38;
typedef boost::mpl::vector<int, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_39;
typedef boost::mpl::vector<int, int, std::vector<var>, double, empty, empty> type_v_40;
typedef boost::mpl::vector<int, int, std::vector<var>, std::vector<double>, empty, empty> type_v_41;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_42;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_43;
typedef boost::mpl::vector<int, int, std::vector<var>, var, empty, empty> type_v_44;
typedef boost::mpl::vector<int, int, std::vector<var>, std::vector<var>, empty, empty> type_v_45;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_46;
typedef boost::mpl::vector<int, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_47;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_48;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_49;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_50;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_51;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_52;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_53;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_54;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_55;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_56;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_57;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_58;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_59;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_60;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_61;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_62;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_63;
typedef boost::mpl::vector<int, std::vector<int>, double, double, empty, empty> type_v_64;
typedef boost::mpl::vector<int, std::vector<int>, double, std::vector<double>, empty, empty> type_v_65;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_66;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_67;
typedef boost::mpl::vector<int, std::vector<int>, double, var, empty, empty> type_v_68;
typedef boost::mpl::vector<int, std::vector<int>, double, std::vector<var>, empty, empty> type_v_69;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_70;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_71;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, double, empty, empty> type_v_72;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_73;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_74;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_75;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, var, empty, empty> type_v_76;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_77;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_78;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_79;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_80;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_81;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_82;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_83;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_84;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_85;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_86;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_87;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_88;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_89;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_90;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_91;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_92;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_93;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_94;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_95;
typedef boost::mpl::vector<int, std::vector<int>, var, double, empty, empty> type_v_96;
typedef boost::mpl::vector<int, std::vector<int>, var, std::vector<double>, empty, empty> type_v_97;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_98;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_99;
typedef boost::mpl::vector<int, std::vector<int>, var, var, empty, empty> type_v_100;
typedef boost::mpl::vector<int, std::vector<int>, var, std::vector<var>, empty, empty> type_v_101;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_102;
typedef boost::mpl::vector<int, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_103;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, double, empty, empty> type_v_104;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_105;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_106;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_107;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, var, empty, empty> type_v_108;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_109;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_110;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_111;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_112;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_113;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_114;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_115;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_116;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_117;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_118;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_119;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_120;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_121;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_122;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_123;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_124;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_125;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_126;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_127;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_128;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_129;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_130;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_131;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_132;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_133;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_134;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_135;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_136;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_137;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_138;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_139;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_140;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_141;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_142;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_143;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_144;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_145;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_146;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_147;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_148;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_149;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_150;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_151;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_152;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_153;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_154;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_155;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_156;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_157;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_158;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_159;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_160;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_161;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_162;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_163;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_164;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_165;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_166;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_167;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_168;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_169;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_170;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_171;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_172;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_173;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_174;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_175;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_176;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_177;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_178;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_179;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_180;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_181;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_182;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_183;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_184;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_185;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_186;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_187;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_188;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_189;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_190;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_191;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_192;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_193;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_194;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_195;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_196;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_197;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_198;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_199;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_0> AgradCdfBetaBinomial_v_0;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_1> AgradCdfBetaBinomial_v_1;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_2> AgradCdfBetaBinomial_v_2;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_3> AgradCdfBetaBinomial_v_3;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_4> AgradCdfBetaBinomial_v_4;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_5> AgradCdfBetaBinomial_v_5;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_6> AgradCdfBetaBinomial_v_6;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_7> AgradCdfBetaBinomial_v_7;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_8> AgradCdfBetaBinomial_v_8;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_9> AgradCdfBetaBinomial_v_9;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_10> AgradCdfBetaBinomial_v_10;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_11> AgradCdfBetaBinomial_v_11;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_12> AgradCdfBetaBinomial_v_12;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_13> AgradCdfBetaBinomial_v_13;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_14> AgradCdfBetaBinomial_v_14;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_15> AgradCdfBetaBinomial_v_15;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_16> AgradCdfBetaBinomial_v_16;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_17> AgradCdfBetaBinomial_v_17;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_18> AgradCdfBetaBinomial_v_18;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_19> AgradCdfBetaBinomial_v_19;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_20> AgradCdfBetaBinomial_v_20;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_21> AgradCdfBetaBinomial_v_21;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_22> AgradCdfBetaBinomial_v_22;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_23> AgradCdfBetaBinomial_v_23;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_24> AgradCdfBetaBinomial_v_24;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_25> AgradCdfBetaBinomial_v_25;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_26> AgradCdfBetaBinomial_v_26;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_27> AgradCdfBetaBinomial_v_27;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_28> AgradCdfBetaBinomial_v_28;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_29> AgradCdfBetaBinomial_v_29;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_30> AgradCdfBetaBinomial_v_30;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_31> AgradCdfBetaBinomial_v_31;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_32> AgradCdfBetaBinomial_v_32;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_33> AgradCdfBetaBinomial_v_33;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_34> AgradCdfBetaBinomial_v_34;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_35> AgradCdfBetaBinomial_v_35;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_36> AgradCdfBetaBinomial_v_36;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_37> AgradCdfBetaBinomial_v_37;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_38> AgradCdfBetaBinomial_v_38;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_39> AgradCdfBetaBinomial_v_39;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_40> AgradCdfBetaBinomial_v_40;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_41> AgradCdfBetaBinomial_v_41;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_42> AgradCdfBetaBinomial_v_42;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_43> AgradCdfBetaBinomial_v_43;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_44> AgradCdfBetaBinomial_v_44;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_45> AgradCdfBetaBinomial_v_45;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_46> AgradCdfBetaBinomial_v_46;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_47> AgradCdfBetaBinomial_v_47;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_48> AgradCdfBetaBinomial_v_48;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_49> AgradCdfBetaBinomial_v_49;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_50> AgradCdfBetaBinomial_v_50;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_51> AgradCdfBetaBinomial_v_51;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_52> AgradCdfBetaBinomial_v_52;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_53> AgradCdfBetaBinomial_v_53;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_54> AgradCdfBetaBinomial_v_54;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_55> AgradCdfBetaBinomial_v_55;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_56> AgradCdfBetaBinomial_v_56;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_57> AgradCdfBetaBinomial_v_57;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_58> AgradCdfBetaBinomial_v_58;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_59> AgradCdfBetaBinomial_v_59;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_60> AgradCdfBetaBinomial_v_60;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_61> AgradCdfBetaBinomial_v_61;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_62> AgradCdfBetaBinomial_v_62;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_63> AgradCdfBetaBinomial_v_63;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_64> AgradCdfBetaBinomial_v_64;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_65> AgradCdfBetaBinomial_v_65;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_66> AgradCdfBetaBinomial_v_66;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_67> AgradCdfBetaBinomial_v_67;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_68> AgradCdfBetaBinomial_v_68;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_69> AgradCdfBetaBinomial_v_69;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_70> AgradCdfBetaBinomial_v_70;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_71> AgradCdfBetaBinomial_v_71;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_72> AgradCdfBetaBinomial_v_72;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_73> AgradCdfBetaBinomial_v_73;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_74> AgradCdfBetaBinomial_v_74;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_75> AgradCdfBetaBinomial_v_75;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_76> AgradCdfBetaBinomial_v_76;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_77> AgradCdfBetaBinomial_v_77;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_78> AgradCdfBetaBinomial_v_78;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_79> AgradCdfBetaBinomial_v_79;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_80> AgradCdfBetaBinomial_v_80;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_81> AgradCdfBetaBinomial_v_81;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_82> AgradCdfBetaBinomial_v_82;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_83> AgradCdfBetaBinomial_v_83;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_84> AgradCdfBetaBinomial_v_84;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_85> AgradCdfBetaBinomial_v_85;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_86> AgradCdfBetaBinomial_v_86;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_87> AgradCdfBetaBinomial_v_87;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_88> AgradCdfBetaBinomial_v_88;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_89> AgradCdfBetaBinomial_v_89;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_90> AgradCdfBetaBinomial_v_90;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_91> AgradCdfBetaBinomial_v_91;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_92> AgradCdfBetaBinomial_v_92;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_93> AgradCdfBetaBinomial_v_93;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_94> AgradCdfBetaBinomial_v_94;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_95> AgradCdfBetaBinomial_v_95;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_96> AgradCdfBetaBinomial_v_96;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_97> AgradCdfBetaBinomial_v_97;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_98> AgradCdfBetaBinomial_v_98;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_99> AgradCdfBetaBinomial_v_99;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_100> AgradCdfBetaBinomial_v_100;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_101> AgradCdfBetaBinomial_v_101;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_102> AgradCdfBetaBinomial_v_102;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_103> AgradCdfBetaBinomial_v_103;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_104> AgradCdfBetaBinomial_v_104;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_105> AgradCdfBetaBinomial_v_105;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_106> AgradCdfBetaBinomial_v_106;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_107> AgradCdfBetaBinomial_v_107;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_108> AgradCdfBetaBinomial_v_108;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_109> AgradCdfBetaBinomial_v_109;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_110> AgradCdfBetaBinomial_v_110;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_111> AgradCdfBetaBinomial_v_111;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_112> AgradCdfBetaBinomial_v_112;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_113> AgradCdfBetaBinomial_v_113;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_114> AgradCdfBetaBinomial_v_114;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_115> AgradCdfBetaBinomial_v_115;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_116> AgradCdfBetaBinomial_v_116;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_117> AgradCdfBetaBinomial_v_117;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_118> AgradCdfBetaBinomial_v_118;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_119> AgradCdfBetaBinomial_v_119;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_120> AgradCdfBetaBinomial_v_120;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_121> AgradCdfBetaBinomial_v_121;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_122> AgradCdfBetaBinomial_v_122;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_123> AgradCdfBetaBinomial_v_123;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_124> AgradCdfBetaBinomial_v_124;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_125> AgradCdfBetaBinomial_v_125;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_126> AgradCdfBetaBinomial_v_126;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_127> AgradCdfBetaBinomial_v_127;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_128> AgradCdfBetaBinomial_v_128;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_129> AgradCdfBetaBinomial_v_129;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_130> AgradCdfBetaBinomial_v_130;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_131> AgradCdfBetaBinomial_v_131;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_132> AgradCdfBetaBinomial_v_132;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_133> AgradCdfBetaBinomial_v_133;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_134> AgradCdfBetaBinomial_v_134;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_135> AgradCdfBetaBinomial_v_135;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_136> AgradCdfBetaBinomial_v_136;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_137> AgradCdfBetaBinomial_v_137;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_138> AgradCdfBetaBinomial_v_138;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_139> AgradCdfBetaBinomial_v_139;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_140> AgradCdfBetaBinomial_v_140;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_141> AgradCdfBetaBinomial_v_141;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_142> AgradCdfBetaBinomial_v_142;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_143> AgradCdfBetaBinomial_v_143;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_144> AgradCdfBetaBinomial_v_144;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_145> AgradCdfBetaBinomial_v_145;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_146> AgradCdfBetaBinomial_v_146;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_147> AgradCdfBetaBinomial_v_147;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_148> AgradCdfBetaBinomial_v_148;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_149> AgradCdfBetaBinomial_v_149;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_150> AgradCdfBetaBinomial_v_150;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_151> AgradCdfBetaBinomial_v_151;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_152> AgradCdfBetaBinomial_v_152;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_153> AgradCdfBetaBinomial_v_153;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_154> AgradCdfBetaBinomial_v_154;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_155> AgradCdfBetaBinomial_v_155;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_156> AgradCdfBetaBinomial_v_156;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_157> AgradCdfBetaBinomial_v_157;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_158> AgradCdfBetaBinomial_v_158;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_159> AgradCdfBetaBinomial_v_159;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_160> AgradCdfBetaBinomial_v_160;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_161> AgradCdfBetaBinomial_v_161;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_162> AgradCdfBetaBinomial_v_162;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_163> AgradCdfBetaBinomial_v_163;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_164> AgradCdfBetaBinomial_v_164;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_165> AgradCdfBetaBinomial_v_165;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_166> AgradCdfBetaBinomial_v_166;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_167> AgradCdfBetaBinomial_v_167;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_168> AgradCdfBetaBinomial_v_168;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_169> AgradCdfBetaBinomial_v_169;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_170> AgradCdfBetaBinomial_v_170;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_171> AgradCdfBetaBinomial_v_171;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_172> AgradCdfBetaBinomial_v_172;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_173> AgradCdfBetaBinomial_v_173;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_174> AgradCdfBetaBinomial_v_174;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_175> AgradCdfBetaBinomial_v_175;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_176> AgradCdfBetaBinomial_v_176;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_177> AgradCdfBetaBinomial_v_177;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_178> AgradCdfBetaBinomial_v_178;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_179> AgradCdfBetaBinomial_v_179;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_180> AgradCdfBetaBinomial_v_180;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_181> AgradCdfBetaBinomial_v_181;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_182> AgradCdfBetaBinomial_v_182;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_183> AgradCdfBetaBinomial_v_183;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_184> AgradCdfBetaBinomial_v_184;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_185> AgradCdfBetaBinomial_v_185;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_186> AgradCdfBetaBinomial_v_186;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_187> AgradCdfBetaBinomial_v_187;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_188> AgradCdfBetaBinomial_v_188;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_189> AgradCdfBetaBinomial_v_189;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_190> AgradCdfBetaBinomial_v_190;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_191> AgradCdfBetaBinomial_v_191;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_192> AgradCdfBetaBinomial_v_192;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_193> AgradCdfBetaBinomial_v_193;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_194> AgradCdfBetaBinomial_v_194;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_195> AgradCdfBetaBinomial_v_195;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_196> AgradCdfBetaBinomial_v_196;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_197> AgradCdfBetaBinomial_v_197;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_198> AgradCdfBetaBinomial_v_198;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_199> AgradCdfBetaBinomial_v_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_0, AgradCdfTestFixture, AgradCdfBetaBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_1, AgradCdfTestFixture, AgradCdfBetaBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_2, AgradCdfTestFixture, AgradCdfBetaBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_3, AgradCdfTestFixture, AgradCdfBetaBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_4, AgradCdfTestFixture, AgradCdfBetaBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_5, AgradCdfTestFixture, AgradCdfBetaBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_6, AgradCdfTestFixture, AgradCdfBetaBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_7, AgradCdfTestFixture, AgradCdfBetaBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_8, AgradCdfTestFixture, AgradCdfBetaBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_9, AgradCdfTestFixture, AgradCdfBetaBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_10, AgradCdfTestFixture, AgradCdfBetaBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_11, AgradCdfTestFixture, AgradCdfBetaBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_12, AgradCdfTestFixture, AgradCdfBetaBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_13, AgradCdfTestFixture, AgradCdfBetaBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_14, AgradCdfTestFixture, AgradCdfBetaBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_15, AgradCdfTestFixture, AgradCdfBetaBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_16, AgradCdfTestFixture, AgradCdfBetaBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_17, AgradCdfTestFixture, AgradCdfBetaBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_18, AgradCdfTestFixture, AgradCdfBetaBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_19, AgradCdfTestFixture, AgradCdfBetaBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_20, AgradCdfTestFixture, AgradCdfBetaBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_21, AgradCdfTestFixture, AgradCdfBetaBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_22, AgradCdfTestFixture, AgradCdfBetaBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_23, AgradCdfTestFixture, AgradCdfBetaBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_24, AgradCdfTestFixture, AgradCdfBetaBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_25, AgradCdfTestFixture, AgradCdfBetaBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_26, AgradCdfTestFixture, AgradCdfBetaBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_27, AgradCdfTestFixture, AgradCdfBetaBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_28, AgradCdfTestFixture, AgradCdfBetaBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_29, AgradCdfTestFixture, AgradCdfBetaBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_30, AgradCdfTestFixture, AgradCdfBetaBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_31, AgradCdfTestFixture, AgradCdfBetaBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_32, AgradCdfTestFixture, AgradCdfBetaBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_33, AgradCdfTestFixture, AgradCdfBetaBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_34, AgradCdfTestFixture, AgradCdfBetaBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_35, AgradCdfTestFixture, AgradCdfBetaBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_36, AgradCdfTestFixture, AgradCdfBetaBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_37, AgradCdfTestFixture, AgradCdfBetaBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_38, AgradCdfTestFixture, AgradCdfBetaBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_39, AgradCdfTestFixture, AgradCdfBetaBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_40, AgradCdfTestFixture, AgradCdfBetaBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_41, AgradCdfTestFixture, AgradCdfBetaBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_42, AgradCdfTestFixture, AgradCdfBetaBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_43, AgradCdfTestFixture, AgradCdfBetaBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_44, AgradCdfTestFixture, AgradCdfBetaBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_45, AgradCdfTestFixture, AgradCdfBetaBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_46, AgradCdfTestFixture, AgradCdfBetaBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_47, AgradCdfTestFixture, AgradCdfBetaBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_48, AgradCdfTestFixture, AgradCdfBetaBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_49, AgradCdfTestFixture, AgradCdfBetaBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_50, AgradCdfTestFixture, AgradCdfBetaBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_51, AgradCdfTestFixture, AgradCdfBetaBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_52, AgradCdfTestFixture, AgradCdfBetaBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_53, AgradCdfTestFixture, AgradCdfBetaBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_54, AgradCdfTestFixture, AgradCdfBetaBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_55, AgradCdfTestFixture, AgradCdfBetaBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_56, AgradCdfTestFixture, AgradCdfBetaBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_57, AgradCdfTestFixture, AgradCdfBetaBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_58, AgradCdfTestFixture, AgradCdfBetaBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_59, AgradCdfTestFixture, AgradCdfBetaBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_60, AgradCdfTestFixture, AgradCdfBetaBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_61, AgradCdfTestFixture, AgradCdfBetaBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_62, AgradCdfTestFixture, AgradCdfBetaBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_63, AgradCdfTestFixture, AgradCdfBetaBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_64, AgradCdfTestFixture, AgradCdfBetaBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_65, AgradCdfTestFixture, AgradCdfBetaBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_66, AgradCdfTestFixture, AgradCdfBetaBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_67, AgradCdfTestFixture, AgradCdfBetaBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_68, AgradCdfTestFixture, AgradCdfBetaBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_69, AgradCdfTestFixture, AgradCdfBetaBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_70, AgradCdfTestFixture, AgradCdfBetaBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_71, AgradCdfTestFixture, AgradCdfBetaBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_72, AgradCdfTestFixture, AgradCdfBetaBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_73, AgradCdfTestFixture, AgradCdfBetaBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_74, AgradCdfTestFixture, AgradCdfBetaBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_75, AgradCdfTestFixture, AgradCdfBetaBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_76, AgradCdfTestFixture, AgradCdfBetaBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_77, AgradCdfTestFixture, AgradCdfBetaBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_78, AgradCdfTestFixture, AgradCdfBetaBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_79, AgradCdfTestFixture, AgradCdfBetaBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_80, AgradCdfTestFixture, AgradCdfBetaBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_81, AgradCdfTestFixture, AgradCdfBetaBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_82, AgradCdfTestFixture, AgradCdfBetaBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_83, AgradCdfTestFixture, AgradCdfBetaBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_84, AgradCdfTestFixture, AgradCdfBetaBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_85, AgradCdfTestFixture, AgradCdfBetaBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_86, AgradCdfTestFixture, AgradCdfBetaBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_87, AgradCdfTestFixture, AgradCdfBetaBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_88, AgradCdfTestFixture, AgradCdfBetaBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_89, AgradCdfTestFixture, AgradCdfBetaBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_90, AgradCdfTestFixture, AgradCdfBetaBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_91, AgradCdfTestFixture, AgradCdfBetaBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_92, AgradCdfTestFixture, AgradCdfBetaBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_93, AgradCdfTestFixture, AgradCdfBetaBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_94, AgradCdfTestFixture, AgradCdfBetaBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_95, AgradCdfTestFixture, AgradCdfBetaBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_96, AgradCdfTestFixture, AgradCdfBetaBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_97, AgradCdfTestFixture, AgradCdfBetaBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_98, AgradCdfTestFixture, AgradCdfBetaBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_99, AgradCdfTestFixture, AgradCdfBetaBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_100, AgradCdfTestFixture, AgradCdfBetaBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_101, AgradCdfTestFixture, AgradCdfBetaBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_102, AgradCdfTestFixture, AgradCdfBetaBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_103, AgradCdfTestFixture, AgradCdfBetaBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_104, AgradCdfTestFixture, AgradCdfBetaBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_105, AgradCdfTestFixture, AgradCdfBetaBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_106, AgradCdfTestFixture, AgradCdfBetaBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_107, AgradCdfTestFixture, AgradCdfBetaBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_108, AgradCdfTestFixture, AgradCdfBetaBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_109, AgradCdfTestFixture, AgradCdfBetaBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_110, AgradCdfTestFixture, AgradCdfBetaBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_111, AgradCdfTestFixture, AgradCdfBetaBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_112, AgradCdfTestFixture, AgradCdfBetaBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_113, AgradCdfTestFixture, AgradCdfBetaBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_114, AgradCdfTestFixture, AgradCdfBetaBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_115, AgradCdfTestFixture, AgradCdfBetaBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_116, AgradCdfTestFixture, AgradCdfBetaBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_117, AgradCdfTestFixture, AgradCdfBetaBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_118, AgradCdfTestFixture, AgradCdfBetaBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_119, AgradCdfTestFixture, AgradCdfBetaBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_120, AgradCdfTestFixture, AgradCdfBetaBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_121, AgradCdfTestFixture, AgradCdfBetaBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_122, AgradCdfTestFixture, AgradCdfBetaBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_123, AgradCdfTestFixture, AgradCdfBetaBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_124, AgradCdfTestFixture, AgradCdfBetaBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_125, AgradCdfTestFixture, AgradCdfBetaBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_126, AgradCdfTestFixture, AgradCdfBetaBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_127, AgradCdfTestFixture, AgradCdfBetaBinomial_v_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_128, AgradCdfTestFixture, AgradCdfBetaBinomial_v_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_129, AgradCdfTestFixture, AgradCdfBetaBinomial_v_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_130, AgradCdfTestFixture, AgradCdfBetaBinomial_v_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_131, AgradCdfTestFixture, AgradCdfBetaBinomial_v_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_132, AgradCdfTestFixture, AgradCdfBetaBinomial_v_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_133, AgradCdfTestFixture, AgradCdfBetaBinomial_v_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_134, AgradCdfTestFixture, AgradCdfBetaBinomial_v_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_135, AgradCdfTestFixture, AgradCdfBetaBinomial_v_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_136, AgradCdfTestFixture, AgradCdfBetaBinomial_v_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_137, AgradCdfTestFixture, AgradCdfBetaBinomial_v_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_138, AgradCdfTestFixture, AgradCdfBetaBinomial_v_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_139, AgradCdfTestFixture, AgradCdfBetaBinomial_v_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_140, AgradCdfTestFixture, AgradCdfBetaBinomial_v_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_141, AgradCdfTestFixture, AgradCdfBetaBinomial_v_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_142, AgradCdfTestFixture, AgradCdfBetaBinomial_v_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_143, AgradCdfTestFixture, AgradCdfBetaBinomial_v_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_144, AgradCdfTestFixture, AgradCdfBetaBinomial_v_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_145, AgradCdfTestFixture, AgradCdfBetaBinomial_v_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_146, AgradCdfTestFixture, AgradCdfBetaBinomial_v_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_147, AgradCdfTestFixture, AgradCdfBetaBinomial_v_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_148, AgradCdfTestFixture, AgradCdfBetaBinomial_v_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_149, AgradCdfTestFixture, AgradCdfBetaBinomial_v_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_150, AgradCdfTestFixture, AgradCdfBetaBinomial_v_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_151, AgradCdfTestFixture, AgradCdfBetaBinomial_v_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_152, AgradCdfTestFixture, AgradCdfBetaBinomial_v_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_153, AgradCdfTestFixture, AgradCdfBetaBinomial_v_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_154, AgradCdfTestFixture, AgradCdfBetaBinomial_v_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_155, AgradCdfTestFixture, AgradCdfBetaBinomial_v_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_156, AgradCdfTestFixture, AgradCdfBetaBinomial_v_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_157, AgradCdfTestFixture, AgradCdfBetaBinomial_v_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_158, AgradCdfTestFixture, AgradCdfBetaBinomial_v_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_159, AgradCdfTestFixture, AgradCdfBetaBinomial_v_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_160, AgradCdfTestFixture, AgradCdfBetaBinomial_v_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_161, AgradCdfTestFixture, AgradCdfBetaBinomial_v_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_162, AgradCdfTestFixture, AgradCdfBetaBinomial_v_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_163, AgradCdfTestFixture, AgradCdfBetaBinomial_v_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_164, AgradCdfTestFixture, AgradCdfBetaBinomial_v_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_165, AgradCdfTestFixture, AgradCdfBetaBinomial_v_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_166, AgradCdfTestFixture, AgradCdfBetaBinomial_v_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_167, AgradCdfTestFixture, AgradCdfBetaBinomial_v_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_168, AgradCdfTestFixture, AgradCdfBetaBinomial_v_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_169, AgradCdfTestFixture, AgradCdfBetaBinomial_v_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_170, AgradCdfTestFixture, AgradCdfBetaBinomial_v_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_171, AgradCdfTestFixture, AgradCdfBetaBinomial_v_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_172, AgradCdfTestFixture, AgradCdfBetaBinomial_v_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_173, AgradCdfTestFixture, AgradCdfBetaBinomial_v_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_174, AgradCdfTestFixture, AgradCdfBetaBinomial_v_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_175, AgradCdfTestFixture, AgradCdfBetaBinomial_v_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_176, AgradCdfTestFixture, AgradCdfBetaBinomial_v_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_177, AgradCdfTestFixture, AgradCdfBetaBinomial_v_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_178, AgradCdfTestFixture, AgradCdfBetaBinomial_v_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_179, AgradCdfTestFixture, AgradCdfBetaBinomial_v_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_180, AgradCdfTestFixture, AgradCdfBetaBinomial_v_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_181, AgradCdfTestFixture, AgradCdfBetaBinomial_v_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_182, AgradCdfTestFixture, AgradCdfBetaBinomial_v_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_183, AgradCdfTestFixture, AgradCdfBetaBinomial_v_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_184, AgradCdfTestFixture, AgradCdfBetaBinomial_v_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_185, AgradCdfTestFixture, AgradCdfBetaBinomial_v_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_186, AgradCdfTestFixture, AgradCdfBetaBinomial_v_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_187, AgradCdfTestFixture, AgradCdfBetaBinomial_v_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_188, AgradCdfTestFixture, AgradCdfBetaBinomial_v_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_189, AgradCdfTestFixture, AgradCdfBetaBinomial_v_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_190, AgradCdfTestFixture, AgradCdfBetaBinomial_v_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_191, AgradCdfTestFixture, AgradCdfBetaBinomial_v_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_192, AgradCdfTestFixture, AgradCdfBetaBinomial_v_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_193, AgradCdfTestFixture, AgradCdfBetaBinomial_v_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_194, AgradCdfTestFixture, AgradCdfBetaBinomial_v_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_195, AgradCdfTestFixture, AgradCdfBetaBinomial_v_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_196, AgradCdfTestFixture, AgradCdfBetaBinomial_v_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_197, AgradCdfTestFixture, AgradCdfBetaBinomial_v_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_198, AgradCdfTestFixture, AgradCdfBetaBinomial_v_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_199, AgradCdfTestFixture, AgradCdfBetaBinomial_v_199);

