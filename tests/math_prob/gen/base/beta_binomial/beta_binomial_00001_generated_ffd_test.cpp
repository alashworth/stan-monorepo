#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_200;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_201;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_202;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_203;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_204;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_205;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_206;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_207;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, double, empty, empty> type_ffd_208;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, std::vector<double>, empty, empty> type_ffd_209;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_210;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_211;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty> type_ffd_212;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_213;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_214;
typedef boost::mpl::vector<std::vector<int>, int, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_215;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, double, empty, empty> type_ffd_216;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty> type_ffd_217;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_218;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_219;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty> type_ffd_220;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_221;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_222;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_223;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffd_224;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffd_225;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_226;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_227;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_228;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_229;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_230;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_231;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffd_232;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffd_233;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_234;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_235;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_236;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_237;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_238;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_239;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, fvar<fvar<double> >, empty, empty> type_ffd_240;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_241;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_242;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_243;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, fvar<fvar<double> >, empty, empty> type_ffd_244;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_245;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_246;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_247;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_248;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_249;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_250;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_251;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_252;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_253;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_254;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_255;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, double, empty, empty> type_ffd_256;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, std::vector<double>, empty, empty> type_ffd_257;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_258;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_259;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty> type_ffd_260;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_261;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_262;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_263;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, double, empty, empty> type_ffd_264;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty> type_ffd_265;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_266;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_267;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty> type_ffd_268;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_269;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_270;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_271;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffd_272;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffd_273;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_274;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_275;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_276;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_277;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_278;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_279;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffd_280;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffd_281;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_282;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_283;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_284;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_285;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_286;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_287;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty> type_ffd_288;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_289;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_290;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_291;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty> type_ffd_292;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_293;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_294;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_295;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_296;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_297;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_298;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_299;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_319;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffd_320;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffd_321;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_322;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_323;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_324;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_325;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_326;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_327;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffd_328;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffd_329;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_330;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_331;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_332;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_333;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_334;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_335;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty> type_ffd_336;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_337;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_338;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_339;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty> type_ffd_340;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_341;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_342;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_343;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_344;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_345;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_346;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_347;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_348;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_349;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_350;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_351;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty> type_ffd_352;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty> type_ffd_353;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_354;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_355;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty> type_ffd_356;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_357;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_358;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_359;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty> type_ffd_360;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty> type_ffd_361;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_362;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_363;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty> type_ffd_364;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_365;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_366;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_367;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty> type_ffd_368;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_ffd_369;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_370;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_371;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_372;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_373;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_374;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_375;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty> type_ffd_376;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_ffd_377;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_ffd_378;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_ffd_379;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_380;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_381;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_382;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, fvar<fvar<double> >, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, fvar<fvar<double> >, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_200> AgradDistributionsBetaBinomial_ffd_200;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_201> AgradDistributionsBetaBinomial_ffd_201;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_202> AgradDistributionsBetaBinomial_ffd_202;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_203> AgradDistributionsBetaBinomial_ffd_203;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_204> AgradDistributionsBetaBinomial_ffd_204;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_205> AgradDistributionsBetaBinomial_ffd_205;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_206> AgradDistributionsBetaBinomial_ffd_206;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_207> AgradDistributionsBetaBinomial_ffd_207;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_208> AgradDistributionsBetaBinomial_ffd_208;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_209> AgradDistributionsBetaBinomial_ffd_209;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_210> AgradDistributionsBetaBinomial_ffd_210;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_211> AgradDistributionsBetaBinomial_ffd_211;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_212> AgradDistributionsBetaBinomial_ffd_212;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_213> AgradDistributionsBetaBinomial_ffd_213;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_214> AgradDistributionsBetaBinomial_ffd_214;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_215> AgradDistributionsBetaBinomial_ffd_215;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_216> AgradDistributionsBetaBinomial_ffd_216;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_217> AgradDistributionsBetaBinomial_ffd_217;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_218> AgradDistributionsBetaBinomial_ffd_218;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_219> AgradDistributionsBetaBinomial_ffd_219;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_220> AgradDistributionsBetaBinomial_ffd_220;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_221> AgradDistributionsBetaBinomial_ffd_221;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_222> AgradDistributionsBetaBinomial_ffd_222;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_223> AgradDistributionsBetaBinomial_ffd_223;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_224> AgradDistributionsBetaBinomial_ffd_224;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_225> AgradDistributionsBetaBinomial_ffd_225;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_226> AgradDistributionsBetaBinomial_ffd_226;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_227> AgradDistributionsBetaBinomial_ffd_227;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_228> AgradDistributionsBetaBinomial_ffd_228;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_229> AgradDistributionsBetaBinomial_ffd_229;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_230> AgradDistributionsBetaBinomial_ffd_230;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_231> AgradDistributionsBetaBinomial_ffd_231;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_232> AgradDistributionsBetaBinomial_ffd_232;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_233> AgradDistributionsBetaBinomial_ffd_233;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_234> AgradDistributionsBetaBinomial_ffd_234;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_235> AgradDistributionsBetaBinomial_ffd_235;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_236> AgradDistributionsBetaBinomial_ffd_236;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_237> AgradDistributionsBetaBinomial_ffd_237;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_238> AgradDistributionsBetaBinomial_ffd_238;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_239> AgradDistributionsBetaBinomial_ffd_239;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_240> AgradDistributionsBetaBinomial_ffd_240;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_241> AgradDistributionsBetaBinomial_ffd_241;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_242> AgradDistributionsBetaBinomial_ffd_242;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_243> AgradDistributionsBetaBinomial_ffd_243;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_244> AgradDistributionsBetaBinomial_ffd_244;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_245> AgradDistributionsBetaBinomial_ffd_245;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_246> AgradDistributionsBetaBinomial_ffd_246;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_247> AgradDistributionsBetaBinomial_ffd_247;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_248> AgradDistributionsBetaBinomial_ffd_248;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_249> AgradDistributionsBetaBinomial_ffd_249;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_250> AgradDistributionsBetaBinomial_ffd_250;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_251> AgradDistributionsBetaBinomial_ffd_251;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_252> AgradDistributionsBetaBinomial_ffd_252;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_253> AgradDistributionsBetaBinomial_ffd_253;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_254> AgradDistributionsBetaBinomial_ffd_254;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_255> AgradDistributionsBetaBinomial_ffd_255;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_256> AgradDistributionsBetaBinomial_ffd_256;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_257> AgradDistributionsBetaBinomial_ffd_257;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_258> AgradDistributionsBetaBinomial_ffd_258;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_259> AgradDistributionsBetaBinomial_ffd_259;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_260> AgradDistributionsBetaBinomial_ffd_260;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_261> AgradDistributionsBetaBinomial_ffd_261;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_262> AgradDistributionsBetaBinomial_ffd_262;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_263> AgradDistributionsBetaBinomial_ffd_263;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_264> AgradDistributionsBetaBinomial_ffd_264;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_265> AgradDistributionsBetaBinomial_ffd_265;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_266> AgradDistributionsBetaBinomial_ffd_266;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_267> AgradDistributionsBetaBinomial_ffd_267;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_268> AgradDistributionsBetaBinomial_ffd_268;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_269> AgradDistributionsBetaBinomial_ffd_269;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_270> AgradDistributionsBetaBinomial_ffd_270;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_271> AgradDistributionsBetaBinomial_ffd_271;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_272> AgradDistributionsBetaBinomial_ffd_272;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_273> AgradDistributionsBetaBinomial_ffd_273;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_274> AgradDistributionsBetaBinomial_ffd_274;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_275> AgradDistributionsBetaBinomial_ffd_275;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_276> AgradDistributionsBetaBinomial_ffd_276;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_277> AgradDistributionsBetaBinomial_ffd_277;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_278> AgradDistributionsBetaBinomial_ffd_278;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_279> AgradDistributionsBetaBinomial_ffd_279;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_280> AgradDistributionsBetaBinomial_ffd_280;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_281> AgradDistributionsBetaBinomial_ffd_281;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_282> AgradDistributionsBetaBinomial_ffd_282;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_283> AgradDistributionsBetaBinomial_ffd_283;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_284> AgradDistributionsBetaBinomial_ffd_284;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_285> AgradDistributionsBetaBinomial_ffd_285;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_286> AgradDistributionsBetaBinomial_ffd_286;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_287> AgradDistributionsBetaBinomial_ffd_287;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_288> AgradDistributionsBetaBinomial_ffd_288;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_289> AgradDistributionsBetaBinomial_ffd_289;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_290> AgradDistributionsBetaBinomial_ffd_290;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_291> AgradDistributionsBetaBinomial_ffd_291;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_292> AgradDistributionsBetaBinomial_ffd_292;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_293> AgradDistributionsBetaBinomial_ffd_293;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_294> AgradDistributionsBetaBinomial_ffd_294;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_295> AgradDistributionsBetaBinomial_ffd_295;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_296> AgradDistributionsBetaBinomial_ffd_296;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_297> AgradDistributionsBetaBinomial_ffd_297;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_298> AgradDistributionsBetaBinomial_ffd_298;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_299> AgradDistributionsBetaBinomial_ffd_299;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_300> AgradDistributionsBetaBinomial_ffd_300;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_301> AgradDistributionsBetaBinomial_ffd_301;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_302> AgradDistributionsBetaBinomial_ffd_302;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_303> AgradDistributionsBetaBinomial_ffd_303;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_304> AgradDistributionsBetaBinomial_ffd_304;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_305> AgradDistributionsBetaBinomial_ffd_305;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_306> AgradDistributionsBetaBinomial_ffd_306;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_307> AgradDistributionsBetaBinomial_ffd_307;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_308> AgradDistributionsBetaBinomial_ffd_308;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_309> AgradDistributionsBetaBinomial_ffd_309;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_310> AgradDistributionsBetaBinomial_ffd_310;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_311> AgradDistributionsBetaBinomial_ffd_311;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_312> AgradDistributionsBetaBinomial_ffd_312;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_313> AgradDistributionsBetaBinomial_ffd_313;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_314> AgradDistributionsBetaBinomial_ffd_314;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_315> AgradDistributionsBetaBinomial_ffd_315;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_316> AgradDistributionsBetaBinomial_ffd_316;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_317> AgradDistributionsBetaBinomial_ffd_317;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_318> AgradDistributionsBetaBinomial_ffd_318;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_319> AgradDistributionsBetaBinomial_ffd_319;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_320> AgradDistributionsBetaBinomial_ffd_320;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_321> AgradDistributionsBetaBinomial_ffd_321;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_322> AgradDistributionsBetaBinomial_ffd_322;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_323> AgradDistributionsBetaBinomial_ffd_323;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_324> AgradDistributionsBetaBinomial_ffd_324;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_325> AgradDistributionsBetaBinomial_ffd_325;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_326> AgradDistributionsBetaBinomial_ffd_326;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_327> AgradDistributionsBetaBinomial_ffd_327;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_328> AgradDistributionsBetaBinomial_ffd_328;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_329> AgradDistributionsBetaBinomial_ffd_329;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_330> AgradDistributionsBetaBinomial_ffd_330;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_331> AgradDistributionsBetaBinomial_ffd_331;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_332> AgradDistributionsBetaBinomial_ffd_332;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_333> AgradDistributionsBetaBinomial_ffd_333;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_334> AgradDistributionsBetaBinomial_ffd_334;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_335> AgradDistributionsBetaBinomial_ffd_335;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_336> AgradDistributionsBetaBinomial_ffd_336;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_337> AgradDistributionsBetaBinomial_ffd_337;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_338> AgradDistributionsBetaBinomial_ffd_338;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_339> AgradDistributionsBetaBinomial_ffd_339;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_340> AgradDistributionsBetaBinomial_ffd_340;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_341> AgradDistributionsBetaBinomial_ffd_341;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_342> AgradDistributionsBetaBinomial_ffd_342;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_343> AgradDistributionsBetaBinomial_ffd_343;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_344> AgradDistributionsBetaBinomial_ffd_344;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_345> AgradDistributionsBetaBinomial_ffd_345;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_346> AgradDistributionsBetaBinomial_ffd_346;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_347> AgradDistributionsBetaBinomial_ffd_347;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_348> AgradDistributionsBetaBinomial_ffd_348;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_349> AgradDistributionsBetaBinomial_ffd_349;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_350> AgradDistributionsBetaBinomial_ffd_350;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_351> AgradDistributionsBetaBinomial_ffd_351;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_352> AgradDistributionsBetaBinomial_ffd_352;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_353> AgradDistributionsBetaBinomial_ffd_353;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_354> AgradDistributionsBetaBinomial_ffd_354;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_355> AgradDistributionsBetaBinomial_ffd_355;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_356> AgradDistributionsBetaBinomial_ffd_356;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_357> AgradDistributionsBetaBinomial_ffd_357;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_358> AgradDistributionsBetaBinomial_ffd_358;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_359> AgradDistributionsBetaBinomial_ffd_359;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_360> AgradDistributionsBetaBinomial_ffd_360;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_361> AgradDistributionsBetaBinomial_ffd_361;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_362> AgradDistributionsBetaBinomial_ffd_362;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_363> AgradDistributionsBetaBinomial_ffd_363;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_364> AgradDistributionsBetaBinomial_ffd_364;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_365> AgradDistributionsBetaBinomial_ffd_365;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_366> AgradDistributionsBetaBinomial_ffd_366;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_367> AgradDistributionsBetaBinomial_ffd_367;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_368> AgradDistributionsBetaBinomial_ffd_368;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_369> AgradDistributionsBetaBinomial_ffd_369;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_370> AgradDistributionsBetaBinomial_ffd_370;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_371> AgradDistributionsBetaBinomial_ffd_371;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_372> AgradDistributionsBetaBinomial_ffd_372;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_373> AgradDistributionsBetaBinomial_ffd_373;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_374> AgradDistributionsBetaBinomial_ffd_374;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_375> AgradDistributionsBetaBinomial_ffd_375;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_376> AgradDistributionsBetaBinomial_ffd_376;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_377> AgradDistributionsBetaBinomial_ffd_377;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_378> AgradDistributionsBetaBinomial_ffd_378;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_379> AgradDistributionsBetaBinomial_ffd_379;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_380> AgradDistributionsBetaBinomial_ffd_380;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_381> AgradDistributionsBetaBinomial_ffd_381;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_382> AgradDistributionsBetaBinomial_ffd_382;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_383> AgradDistributionsBetaBinomial_ffd_383;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_384> AgradDistributionsBetaBinomial_ffd_384;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_385> AgradDistributionsBetaBinomial_ffd_385;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_386> AgradDistributionsBetaBinomial_ffd_386;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_387> AgradDistributionsBetaBinomial_ffd_387;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_388> AgradDistributionsBetaBinomial_ffd_388;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_389> AgradDistributionsBetaBinomial_ffd_389;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_390> AgradDistributionsBetaBinomial_ffd_390;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_391> AgradDistributionsBetaBinomial_ffd_391;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_392> AgradDistributionsBetaBinomial_ffd_392;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_393> AgradDistributionsBetaBinomial_ffd_393;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_394> AgradDistributionsBetaBinomial_ffd_394;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_395> AgradDistributionsBetaBinomial_ffd_395;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_396> AgradDistributionsBetaBinomial_ffd_396;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_397> AgradDistributionsBetaBinomial_ffd_397;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_398> AgradDistributionsBetaBinomial_ffd_398;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_ffd_399> AgradDistributionsBetaBinomial_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_200, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_201, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_202, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_203, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_204, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_205, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_206, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_207, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_208, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_209, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_210, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_211, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_212, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_213, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_214, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_215, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_216, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_217, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_218, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_219, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_220, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_221, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_222, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_223, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_224, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_225, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_226, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_227, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_228, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_229, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_230, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_231, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_232, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_233, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_234, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_235, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_236, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_237, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_238, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_239, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_240, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_241, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_242, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_243, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_244, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_245, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_246, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_247, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_248, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_249, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_250, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_251, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_252, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_253, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_254, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_255, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_256, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_257, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_258, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_259, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_260, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_261, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_262, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_263, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_264, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_265, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_266, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_267, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_268, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_269, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_270, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_271, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_272, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_273, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_274, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_275, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_276, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_277, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_278, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_279, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_280, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_281, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_282, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_283, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_284, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_285, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_286, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_287, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_288, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_289, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_290, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_291, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_292, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_293, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_294, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_295, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_296, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_297, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_298, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_299, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_300, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_301, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_302, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_303, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_304, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_305, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_306, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_307, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_308, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_309, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_310, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_311, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_312, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_313, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_314, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_315, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_316, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_317, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_318, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_319, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_320, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_321, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_322, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_323, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_324, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_325, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_326, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_327, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_328, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_329, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_330, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_331, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_332, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_333, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_334, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_335, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_336, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_337, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_338, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_339, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_340, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_341, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_342, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_343, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_344, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_345, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_346, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_347, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_348, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_349, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_350, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_351, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_352, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_353, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_354, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_355, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_356, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_357, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_358, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_359, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_360, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_361, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_362, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_363, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_364, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_365, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_366, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_367, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_368, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_369, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_370, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_371, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_372, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_373, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_374, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_375, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_376, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_377, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_378, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_379, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_380, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_381, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_382, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_383, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_384, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_385, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_386, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_387, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_388, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_389, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_390, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_391, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_392, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_393, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_394, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_395, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_396, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_397, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_398, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_ffd_399, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_ffd_399);

