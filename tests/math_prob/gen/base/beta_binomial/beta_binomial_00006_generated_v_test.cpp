#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_600;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_601;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_602;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_603;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_604;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_605;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_606;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_607;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, double, empty, empty> type_v_608;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_609;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_610;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_611;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, var, empty, empty> type_v_612;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_613;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_614;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_615;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_616;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_617;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_618;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_619;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_620;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_621;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_622;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_623;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_624;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_625;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_626;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_627;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_628;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_629;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_630;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_631;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_632;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_633;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_634;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_635;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_636;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_637;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_638;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_639;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_640;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_641;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_642;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_643;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_644;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_645;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_646;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_647;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_648;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_649;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_650;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_651;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_652;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_653;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_654;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_655;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_656;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_657;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_658;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_659;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_660;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_661;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_662;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_663;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_664;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_665;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_666;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_667;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_668;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_669;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_670;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_671;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_672;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_673;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_674;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_675;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_676;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_677;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_678;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_679;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_680;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_681;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_682;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_683;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_684;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_685;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_686;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_687;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_688;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_689;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_690;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_691;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_692;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_693;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_694;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_695;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_696;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_697;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_698;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_699;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_600> AgradDistributionsBetaBinomial_v_600;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_601> AgradDistributionsBetaBinomial_v_601;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_602> AgradDistributionsBetaBinomial_v_602;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_603> AgradDistributionsBetaBinomial_v_603;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_604> AgradDistributionsBetaBinomial_v_604;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_605> AgradDistributionsBetaBinomial_v_605;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_606> AgradDistributionsBetaBinomial_v_606;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_607> AgradDistributionsBetaBinomial_v_607;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_608> AgradDistributionsBetaBinomial_v_608;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_609> AgradDistributionsBetaBinomial_v_609;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_610> AgradDistributionsBetaBinomial_v_610;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_611> AgradDistributionsBetaBinomial_v_611;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_612> AgradDistributionsBetaBinomial_v_612;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_613> AgradDistributionsBetaBinomial_v_613;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_614> AgradDistributionsBetaBinomial_v_614;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_615> AgradDistributionsBetaBinomial_v_615;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_616> AgradDistributionsBetaBinomial_v_616;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_617> AgradDistributionsBetaBinomial_v_617;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_618> AgradDistributionsBetaBinomial_v_618;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_619> AgradDistributionsBetaBinomial_v_619;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_620> AgradDistributionsBetaBinomial_v_620;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_621> AgradDistributionsBetaBinomial_v_621;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_622> AgradDistributionsBetaBinomial_v_622;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_623> AgradDistributionsBetaBinomial_v_623;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_624> AgradDistributionsBetaBinomial_v_624;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_625> AgradDistributionsBetaBinomial_v_625;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_626> AgradDistributionsBetaBinomial_v_626;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_627> AgradDistributionsBetaBinomial_v_627;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_628> AgradDistributionsBetaBinomial_v_628;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_629> AgradDistributionsBetaBinomial_v_629;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_630> AgradDistributionsBetaBinomial_v_630;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_631> AgradDistributionsBetaBinomial_v_631;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_632> AgradDistributionsBetaBinomial_v_632;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_633> AgradDistributionsBetaBinomial_v_633;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_634> AgradDistributionsBetaBinomial_v_634;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_635> AgradDistributionsBetaBinomial_v_635;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_636> AgradDistributionsBetaBinomial_v_636;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_637> AgradDistributionsBetaBinomial_v_637;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_638> AgradDistributionsBetaBinomial_v_638;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_639> AgradDistributionsBetaBinomial_v_639;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_640> AgradDistributionsBetaBinomial_v_640;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_641> AgradDistributionsBetaBinomial_v_641;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_642> AgradDistributionsBetaBinomial_v_642;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_643> AgradDistributionsBetaBinomial_v_643;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_644> AgradDistributionsBetaBinomial_v_644;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_645> AgradDistributionsBetaBinomial_v_645;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_646> AgradDistributionsBetaBinomial_v_646;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_647> AgradDistributionsBetaBinomial_v_647;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_648> AgradDistributionsBetaBinomial_v_648;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_649> AgradDistributionsBetaBinomial_v_649;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_650> AgradDistributionsBetaBinomial_v_650;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_651> AgradDistributionsBetaBinomial_v_651;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_652> AgradDistributionsBetaBinomial_v_652;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_653> AgradDistributionsBetaBinomial_v_653;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_654> AgradDistributionsBetaBinomial_v_654;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_655> AgradDistributionsBetaBinomial_v_655;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_656> AgradDistributionsBetaBinomial_v_656;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_657> AgradDistributionsBetaBinomial_v_657;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_658> AgradDistributionsBetaBinomial_v_658;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_659> AgradDistributionsBetaBinomial_v_659;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_660> AgradDistributionsBetaBinomial_v_660;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_661> AgradDistributionsBetaBinomial_v_661;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_662> AgradDistributionsBetaBinomial_v_662;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_663> AgradDistributionsBetaBinomial_v_663;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_664> AgradDistributionsBetaBinomial_v_664;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_665> AgradDistributionsBetaBinomial_v_665;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_666> AgradDistributionsBetaBinomial_v_666;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_667> AgradDistributionsBetaBinomial_v_667;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_668> AgradDistributionsBetaBinomial_v_668;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_669> AgradDistributionsBetaBinomial_v_669;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_670> AgradDistributionsBetaBinomial_v_670;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_671> AgradDistributionsBetaBinomial_v_671;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_672> AgradDistributionsBetaBinomial_v_672;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_673> AgradDistributionsBetaBinomial_v_673;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_674> AgradDistributionsBetaBinomial_v_674;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_675> AgradDistributionsBetaBinomial_v_675;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_676> AgradDistributionsBetaBinomial_v_676;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_677> AgradDistributionsBetaBinomial_v_677;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_678> AgradDistributionsBetaBinomial_v_678;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_679> AgradDistributionsBetaBinomial_v_679;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_680> AgradDistributionsBetaBinomial_v_680;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_681> AgradDistributionsBetaBinomial_v_681;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_682> AgradDistributionsBetaBinomial_v_682;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_683> AgradDistributionsBetaBinomial_v_683;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_684> AgradDistributionsBetaBinomial_v_684;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_685> AgradDistributionsBetaBinomial_v_685;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_686> AgradDistributionsBetaBinomial_v_686;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_687> AgradDistributionsBetaBinomial_v_687;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_688> AgradDistributionsBetaBinomial_v_688;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_689> AgradDistributionsBetaBinomial_v_689;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_690> AgradDistributionsBetaBinomial_v_690;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_691> AgradDistributionsBetaBinomial_v_691;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_692> AgradDistributionsBetaBinomial_v_692;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_693> AgradDistributionsBetaBinomial_v_693;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_694> AgradDistributionsBetaBinomial_v_694;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_695> AgradDistributionsBetaBinomial_v_695;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_696> AgradDistributionsBetaBinomial_v_696;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_697> AgradDistributionsBetaBinomial_v_697;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_698> AgradDistributionsBetaBinomial_v_698;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_699> AgradDistributionsBetaBinomial_v_699;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_600, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_600);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_601, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_601);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_602, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_602);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_603, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_603);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_604, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_604);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_605, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_605);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_606, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_606);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_607, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_607);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_608, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_608);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_609, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_609);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_610, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_610);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_611, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_611);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_612, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_612);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_613, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_613);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_614, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_614);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_615, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_615);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_616, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_616);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_617, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_617);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_618, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_618);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_619, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_619);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_620, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_620);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_621, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_621);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_622, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_622);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_623, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_623);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_624, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_624);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_625, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_625);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_626, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_626);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_627, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_627);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_628, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_628);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_629, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_629);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_630, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_630);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_631, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_631);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_632, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_632);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_633, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_633);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_634, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_634);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_635, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_635);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_636, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_636);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_637, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_637);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_638, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_638);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_639, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_639);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_640, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_640);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_641, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_641);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_642, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_642);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_643, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_643);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_644, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_644);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_645, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_645);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_646, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_646);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_647, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_647);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_648, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_648);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_649, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_649);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_650, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_650);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_651, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_651);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_652, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_652);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_653, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_653);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_654, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_654);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_655, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_655);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_656, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_656);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_657, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_657);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_658, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_658);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_659, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_659);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_660, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_660);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_661, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_661);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_662, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_662);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_663, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_663);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_664, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_664);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_665, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_665);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_666, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_666);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_667, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_667);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_668, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_668);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_669, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_669);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_670, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_670);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_671, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_671);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_672, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_672);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_673, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_673);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_674, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_674);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_675, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_675);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_676, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_676);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_677, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_677);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_678, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_678);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_679, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_679);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_680, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_680);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_681, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_681);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_682, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_682);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_683, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_683);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_684, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_684);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_685, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_685);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_686, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_686);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_687, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_687);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_688, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_688);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_689, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_689);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_690, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_690);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_691, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_691);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_692, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_692);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_693, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_693);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_694, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_694);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_695, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_695);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_696, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_696);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_697, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_697);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_698, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_698);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_699, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_699);

