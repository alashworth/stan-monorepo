#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, double, empty, empty> type_v_800;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<double>, empty, empty> type_v_801;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_802;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_803;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, var, empty, empty> type_v_804;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<var>, empty, empty> type_v_805;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_806;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_807;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, double, empty, empty> type_v_808;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_809;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_810;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_811;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, var, empty, empty> type_v_812;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_813;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_814;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_815;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_816;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_817;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_818;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_819;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_820;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_821;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_822;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_823;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_824;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_825;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_826;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_827;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_828;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_829;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_830;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_831;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, double, empty, empty> type_v_832;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_833;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_834;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_835;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, var, empty, empty> type_v_836;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_837;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_838;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_839;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_840;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_841;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_842;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_843;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_844;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_845;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_846;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_847;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_848;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_849;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_850;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_851;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_852;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_853;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_854;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_855;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_856;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_857;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_858;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_859;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_860;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_861;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_862;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_863;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, double, empty, empty> type_v_864;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_865;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_866;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_867;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, var, empty, empty> type_v_868;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_869;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_870;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_871;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_872;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_873;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_874;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_875;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_876;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_877;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_878;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_879;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_880;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_881;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_882;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_883;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_884;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_885;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_886;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_887;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_888;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_889;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_890;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_891;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_892;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_893;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_894;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_895;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_896;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_897;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_898;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_899;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_800> AgradDistributionsBetaBinomial_v_800;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_801> AgradDistributionsBetaBinomial_v_801;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_802> AgradDistributionsBetaBinomial_v_802;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_803> AgradDistributionsBetaBinomial_v_803;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_804> AgradDistributionsBetaBinomial_v_804;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_805> AgradDistributionsBetaBinomial_v_805;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_806> AgradDistributionsBetaBinomial_v_806;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_807> AgradDistributionsBetaBinomial_v_807;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_808> AgradDistributionsBetaBinomial_v_808;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_809> AgradDistributionsBetaBinomial_v_809;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_810> AgradDistributionsBetaBinomial_v_810;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_811> AgradDistributionsBetaBinomial_v_811;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_812> AgradDistributionsBetaBinomial_v_812;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_813> AgradDistributionsBetaBinomial_v_813;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_814> AgradDistributionsBetaBinomial_v_814;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_815> AgradDistributionsBetaBinomial_v_815;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_816> AgradDistributionsBetaBinomial_v_816;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_817> AgradDistributionsBetaBinomial_v_817;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_818> AgradDistributionsBetaBinomial_v_818;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_819> AgradDistributionsBetaBinomial_v_819;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_820> AgradDistributionsBetaBinomial_v_820;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_821> AgradDistributionsBetaBinomial_v_821;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_822> AgradDistributionsBetaBinomial_v_822;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_823> AgradDistributionsBetaBinomial_v_823;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_824> AgradDistributionsBetaBinomial_v_824;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_825> AgradDistributionsBetaBinomial_v_825;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_826> AgradDistributionsBetaBinomial_v_826;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_827> AgradDistributionsBetaBinomial_v_827;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_828> AgradDistributionsBetaBinomial_v_828;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_829> AgradDistributionsBetaBinomial_v_829;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_830> AgradDistributionsBetaBinomial_v_830;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_831> AgradDistributionsBetaBinomial_v_831;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_832> AgradDistributionsBetaBinomial_v_832;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_833> AgradDistributionsBetaBinomial_v_833;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_834> AgradDistributionsBetaBinomial_v_834;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_835> AgradDistributionsBetaBinomial_v_835;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_836> AgradDistributionsBetaBinomial_v_836;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_837> AgradDistributionsBetaBinomial_v_837;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_838> AgradDistributionsBetaBinomial_v_838;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_839> AgradDistributionsBetaBinomial_v_839;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_840> AgradDistributionsBetaBinomial_v_840;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_841> AgradDistributionsBetaBinomial_v_841;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_842> AgradDistributionsBetaBinomial_v_842;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_843> AgradDistributionsBetaBinomial_v_843;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_844> AgradDistributionsBetaBinomial_v_844;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_845> AgradDistributionsBetaBinomial_v_845;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_846> AgradDistributionsBetaBinomial_v_846;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_847> AgradDistributionsBetaBinomial_v_847;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_848> AgradDistributionsBetaBinomial_v_848;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_849> AgradDistributionsBetaBinomial_v_849;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_850> AgradDistributionsBetaBinomial_v_850;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_851> AgradDistributionsBetaBinomial_v_851;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_852> AgradDistributionsBetaBinomial_v_852;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_853> AgradDistributionsBetaBinomial_v_853;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_854> AgradDistributionsBetaBinomial_v_854;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_855> AgradDistributionsBetaBinomial_v_855;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_856> AgradDistributionsBetaBinomial_v_856;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_857> AgradDistributionsBetaBinomial_v_857;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_858> AgradDistributionsBetaBinomial_v_858;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_859> AgradDistributionsBetaBinomial_v_859;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_860> AgradDistributionsBetaBinomial_v_860;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_861> AgradDistributionsBetaBinomial_v_861;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_862> AgradDistributionsBetaBinomial_v_862;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_863> AgradDistributionsBetaBinomial_v_863;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_864> AgradDistributionsBetaBinomial_v_864;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_865> AgradDistributionsBetaBinomial_v_865;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_866> AgradDistributionsBetaBinomial_v_866;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_867> AgradDistributionsBetaBinomial_v_867;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_868> AgradDistributionsBetaBinomial_v_868;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_869> AgradDistributionsBetaBinomial_v_869;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_870> AgradDistributionsBetaBinomial_v_870;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_871> AgradDistributionsBetaBinomial_v_871;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_872> AgradDistributionsBetaBinomial_v_872;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_873> AgradDistributionsBetaBinomial_v_873;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_874> AgradDistributionsBetaBinomial_v_874;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_875> AgradDistributionsBetaBinomial_v_875;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_876> AgradDistributionsBetaBinomial_v_876;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_877> AgradDistributionsBetaBinomial_v_877;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_878> AgradDistributionsBetaBinomial_v_878;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_879> AgradDistributionsBetaBinomial_v_879;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_880> AgradDistributionsBetaBinomial_v_880;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_881> AgradDistributionsBetaBinomial_v_881;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_882> AgradDistributionsBetaBinomial_v_882;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_883> AgradDistributionsBetaBinomial_v_883;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_884> AgradDistributionsBetaBinomial_v_884;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_885> AgradDistributionsBetaBinomial_v_885;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_886> AgradDistributionsBetaBinomial_v_886;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_887> AgradDistributionsBetaBinomial_v_887;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_888> AgradDistributionsBetaBinomial_v_888;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_889> AgradDistributionsBetaBinomial_v_889;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_890> AgradDistributionsBetaBinomial_v_890;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_891> AgradDistributionsBetaBinomial_v_891;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_892> AgradDistributionsBetaBinomial_v_892;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_893> AgradDistributionsBetaBinomial_v_893;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_894> AgradDistributionsBetaBinomial_v_894;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_895> AgradDistributionsBetaBinomial_v_895;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_896> AgradDistributionsBetaBinomial_v_896;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_897> AgradDistributionsBetaBinomial_v_897;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_898> AgradDistributionsBetaBinomial_v_898;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_899> AgradDistributionsBetaBinomial_v_899;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_800, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_800);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_801, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_801);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_802, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_802);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_803, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_803);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_804, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_804);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_805, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_805);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_806, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_806);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_807, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_807);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_808, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_808);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_809, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_809);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_810, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_810);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_811, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_811);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_812, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_812);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_813, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_813);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_814, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_814);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_815, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_815);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_816, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_816);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_817, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_817);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_818, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_818);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_819, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_819);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_820, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_820);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_821, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_821);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_822, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_822);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_823, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_823);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_824, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_824);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_825, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_825);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_826, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_826);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_827, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_827);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_828, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_828);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_829, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_829);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_830, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_830);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_831, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_831);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_832, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_832);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_833, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_833);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_834, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_834);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_835, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_835);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_836, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_836);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_837, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_837);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_838, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_838);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_839, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_839);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_840, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_840);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_841, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_841);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_842, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_842);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_843, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_843);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_844, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_844);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_845, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_845);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_846, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_846);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_847, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_847);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_848, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_848);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_849, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_849);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_850, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_850);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_851, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_851);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_852, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_852);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_853, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_853);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_854, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_854);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_855, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_855);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_856, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_856);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_857, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_857);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_858, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_858);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_859, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_859);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_860, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_860);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_861, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_861);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_862, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_862);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_863, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_863);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_864, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_864);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_865, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_865);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_866, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_866);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_867, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_867);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_868, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_868);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_869, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_869);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_870, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_870);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_871, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_871);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_872, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_872);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_873, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_873);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_874, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_874);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_875, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_875);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_876, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_876);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_877, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_877);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_878, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_878);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_879, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_879);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_880, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_880);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_881, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_881);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_882, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_882);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_883, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_883);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_884, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_884);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_885, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_885);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_886, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_886);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_887, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_887);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_888, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_888);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_889, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_889);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_890, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_890);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_891, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_891);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_892, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_892);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_893, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_893);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_894, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_894);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_895, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_895);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_896, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_896);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_897, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_897);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_898, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_898);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_899, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_899);

