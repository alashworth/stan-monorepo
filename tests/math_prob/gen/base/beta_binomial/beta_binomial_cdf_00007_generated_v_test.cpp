#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_700;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_701;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_702;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_703;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_704;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_705;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_706;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_707;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_708;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_709;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_710;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_711;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_712;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_713;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_714;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_715;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_716;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_717;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_718;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_719;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_720;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_721;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_722;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_723;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_724;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_725;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_726;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_727;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_728;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_729;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_730;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_731;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_732;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_733;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_734;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_735;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_736;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_737;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_738;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_739;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_740;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_741;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_742;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_743;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_744;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_745;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_746;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_747;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_748;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_749;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_750;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_751;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_752;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_753;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_754;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_755;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_756;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_757;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_758;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_759;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_760;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_761;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_762;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_763;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_764;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_765;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_766;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_767;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, double, empty, empty> type_v_768;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<double>, empty, empty> type_v_769;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_770;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_771;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, var, empty, empty> type_v_772;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<var>, empty, empty> type_v_773;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_774;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_775;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, double, empty, empty> type_v_776;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_777;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_778;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_779;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, var, empty, empty> type_v_780;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_781;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_782;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_783;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_784;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_785;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_786;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_787;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_788;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_789;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_790;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_791;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_792;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_793;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_794;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_795;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_796;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_797;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_798;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_799;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_700> AgradCdfBetaBinomial_v_700;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_701> AgradCdfBetaBinomial_v_701;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_702> AgradCdfBetaBinomial_v_702;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_703> AgradCdfBetaBinomial_v_703;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_704> AgradCdfBetaBinomial_v_704;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_705> AgradCdfBetaBinomial_v_705;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_706> AgradCdfBetaBinomial_v_706;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_707> AgradCdfBetaBinomial_v_707;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_708> AgradCdfBetaBinomial_v_708;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_709> AgradCdfBetaBinomial_v_709;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_710> AgradCdfBetaBinomial_v_710;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_711> AgradCdfBetaBinomial_v_711;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_712> AgradCdfBetaBinomial_v_712;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_713> AgradCdfBetaBinomial_v_713;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_714> AgradCdfBetaBinomial_v_714;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_715> AgradCdfBetaBinomial_v_715;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_716> AgradCdfBetaBinomial_v_716;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_717> AgradCdfBetaBinomial_v_717;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_718> AgradCdfBetaBinomial_v_718;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_719> AgradCdfBetaBinomial_v_719;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_720> AgradCdfBetaBinomial_v_720;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_721> AgradCdfBetaBinomial_v_721;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_722> AgradCdfBetaBinomial_v_722;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_723> AgradCdfBetaBinomial_v_723;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_724> AgradCdfBetaBinomial_v_724;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_725> AgradCdfBetaBinomial_v_725;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_726> AgradCdfBetaBinomial_v_726;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_727> AgradCdfBetaBinomial_v_727;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_728> AgradCdfBetaBinomial_v_728;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_729> AgradCdfBetaBinomial_v_729;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_730> AgradCdfBetaBinomial_v_730;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_731> AgradCdfBetaBinomial_v_731;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_732> AgradCdfBetaBinomial_v_732;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_733> AgradCdfBetaBinomial_v_733;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_734> AgradCdfBetaBinomial_v_734;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_735> AgradCdfBetaBinomial_v_735;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_736> AgradCdfBetaBinomial_v_736;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_737> AgradCdfBetaBinomial_v_737;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_738> AgradCdfBetaBinomial_v_738;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_739> AgradCdfBetaBinomial_v_739;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_740> AgradCdfBetaBinomial_v_740;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_741> AgradCdfBetaBinomial_v_741;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_742> AgradCdfBetaBinomial_v_742;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_743> AgradCdfBetaBinomial_v_743;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_744> AgradCdfBetaBinomial_v_744;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_745> AgradCdfBetaBinomial_v_745;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_746> AgradCdfBetaBinomial_v_746;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_747> AgradCdfBetaBinomial_v_747;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_748> AgradCdfBetaBinomial_v_748;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_749> AgradCdfBetaBinomial_v_749;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_750> AgradCdfBetaBinomial_v_750;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_751> AgradCdfBetaBinomial_v_751;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_752> AgradCdfBetaBinomial_v_752;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_753> AgradCdfBetaBinomial_v_753;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_754> AgradCdfBetaBinomial_v_754;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_755> AgradCdfBetaBinomial_v_755;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_756> AgradCdfBetaBinomial_v_756;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_757> AgradCdfBetaBinomial_v_757;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_758> AgradCdfBetaBinomial_v_758;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_759> AgradCdfBetaBinomial_v_759;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_760> AgradCdfBetaBinomial_v_760;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_761> AgradCdfBetaBinomial_v_761;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_762> AgradCdfBetaBinomial_v_762;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_763> AgradCdfBetaBinomial_v_763;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_764> AgradCdfBetaBinomial_v_764;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_765> AgradCdfBetaBinomial_v_765;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_766> AgradCdfBetaBinomial_v_766;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_767> AgradCdfBetaBinomial_v_767;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_768> AgradCdfBetaBinomial_v_768;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_769> AgradCdfBetaBinomial_v_769;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_770> AgradCdfBetaBinomial_v_770;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_771> AgradCdfBetaBinomial_v_771;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_772> AgradCdfBetaBinomial_v_772;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_773> AgradCdfBetaBinomial_v_773;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_774> AgradCdfBetaBinomial_v_774;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_775> AgradCdfBetaBinomial_v_775;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_776> AgradCdfBetaBinomial_v_776;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_777> AgradCdfBetaBinomial_v_777;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_778> AgradCdfBetaBinomial_v_778;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_779> AgradCdfBetaBinomial_v_779;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_780> AgradCdfBetaBinomial_v_780;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_781> AgradCdfBetaBinomial_v_781;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_782> AgradCdfBetaBinomial_v_782;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_783> AgradCdfBetaBinomial_v_783;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_784> AgradCdfBetaBinomial_v_784;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_785> AgradCdfBetaBinomial_v_785;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_786> AgradCdfBetaBinomial_v_786;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_787> AgradCdfBetaBinomial_v_787;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_788> AgradCdfBetaBinomial_v_788;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_789> AgradCdfBetaBinomial_v_789;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_790> AgradCdfBetaBinomial_v_790;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_791> AgradCdfBetaBinomial_v_791;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_792> AgradCdfBetaBinomial_v_792;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_793> AgradCdfBetaBinomial_v_793;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_794> AgradCdfBetaBinomial_v_794;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_795> AgradCdfBetaBinomial_v_795;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_796> AgradCdfBetaBinomial_v_796;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_797> AgradCdfBetaBinomial_v_797;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_798> AgradCdfBetaBinomial_v_798;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_799> AgradCdfBetaBinomial_v_799;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_700, AgradCdfTestFixture, AgradCdfBetaBinomial_v_700);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_701, AgradCdfTestFixture, AgradCdfBetaBinomial_v_701);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_702, AgradCdfTestFixture, AgradCdfBetaBinomial_v_702);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_703, AgradCdfTestFixture, AgradCdfBetaBinomial_v_703);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_704, AgradCdfTestFixture, AgradCdfBetaBinomial_v_704);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_705, AgradCdfTestFixture, AgradCdfBetaBinomial_v_705);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_706, AgradCdfTestFixture, AgradCdfBetaBinomial_v_706);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_707, AgradCdfTestFixture, AgradCdfBetaBinomial_v_707);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_708, AgradCdfTestFixture, AgradCdfBetaBinomial_v_708);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_709, AgradCdfTestFixture, AgradCdfBetaBinomial_v_709);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_710, AgradCdfTestFixture, AgradCdfBetaBinomial_v_710);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_711, AgradCdfTestFixture, AgradCdfBetaBinomial_v_711);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_712, AgradCdfTestFixture, AgradCdfBetaBinomial_v_712);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_713, AgradCdfTestFixture, AgradCdfBetaBinomial_v_713);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_714, AgradCdfTestFixture, AgradCdfBetaBinomial_v_714);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_715, AgradCdfTestFixture, AgradCdfBetaBinomial_v_715);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_716, AgradCdfTestFixture, AgradCdfBetaBinomial_v_716);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_717, AgradCdfTestFixture, AgradCdfBetaBinomial_v_717);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_718, AgradCdfTestFixture, AgradCdfBetaBinomial_v_718);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_719, AgradCdfTestFixture, AgradCdfBetaBinomial_v_719);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_720, AgradCdfTestFixture, AgradCdfBetaBinomial_v_720);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_721, AgradCdfTestFixture, AgradCdfBetaBinomial_v_721);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_722, AgradCdfTestFixture, AgradCdfBetaBinomial_v_722);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_723, AgradCdfTestFixture, AgradCdfBetaBinomial_v_723);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_724, AgradCdfTestFixture, AgradCdfBetaBinomial_v_724);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_725, AgradCdfTestFixture, AgradCdfBetaBinomial_v_725);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_726, AgradCdfTestFixture, AgradCdfBetaBinomial_v_726);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_727, AgradCdfTestFixture, AgradCdfBetaBinomial_v_727);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_728, AgradCdfTestFixture, AgradCdfBetaBinomial_v_728);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_729, AgradCdfTestFixture, AgradCdfBetaBinomial_v_729);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_730, AgradCdfTestFixture, AgradCdfBetaBinomial_v_730);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_731, AgradCdfTestFixture, AgradCdfBetaBinomial_v_731);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_732, AgradCdfTestFixture, AgradCdfBetaBinomial_v_732);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_733, AgradCdfTestFixture, AgradCdfBetaBinomial_v_733);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_734, AgradCdfTestFixture, AgradCdfBetaBinomial_v_734);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_735, AgradCdfTestFixture, AgradCdfBetaBinomial_v_735);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_736, AgradCdfTestFixture, AgradCdfBetaBinomial_v_736);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_737, AgradCdfTestFixture, AgradCdfBetaBinomial_v_737);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_738, AgradCdfTestFixture, AgradCdfBetaBinomial_v_738);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_739, AgradCdfTestFixture, AgradCdfBetaBinomial_v_739);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_740, AgradCdfTestFixture, AgradCdfBetaBinomial_v_740);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_741, AgradCdfTestFixture, AgradCdfBetaBinomial_v_741);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_742, AgradCdfTestFixture, AgradCdfBetaBinomial_v_742);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_743, AgradCdfTestFixture, AgradCdfBetaBinomial_v_743);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_744, AgradCdfTestFixture, AgradCdfBetaBinomial_v_744);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_745, AgradCdfTestFixture, AgradCdfBetaBinomial_v_745);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_746, AgradCdfTestFixture, AgradCdfBetaBinomial_v_746);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_747, AgradCdfTestFixture, AgradCdfBetaBinomial_v_747);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_748, AgradCdfTestFixture, AgradCdfBetaBinomial_v_748);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_749, AgradCdfTestFixture, AgradCdfBetaBinomial_v_749);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_750, AgradCdfTestFixture, AgradCdfBetaBinomial_v_750);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_751, AgradCdfTestFixture, AgradCdfBetaBinomial_v_751);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_752, AgradCdfTestFixture, AgradCdfBetaBinomial_v_752);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_753, AgradCdfTestFixture, AgradCdfBetaBinomial_v_753);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_754, AgradCdfTestFixture, AgradCdfBetaBinomial_v_754);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_755, AgradCdfTestFixture, AgradCdfBetaBinomial_v_755);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_756, AgradCdfTestFixture, AgradCdfBetaBinomial_v_756);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_757, AgradCdfTestFixture, AgradCdfBetaBinomial_v_757);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_758, AgradCdfTestFixture, AgradCdfBetaBinomial_v_758);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_759, AgradCdfTestFixture, AgradCdfBetaBinomial_v_759);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_760, AgradCdfTestFixture, AgradCdfBetaBinomial_v_760);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_761, AgradCdfTestFixture, AgradCdfBetaBinomial_v_761);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_762, AgradCdfTestFixture, AgradCdfBetaBinomial_v_762);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_763, AgradCdfTestFixture, AgradCdfBetaBinomial_v_763);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_764, AgradCdfTestFixture, AgradCdfBetaBinomial_v_764);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_765, AgradCdfTestFixture, AgradCdfBetaBinomial_v_765);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_766, AgradCdfTestFixture, AgradCdfBetaBinomial_v_766);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_767, AgradCdfTestFixture, AgradCdfBetaBinomial_v_767);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_768, AgradCdfTestFixture, AgradCdfBetaBinomial_v_768);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_769, AgradCdfTestFixture, AgradCdfBetaBinomial_v_769);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_770, AgradCdfTestFixture, AgradCdfBetaBinomial_v_770);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_771, AgradCdfTestFixture, AgradCdfBetaBinomial_v_771);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_772, AgradCdfTestFixture, AgradCdfBetaBinomial_v_772);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_773, AgradCdfTestFixture, AgradCdfBetaBinomial_v_773);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_774, AgradCdfTestFixture, AgradCdfBetaBinomial_v_774);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_775, AgradCdfTestFixture, AgradCdfBetaBinomial_v_775);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_776, AgradCdfTestFixture, AgradCdfBetaBinomial_v_776);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_777, AgradCdfTestFixture, AgradCdfBetaBinomial_v_777);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_778, AgradCdfTestFixture, AgradCdfBetaBinomial_v_778);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_779, AgradCdfTestFixture, AgradCdfBetaBinomial_v_779);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_780, AgradCdfTestFixture, AgradCdfBetaBinomial_v_780);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_781, AgradCdfTestFixture, AgradCdfBetaBinomial_v_781);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_782, AgradCdfTestFixture, AgradCdfBetaBinomial_v_782);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_783, AgradCdfTestFixture, AgradCdfBetaBinomial_v_783);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_784, AgradCdfTestFixture, AgradCdfBetaBinomial_v_784);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_785, AgradCdfTestFixture, AgradCdfBetaBinomial_v_785);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_786, AgradCdfTestFixture, AgradCdfBetaBinomial_v_786);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_787, AgradCdfTestFixture, AgradCdfBetaBinomial_v_787);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_788, AgradCdfTestFixture, AgradCdfBetaBinomial_v_788);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_789, AgradCdfTestFixture, AgradCdfBetaBinomial_v_789);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_790, AgradCdfTestFixture, AgradCdfBetaBinomial_v_790);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_791, AgradCdfTestFixture, AgradCdfBetaBinomial_v_791);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_792, AgradCdfTestFixture, AgradCdfBetaBinomial_v_792);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_793, AgradCdfTestFixture, AgradCdfBetaBinomial_v_793);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_794, AgradCdfTestFixture, AgradCdfBetaBinomial_v_794);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_795, AgradCdfTestFixture, AgradCdfBetaBinomial_v_795);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_796, AgradCdfTestFixture, AgradCdfBetaBinomial_v_796);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_797, AgradCdfTestFixture, AgradCdfBetaBinomial_v_797);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_798, AgradCdfTestFixture, AgradCdfBetaBinomial_v_798);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_799, AgradCdfTestFixture, AgradCdfBetaBinomial_v_799);

