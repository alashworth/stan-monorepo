#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, double, empty, empty> type_fv_400;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, std::vector<double>, empty, empty> type_fv_401;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_402;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_403;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, fvar<var>, empty, empty> type_fv_404;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_405;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_406;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_407;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, double, empty, empty> type_fv_408;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_409;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_410;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_411;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_412;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_413;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_414;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_415;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_416;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_417;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_418;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_419;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_420;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_421;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_422;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_423;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_424;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_425;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_426;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_427;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_428;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_429;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_430;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_431;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, fvar<var>, empty, empty> type_fv_432;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<fvar<var>>, empty, empty> type_fv_433;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_434;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_435;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, fvar<var>, empty, empty> type_fv_436;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_437;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_438;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_439;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_440;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_441;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_442;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_443;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_444;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_445;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_446;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_447;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, double, empty, empty> type_fv_448;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, std::vector<double>, empty, empty> type_fv_449;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_450;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_451;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, fvar<var>, empty, empty> type_fv_452;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_453;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_454;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_455;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, double, empty, empty> type_fv_456;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_457;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_458;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_459;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_460;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_461;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_462;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_463;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_464;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_465;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_466;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_467;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_468;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_469;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_470;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_471;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_472;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_473;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_474;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_475;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_476;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_477;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_478;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_479;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty> type_fv_480;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty> type_fv_481;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_482;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_483;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty> type_fv_484;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_485;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_486;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_487;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_488;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_489;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_490;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_491;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_492;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_493;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_494;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_495;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty> type_fv_496;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty> type_fv_497;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_498;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_499;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty> type_fv_500;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_501;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_502;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_503;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty> type_fv_504;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_505;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_506;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_507;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_508;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_509;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_510;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty> type_fv_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty> type_fv_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty> type_fv_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty> type_fv_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty> type_fv_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty> type_fv_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty> type_fv_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_575;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, fvar<var>, empty, empty> type_fv_576;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<fvar<var>>, empty, empty> type_fv_577;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_578;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_579;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, fvar<var>, empty, empty> type_fv_580;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_581;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_582;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_583;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_584;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_585;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_586;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_587;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_588;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_589;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_590;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_591;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, double, empty, empty> type_fv_592;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, std::vector<double>, empty, empty> type_fv_593;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_594;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_595;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, fvar<var>, empty, empty> type_fv_596;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_597;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_598;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_599;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_400> AgradDistributionsBetaBinomial_fv_400;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_401> AgradDistributionsBetaBinomial_fv_401;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_402> AgradDistributionsBetaBinomial_fv_402;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_403> AgradDistributionsBetaBinomial_fv_403;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_404> AgradDistributionsBetaBinomial_fv_404;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_405> AgradDistributionsBetaBinomial_fv_405;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_406> AgradDistributionsBetaBinomial_fv_406;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_407> AgradDistributionsBetaBinomial_fv_407;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_408> AgradDistributionsBetaBinomial_fv_408;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_409> AgradDistributionsBetaBinomial_fv_409;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_410> AgradDistributionsBetaBinomial_fv_410;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_411> AgradDistributionsBetaBinomial_fv_411;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_412> AgradDistributionsBetaBinomial_fv_412;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_413> AgradDistributionsBetaBinomial_fv_413;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_414> AgradDistributionsBetaBinomial_fv_414;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_415> AgradDistributionsBetaBinomial_fv_415;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_416> AgradDistributionsBetaBinomial_fv_416;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_417> AgradDistributionsBetaBinomial_fv_417;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_418> AgradDistributionsBetaBinomial_fv_418;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_419> AgradDistributionsBetaBinomial_fv_419;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_420> AgradDistributionsBetaBinomial_fv_420;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_421> AgradDistributionsBetaBinomial_fv_421;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_422> AgradDistributionsBetaBinomial_fv_422;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_423> AgradDistributionsBetaBinomial_fv_423;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_424> AgradDistributionsBetaBinomial_fv_424;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_425> AgradDistributionsBetaBinomial_fv_425;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_426> AgradDistributionsBetaBinomial_fv_426;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_427> AgradDistributionsBetaBinomial_fv_427;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_428> AgradDistributionsBetaBinomial_fv_428;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_429> AgradDistributionsBetaBinomial_fv_429;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_430> AgradDistributionsBetaBinomial_fv_430;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_431> AgradDistributionsBetaBinomial_fv_431;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_432> AgradDistributionsBetaBinomial_fv_432;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_433> AgradDistributionsBetaBinomial_fv_433;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_434> AgradDistributionsBetaBinomial_fv_434;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_435> AgradDistributionsBetaBinomial_fv_435;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_436> AgradDistributionsBetaBinomial_fv_436;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_437> AgradDistributionsBetaBinomial_fv_437;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_438> AgradDistributionsBetaBinomial_fv_438;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_439> AgradDistributionsBetaBinomial_fv_439;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_440> AgradDistributionsBetaBinomial_fv_440;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_441> AgradDistributionsBetaBinomial_fv_441;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_442> AgradDistributionsBetaBinomial_fv_442;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_443> AgradDistributionsBetaBinomial_fv_443;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_444> AgradDistributionsBetaBinomial_fv_444;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_445> AgradDistributionsBetaBinomial_fv_445;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_446> AgradDistributionsBetaBinomial_fv_446;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_447> AgradDistributionsBetaBinomial_fv_447;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_448> AgradDistributionsBetaBinomial_fv_448;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_449> AgradDistributionsBetaBinomial_fv_449;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_450> AgradDistributionsBetaBinomial_fv_450;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_451> AgradDistributionsBetaBinomial_fv_451;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_452> AgradDistributionsBetaBinomial_fv_452;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_453> AgradDistributionsBetaBinomial_fv_453;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_454> AgradDistributionsBetaBinomial_fv_454;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_455> AgradDistributionsBetaBinomial_fv_455;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_456> AgradDistributionsBetaBinomial_fv_456;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_457> AgradDistributionsBetaBinomial_fv_457;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_458> AgradDistributionsBetaBinomial_fv_458;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_459> AgradDistributionsBetaBinomial_fv_459;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_460> AgradDistributionsBetaBinomial_fv_460;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_461> AgradDistributionsBetaBinomial_fv_461;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_462> AgradDistributionsBetaBinomial_fv_462;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_463> AgradDistributionsBetaBinomial_fv_463;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_464> AgradDistributionsBetaBinomial_fv_464;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_465> AgradDistributionsBetaBinomial_fv_465;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_466> AgradDistributionsBetaBinomial_fv_466;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_467> AgradDistributionsBetaBinomial_fv_467;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_468> AgradDistributionsBetaBinomial_fv_468;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_469> AgradDistributionsBetaBinomial_fv_469;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_470> AgradDistributionsBetaBinomial_fv_470;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_471> AgradDistributionsBetaBinomial_fv_471;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_472> AgradDistributionsBetaBinomial_fv_472;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_473> AgradDistributionsBetaBinomial_fv_473;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_474> AgradDistributionsBetaBinomial_fv_474;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_475> AgradDistributionsBetaBinomial_fv_475;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_476> AgradDistributionsBetaBinomial_fv_476;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_477> AgradDistributionsBetaBinomial_fv_477;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_478> AgradDistributionsBetaBinomial_fv_478;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_479> AgradDistributionsBetaBinomial_fv_479;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_480> AgradDistributionsBetaBinomial_fv_480;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_481> AgradDistributionsBetaBinomial_fv_481;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_482> AgradDistributionsBetaBinomial_fv_482;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_483> AgradDistributionsBetaBinomial_fv_483;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_484> AgradDistributionsBetaBinomial_fv_484;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_485> AgradDistributionsBetaBinomial_fv_485;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_486> AgradDistributionsBetaBinomial_fv_486;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_487> AgradDistributionsBetaBinomial_fv_487;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_488> AgradDistributionsBetaBinomial_fv_488;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_489> AgradDistributionsBetaBinomial_fv_489;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_490> AgradDistributionsBetaBinomial_fv_490;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_491> AgradDistributionsBetaBinomial_fv_491;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_492> AgradDistributionsBetaBinomial_fv_492;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_493> AgradDistributionsBetaBinomial_fv_493;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_494> AgradDistributionsBetaBinomial_fv_494;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_495> AgradDistributionsBetaBinomial_fv_495;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_496> AgradDistributionsBetaBinomial_fv_496;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_497> AgradDistributionsBetaBinomial_fv_497;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_498> AgradDistributionsBetaBinomial_fv_498;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_499> AgradDistributionsBetaBinomial_fv_499;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_500> AgradDistributionsBetaBinomial_fv_500;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_501> AgradDistributionsBetaBinomial_fv_501;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_502> AgradDistributionsBetaBinomial_fv_502;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_503> AgradDistributionsBetaBinomial_fv_503;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_504> AgradDistributionsBetaBinomial_fv_504;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_505> AgradDistributionsBetaBinomial_fv_505;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_506> AgradDistributionsBetaBinomial_fv_506;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_507> AgradDistributionsBetaBinomial_fv_507;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_508> AgradDistributionsBetaBinomial_fv_508;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_509> AgradDistributionsBetaBinomial_fv_509;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_510> AgradDistributionsBetaBinomial_fv_510;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_511> AgradDistributionsBetaBinomial_fv_511;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_512> AgradDistributionsBetaBinomial_fv_512;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_513> AgradDistributionsBetaBinomial_fv_513;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_514> AgradDistributionsBetaBinomial_fv_514;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_515> AgradDistributionsBetaBinomial_fv_515;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_516> AgradDistributionsBetaBinomial_fv_516;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_517> AgradDistributionsBetaBinomial_fv_517;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_518> AgradDistributionsBetaBinomial_fv_518;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_519> AgradDistributionsBetaBinomial_fv_519;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_520> AgradDistributionsBetaBinomial_fv_520;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_521> AgradDistributionsBetaBinomial_fv_521;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_522> AgradDistributionsBetaBinomial_fv_522;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_523> AgradDistributionsBetaBinomial_fv_523;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_524> AgradDistributionsBetaBinomial_fv_524;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_525> AgradDistributionsBetaBinomial_fv_525;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_526> AgradDistributionsBetaBinomial_fv_526;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_527> AgradDistributionsBetaBinomial_fv_527;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_528> AgradDistributionsBetaBinomial_fv_528;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_529> AgradDistributionsBetaBinomial_fv_529;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_530> AgradDistributionsBetaBinomial_fv_530;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_531> AgradDistributionsBetaBinomial_fv_531;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_532> AgradDistributionsBetaBinomial_fv_532;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_533> AgradDistributionsBetaBinomial_fv_533;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_534> AgradDistributionsBetaBinomial_fv_534;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_535> AgradDistributionsBetaBinomial_fv_535;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_536> AgradDistributionsBetaBinomial_fv_536;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_537> AgradDistributionsBetaBinomial_fv_537;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_538> AgradDistributionsBetaBinomial_fv_538;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_539> AgradDistributionsBetaBinomial_fv_539;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_540> AgradDistributionsBetaBinomial_fv_540;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_541> AgradDistributionsBetaBinomial_fv_541;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_542> AgradDistributionsBetaBinomial_fv_542;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_543> AgradDistributionsBetaBinomial_fv_543;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_544> AgradDistributionsBetaBinomial_fv_544;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_545> AgradDistributionsBetaBinomial_fv_545;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_546> AgradDistributionsBetaBinomial_fv_546;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_547> AgradDistributionsBetaBinomial_fv_547;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_548> AgradDistributionsBetaBinomial_fv_548;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_549> AgradDistributionsBetaBinomial_fv_549;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_550> AgradDistributionsBetaBinomial_fv_550;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_551> AgradDistributionsBetaBinomial_fv_551;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_552> AgradDistributionsBetaBinomial_fv_552;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_553> AgradDistributionsBetaBinomial_fv_553;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_554> AgradDistributionsBetaBinomial_fv_554;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_555> AgradDistributionsBetaBinomial_fv_555;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_556> AgradDistributionsBetaBinomial_fv_556;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_557> AgradDistributionsBetaBinomial_fv_557;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_558> AgradDistributionsBetaBinomial_fv_558;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_559> AgradDistributionsBetaBinomial_fv_559;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_560> AgradDistributionsBetaBinomial_fv_560;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_561> AgradDistributionsBetaBinomial_fv_561;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_562> AgradDistributionsBetaBinomial_fv_562;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_563> AgradDistributionsBetaBinomial_fv_563;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_564> AgradDistributionsBetaBinomial_fv_564;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_565> AgradDistributionsBetaBinomial_fv_565;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_566> AgradDistributionsBetaBinomial_fv_566;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_567> AgradDistributionsBetaBinomial_fv_567;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_568> AgradDistributionsBetaBinomial_fv_568;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_569> AgradDistributionsBetaBinomial_fv_569;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_570> AgradDistributionsBetaBinomial_fv_570;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_571> AgradDistributionsBetaBinomial_fv_571;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_572> AgradDistributionsBetaBinomial_fv_572;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_573> AgradDistributionsBetaBinomial_fv_573;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_574> AgradDistributionsBetaBinomial_fv_574;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_575> AgradDistributionsBetaBinomial_fv_575;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_576> AgradDistributionsBetaBinomial_fv_576;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_577> AgradDistributionsBetaBinomial_fv_577;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_578> AgradDistributionsBetaBinomial_fv_578;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_579> AgradDistributionsBetaBinomial_fv_579;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_580> AgradDistributionsBetaBinomial_fv_580;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_581> AgradDistributionsBetaBinomial_fv_581;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_582> AgradDistributionsBetaBinomial_fv_582;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_583> AgradDistributionsBetaBinomial_fv_583;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_584> AgradDistributionsBetaBinomial_fv_584;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_585> AgradDistributionsBetaBinomial_fv_585;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_586> AgradDistributionsBetaBinomial_fv_586;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_587> AgradDistributionsBetaBinomial_fv_587;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_588> AgradDistributionsBetaBinomial_fv_588;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_589> AgradDistributionsBetaBinomial_fv_589;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_590> AgradDistributionsBetaBinomial_fv_590;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_591> AgradDistributionsBetaBinomial_fv_591;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_592> AgradDistributionsBetaBinomial_fv_592;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_593> AgradDistributionsBetaBinomial_fv_593;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_594> AgradDistributionsBetaBinomial_fv_594;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_595> AgradDistributionsBetaBinomial_fv_595;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_596> AgradDistributionsBetaBinomial_fv_596;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_597> AgradDistributionsBetaBinomial_fv_597;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_598> AgradDistributionsBetaBinomial_fv_598;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_599> AgradDistributionsBetaBinomial_fv_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_400, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_401, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_402, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_403, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_404, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_405, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_406, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_407, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_408, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_409, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_410, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_411, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_412, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_413, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_414, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_415, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_416, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_417, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_418, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_419, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_420, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_421, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_422, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_423, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_424, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_425, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_426, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_427, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_428, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_429, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_430, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_431, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_432, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_433, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_434, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_435, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_436, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_437, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_438, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_439, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_440, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_441, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_442, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_443, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_444, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_445, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_446, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_447, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_448, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_449, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_450, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_451, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_452, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_453, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_454, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_455, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_456, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_457, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_458, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_459, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_460, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_461, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_462, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_463, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_464, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_465, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_466, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_467, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_468, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_469, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_470, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_471, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_472, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_473, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_474, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_475, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_476, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_477, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_478, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_479, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_480, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_481, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_482, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_483, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_484, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_485, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_486, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_487, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_488, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_489, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_490, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_491, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_492, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_493, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_494, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_495, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_496, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_497, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_498, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_499, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_500, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_501, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_502, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_503, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_504, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_505, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_506, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_507, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_508, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_509, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_510, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_511, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_512, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_513, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_514, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_515, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_516, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_517, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_518, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_519, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_520, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_521, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_522, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_523, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_524, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_525, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_526, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_527, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_528, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_529, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_530, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_531, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_532, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_533, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_534, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_535, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_536, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_537, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_538, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_539, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_540, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_541, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_542, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_543, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_544, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_545, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_546, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_547, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_548, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_549, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_550, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_551, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_552, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_553, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_554, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_555, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_556, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_557, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_558, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_559, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_560, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_561, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_562, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_563, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_564, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_565, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_566, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_567, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_568, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_569, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_570, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_571, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_572, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_573, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_574, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_575, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_576, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_577, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_578, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_579, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_580, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_581, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_582, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_583, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_584, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_585, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_586, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_587, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_588, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_589, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_590, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_591, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_592, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_593, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_594, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_595, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_596, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_597, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_598, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_599, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_599);

