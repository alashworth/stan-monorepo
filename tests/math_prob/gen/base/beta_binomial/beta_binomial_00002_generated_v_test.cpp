#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_400;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_401;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_402;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_403;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_404;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_405;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_406;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_407;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_408;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_409;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_410;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_411;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_412;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_413;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_414;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_415;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_416;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_417;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_418;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_419;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_420;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_421;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_422;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_423;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_424;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_425;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_426;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_427;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_428;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_429;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_430;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_431;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_432;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_433;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_434;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_435;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_436;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_437;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_438;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_439;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_440;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_441;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_442;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_443;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_444;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_445;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_446;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_447;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_448;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_449;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_450;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_451;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_452;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_453;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_454;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_455;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_456;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_457;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_458;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_459;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_460;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_461;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_462;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_463;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_464;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_465;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_466;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_467;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_468;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_469;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_470;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_471;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_472;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_473;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_474;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_475;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_476;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_477;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_478;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_479;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_480;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_481;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_482;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_483;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_484;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_485;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_486;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_487;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_488;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_489;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_490;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_491;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_492;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_493;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_494;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_495;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_496;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_497;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_498;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_499;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_500;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_501;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_502;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_503;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_504;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_505;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_506;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_507;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_508;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_509;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_510;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, double, empty, empty> type_v_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<double>, empty, empty> type_v_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, var, empty, empty> type_v_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<var>, empty, empty> type_v_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, double, empty, empty> type_v_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, var, empty, empty> type_v_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, double, empty, empty> type_v_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<double>, empty, empty> type_v_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, var, empty, empty> type_v_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<var>, empty, empty> type_v_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, double, empty, empty> type_v_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, var, empty, empty> type_v_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_575;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, double, empty, empty> type_v_576;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_577;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_578;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_579;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, var, empty, empty> type_v_580;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_581;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_582;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_583;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_584;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_585;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_586;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_587;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_588;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_589;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_590;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_591;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_592;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_593;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_594;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_595;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_596;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_597;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_598;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_599;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_400> AgradDistributionsBetaBinomial_v_400;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_401> AgradDistributionsBetaBinomial_v_401;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_402> AgradDistributionsBetaBinomial_v_402;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_403> AgradDistributionsBetaBinomial_v_403;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_404> AgradDistributionsBetaBinomial_v_404;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_405> AgradDistributionsBetaBinomial_v_405;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_406> AgradDistributionsBetaBinomial_v_406;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_407> AgradDistributionsBetaBinomial_v_407;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_408> AgradDistributionsBetaBinomial_v_408;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_409> AgradDistributionsBetaBinomial_v_409;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_410> AgradDistributionsBetaBinomial_v_410;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_411> AgradDistributionsBetaBinomial_v_411;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_412> AgradDistributionsBetaBinomial_v_412;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_413> AgradDistributionsBetaBinomial_v_413;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_414> AgradDistributionsBetaBinomial_v_414;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_415> AgradDistributionsBetaBinomial_v_415;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_416> AgradDistributionsBetaBinomial_v_416;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_417> AgradDistributionsBetaBinomial_v_417;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_418> AgradDistributionsBetaBinomial_v_418;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_419> AgradDistributionsBetaBinomial_v_419;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_420> AgradDistributionsBetaBinomial_v_420;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_421> AgradDistributionsBetaBinomial_v_421;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_422> AgradDistributionsBetaBinomial_v_422;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_423> AgradDistributionsBetaBinomial_v_423;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_424> AgradDistributionsBetaBinomial_v_424;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_425> AgradDistributionsBetaBinomial_v_425;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_426> AgradDistributionsBetaBinomial_v_426;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_427> AgradDistributionsBetaBinomial_v_427;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_428> AgradDistributionsBetaBinomial_v_428;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_429> AgradDistributionsBetaBinomial_v_429;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_430> AgradDistributionsBetaBinomial_v_430;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_431> AgradDistributionsBetaBinomial_v_431;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_432> AgradDistributionsBetaBinomial_v_432;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_433> AgradDistributionsBetaBinomial_v_433;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_434> AgradDistributionsBetaBinomial_v_434;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_435> AgradDistributionsBetaBinomial_v_435;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_436> AgradDistributionsBetaBinomial_v_436;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_437> AgradDistributionsBetaBinomial_v_437;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_438> AgradDistributionsBetaBinomial_v_438;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_439> AgradDistributionsBetaBinomial_v_439;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_440> AgradDistributionsBetaBinomial_v_440;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_441> AgradDistributionsBetaBinomial_v_441;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_442> AgradDistributionsBetaBinomial_v_442;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_443> AgradDistributionsBetaBinomial_v_443;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_444> AgradDistributionsBetaBinomial_v_444;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_445> AgradDistributionsBetaBinomial_v_445;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_446> AgradDistributionsBetaBinomial_v_446;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_447> AgradDistributionsBetaBinomial_v_447;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_448> AgradDistributionsBetaBinomial_v_448;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_449> AgradDistributionsBetaBinomial_v_449;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_450> AgradDistributionsBetaBinomial_v_450;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_451> AgradDistributionsBetaBinomial_v_451;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_452> AgradDistributionsBetaBinomial_v_452;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_453> AgradDistributionsBetaBinomial_v_453;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_454> AgradDistributionsBetaBinomial_v_454;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_455> AgradDistributionsBetaBinomial_v_455;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_456> AgradDistributionsBetaBinomial_v_456;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_457> AgradDistributionsBetaBinomial_v_457;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_458> AgradDistributionsBetaBinomial_v_458;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_459> AgradDistributionsBetaBinomial_v_459;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_460> AgradDistributionsBetaBinomial_v_460;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_461> AgradDistributionsBetaBinomial_v_461;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_462> AgradDistributionsBetaBinomial_v_462;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_463> AgradDistributionsBetaBinomial_v_463;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_464> AgradDistributionsBetaBinomial_v_464;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_465> AgradDistributionsBetaBinomial_v_465;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_466> AgradDistributionsBetaBinomial_v_466;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_467> AgradDistributionsBetaBinomial_v_467;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_468> AgradDistributionsBetaBinomial_v_468;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_469> AgradDistributionsBetaBinomial_v_469;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_470> AgradDistributionsBetaBinomial_v_470;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_471> AgradDistributionsBetaBinomial_v_471;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_472> AgradDistributionsBetaBinomial_v_472;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_473> AgradDistributionsBetaBinomial_v_473;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_474> AgradDistributionsBetaBinomial_v_474;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_475> AgradDistributionsBetaBinomial_v_475;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_476> AgradDistributionsBetaBinomial_v_476;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_477> AgradDistributionsBetaBinomial_v_477;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_478> AgradDistributionsBetaBinomial_v_478;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_479> AgradDistributionsBetaBinomial_v_479;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_480> AgradDistributionsBetaBinomial_v_480;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_481> AgradDistributionsBetaBinomial_v_481;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_482> AgradDistributionsBetaBinomial_v_482;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_483> AgradDistributionsBetaBinomial_v_483;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_484> AgradDistributionsBetaBinomial_v_484;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_485> AgradDistributionsBetaBinomial_v_485;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_486> AgradDistributionsBetaBinomial_v_486;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_487> AgradDistributionsBetaBinomial_v_487;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_488> AgradDistributionsBetaBinomial_v_488;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_489> AgradDistributionsBetaBinomial_v_489;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_490> AgradDistributionsBetaBinomial_v_490;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_491> AgradDistributionsBetaBinomial_v_491;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_492> AgradDistributionsBetaBinomial_v_492;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_493> AgradDistributionsBetaBinomial_v_493;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_494> AgradDistributionsBetaBinomial_v_494;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_495> AgradDistributionsBetaBinomial_v_495;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_496> AgradDistributionsBetaBinomial_v_496;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_497> AgradDistributionsBetaBinomial_v_497;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_498> AgradDistributionsBetaBinomial_v_498;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_499> AgradDistributionsBetaBinomial_v_499;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_500> AgradDistributionsBetaBinomial_v_500;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_501> AgradDistributionsBetaBinomial_v_501;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_502> AgradDistributionsBetaBinomial_v_502;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_503> AgradDistributionsBetaBinomial_v_503;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_504> AgradDistributionsBetaBinomial_v_504;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_505> AgradDistributionsBetaBinomial_v_505;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_506> AgradDistributionsBetaBinomial_v_506;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_507> AgradDistributionsBetaBinomial_v_507;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_508> AgradDistributionsBetaBinomial_v_508;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_509> AgradDistributionsBetaBinomial_v_509;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_510> AgradDistributionsBetaBinomial_v_510;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_511> AgradDistributionsBetaBinomial_v_511;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_512> AgradDistributionsBetaBinomial_v_512;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_513> AgradDistributionsBetaBinomial_v_513;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_514> AgradDistributionsBetaBinomial_v_514;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_515> AgradDistributionsBetaBinomial_v_515;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_516> AgradDistributionsBetaBinomial_v_516;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_517> AgradDistributionsBetaBinomial_v_517;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_518> AgradDistributionsBetaBinomial_v_518;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_519> AgradDistributionsBetaBinomial_v_519;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_520> AgradDistributionsBetaBinomial_v_520;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_521> AgradDistributionsBetaBinomial_v_521;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_522> AgradDistributionsBetaBinomial_v_522;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_523> AgradDistributionsBetaBinomial_v_523;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_524> AgradDistributionsBetaBinomial_v_524;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_525> AgradDistributionsBetaBinomial_v_525;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_526> AgradDistributionsBetaBinomial_v_526;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_527> AgradDistributionsBetaBinomial_v_527;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_528> AgradDistributionsBetaBinomial_v_528;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_529> AgradDistributionsBetaBinomial_v_529;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_530> AgradDistributionsBetaBinomial_v_530;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_531> AgradDistributionsBetaBinomial_v_531;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_532> AgradDistributionsBetaBinomial_v_532;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_533> AgradDistributionsBetaBinomial_v_533;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_534> AgradDistributionsBetaBinomial_v_534;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_535> AgradDistributionsBetaBinomial_v_535;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_536> AgradDistributionsBetaBinomial_v_536;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_537> AgradDistributionsBetaBinomial_v_537;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_538> AgradDistributionsBetaBinomial_v_538;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_539> AgradDistributionsBetaBinomial_v_539;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_540> AgradDistributionsBetaBinomial_v_540;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_541> AgradDistributionsBetaBinomial_v_541;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_542> AgradDistributionsBetaBinomial_v_542;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_543> AgradDistributionsBetaBinomial_v_543;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_544> AgradDistributionsBetaBinomial_v_544;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_545> AgradDistributionsBetaBinomial_v_545;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_546> AgradDistributionsBetaBinomial_v_546;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_547> AgradDistributionsBetaBinomial_v_547;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_548> AgradDistributionsBetaBinomial_v_548;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_549> AgradDistributionsBetaBinomial_v_549;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_550> AgradDistributionsBetaBinomial_v_550;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_551> AgradDistributionsBetaBinomial_v_551;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_552> AgradDistributionsBetaBinomial_v_552;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_553> AgradDistributionsBetaBinomial_v_553;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_554> AgradDistributionsBetaBinomial_v_554;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_555> AgradDistributionsBetaBinomial_v_555;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_556> AgradDistributionsBetaBinomial_v_556;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_557> AgradDistributionsBetaBinomial_v_557;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_558> AgradDistributionsBetaBinomial_v_558;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_559> AgradDistributionsBetaBinomial_v_559;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_560> AgradDistributionsBetaBinomial_v_560;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_561> AgradDistributionsBetaBinomial_v_561;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_562> AgradDistributionsBetaBinomial_v_562;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_563> AgradDistributionsBetaBinomial_v_563;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_564> AgradDistributionsBetaBinomial_v_564;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_565> AgradDistributionsBetaBinomial_v_565;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_566> AgradDistributionsBetaBinomial_v_566;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_567> AgradDistributionsBetaBinomial_v_567;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_568> AgradDistributionsBetaBinomial_v_568;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_569> AgradDistributionsBetaBinomial_v_569;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_570> AgradDistributionsBetaBinomial_v_570;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_571> AgradDistributionsBetaBinomial_v_571;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_572> AgradDistributionsBetaBinomial_v_572;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_573> AgradDistributionsBetaBinomial_v_573;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_574> AgradDistributionsBetaBinomial_v_574;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_575> AgradDistributionsBetaBinomial_v_575;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_576> AgradDistributionsBetaBinomial_v_576;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_577> AgradDistributionsBetaBinomial_v_577;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_578> AgradDistributionsBetaBinomial_v_578;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_579> AgradDistributionsBetaBinomial_v_579;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_580> AgradDistributionsBetaBinomial_v_580;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_581> AgradDistributionsBetaBinomial_v_581;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_582> AgradDistributionsBetaBinomial_v_582;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_583> AgradDistributionsBetaBinomial_v_583;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_584> AgradDistributionsBetaBinomial_v_584;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_585> AgradDistributionsBetaBinomial_v_585;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_586> AgradDistributionsBetaBinomial_v_586;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_587> AgradDistributionsBetaBinomial_v_587;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_588> AgradDistributionsBetaBinomial_v_588;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_589> AgradDistributionsBetaBinomial_v_589;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_590> AgradDistributionsBetaBinomial_v_590;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_591> AgradDistributionsBetaBinomial_v_591;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_592> AgradDistributionsBetaBinomial_v_592;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_593> AgradDistributionsBetaBinomial_v_593;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_594> AgradDistributionsBetaBinomial_v_594;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_595> AgradDistributionsBetaBinomial_v_595;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_596> AgradDistributionsBetaBinomial_v_596;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_597> AgradDistributionsBetaBinomial_v_597;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_598> AgradDistributionsBetaBinomial_v_598;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_599> AgradDistributionsBetaBinomial_v_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_400, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_401, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_402, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_403, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_404, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_405, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_406, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_407, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_408, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_409, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_410, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_411, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_412, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_413, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_414, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_415, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_416, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_417, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_418, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_419, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_420, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_421, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_422, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_423, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_424, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_425, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_426, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_427, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_428, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_429, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_430, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_431, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_432, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_433, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_434, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_435, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_436, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_437, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_438, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_439, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_440, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_441, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_442, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_443, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_444, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_445, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_446, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_447, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_448, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_449, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_450, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_451, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_452, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_453, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_454, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_455, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_456, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_457, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_458, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_459, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_460, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_461, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_462, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_463, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_464, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_465, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_466, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_467, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_468, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_469, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_470, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_471, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_472, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_473, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_474, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_475, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_476, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_477, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_478, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_479, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_480, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_481, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_482, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_483, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_484, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_485, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_486, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_487, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_488, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_489, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_490, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_491, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_492, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_493, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_494, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_495, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_496, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_497, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_498, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_499, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_500, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_501, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_502, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_503, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_504, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_505, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_506, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_507, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_508, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_509, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_510, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_511, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_512, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_513, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_514, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_515, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_516, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_517, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_518, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_519, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_520, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_521, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_522, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_523, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_524, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_525, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_526, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_527, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_528, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_529, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_530, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_531, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_532, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_533, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_534, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_535, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_536, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_537, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_538, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_539, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_540, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_541, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_542, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_543, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_544, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_545, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_546, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_547, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_548, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_549, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_550, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_551, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_552, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_553, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_554, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_555, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_556, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_557, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_558, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_559, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_560, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_561, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_562, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_563, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_564, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_565, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_566, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_567, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_568, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_569, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_570, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_571, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_572, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_573, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_574, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_575, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_576, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_577, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_578, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_579, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_580, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_581, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_582, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_583, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_584, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_585, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_586, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_587, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_588, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_589, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_590, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_591, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_592, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_593, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_594, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_595, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_596, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_597, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_598, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_599, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_599);

