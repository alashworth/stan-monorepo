#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, double, empty, empty> type_fd_400;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, std::vector<double>, empty, empty> type_fd_401;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_402;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_403;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, fvar<double>, empty, empty> type_fd_404;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_405;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_406;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_407;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, double, empty, empty> type_fd_408;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_409;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_410;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_411;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_412;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_413;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_414;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_415;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_416;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_417;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_418;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_419;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_420;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_421;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_422;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_423;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_424;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_425;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_426;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_427;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_428;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_429;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_430;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_431;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, fvar<double>, empty, empty> type_fd_432;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<fvar<double>>, empty, empty> type_fd_433;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_434;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_435;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, fvar<double>, empty, empty> type_fd_436;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_437;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_438;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_439;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_440;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_441;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_442;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_443;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_444;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_445;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_446;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_447;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, double, empty, empty> type_fd_448;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, std::vector<double>, empty, empty> type_fd_449;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_450;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_451;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, fvar<double>, empty, empty> type_fd_452;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_453;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_454;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_455;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, double, empty, empty> type_fd_456;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_457;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_458;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_459;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_460;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_461;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_462;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_463;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_464;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_465;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_466;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_467;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_468;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_469;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_470;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_471;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_472;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_473;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_474;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_475;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_476;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_477;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_478;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_479;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty> type_fd_480;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty> type_fd_481;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_482;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_483;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty> type_fd_484;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_485;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_486;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_487;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_488;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_489;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_490;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_491;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_492;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_493;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_494;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_495;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty> type_fd_496;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty> type_fd_497;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_498;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_499;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty> type_fd_500;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_501;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_502;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_503;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty> type_fd_504;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_505;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_506;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_507;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_508;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_509;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_510;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty> type_fd_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty> type_fd_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty> type_fd_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty> type_fd_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty> type_fd_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty> type_fd_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty> type_fd_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_575;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, fvar<double>, empty, empty> type_fd_576;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<fvar<double>>, empty, empty> type_fd_577;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_578;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_579;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, fvar<double>, empty, empty> type_fd_580;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_581;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_582;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_583;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_584;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_585;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_586;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_587;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_588;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_589;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_590;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_591;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, double, empty, empty> type_fd_592;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, std::vector<double>, empty, empty> type_fd_593;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_594;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_595;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, fvar<double>, empty, empty> type_fd_596;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_597;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_598;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_599;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_400> AgradCdfBetaBinomial_fd_400;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_401> AgradCdfBetaBinomial_fd_401;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_402> AgradCdfBetaBinomial_fd_402;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_403> AgradCdfBetaBinomial_fd_403;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_404> AgradCdfBetaBinomial_fd_404;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_405> AgradCdfBetaBinomial_fd_405;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_406> AgradCdfBetaBinomial_fd_406;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_407> AgradCdfBetaBinomial_fd_407;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_408> AgradCdfBetaBinomial_fd_408;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_409> AgradCdfBetaBinomial_fd_409;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_410> AgradCdfBetaBinomial_fd_410;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_411> AgradCdfBetaBinomial_fd_411;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_412> AgradCdfBetaBinomial_fd_412;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_413> AgradCdfBetaBinomial_fd_413;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_414> AgradCdfBetaBinomial_fd_414;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_415> AgradCdfBetaBinomial_fd_415;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_416> AgradCdfBetaBinomial_fd_416;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_417> AgradCdfBetaBinomial_fd_417;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_418> AgradCdfBetaBinomial_fd_418;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_419> AgradCdfBetaBinomial_fd_419;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_420> AgradCdfBetaBinomial_fd_420;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_421> AgradCdfBetaBinomial_fd_421;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_422> AgradCdfBetaBinomial_fd_422;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_423> AgradCdfBetaBinomial_fd_423;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_424> AgradCdfBetaBinomial_fd_424;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_425> AgradCdfBetaBinomial_fd_425;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_426> AgradCdfBetaBinomial_fd_426;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_427> AgradCdfBetaBinomial_fd_427;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_428> AgradCdfBetaBinomial_fd_428;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_429> AgradCdfBetaBinomial_fd_429;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_430> AgradCdfBetaBinomial_fd_430;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_431> AgradCdfBetaBinomial_fd_431;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_432> AgradCdfBetaBinomial_fd_432;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_433> AgradCdfBetaBinomial_fd_433;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_434> AgradCdfBetaBinomial_fd_434;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_435> AgradCdfBetaBinomial_fd_435;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_436> AgradCdfBetaBinomial_fd_436;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_437> AgradCdfBetaBinomial_fd_437;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_438> AgradCdfBetaBinomial_fd_438;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_439> AgradCdfBetaBinomial_fd_439;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_440> AgradCdfBetaBinomial_fd_440;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_441> AgradCdfBetaBinomial_fd_441;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_442> AgradCdfBetaBinomial_fd_442;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_443> AgradCdfBetaBinomial_fd_443;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_444> AgradCdfBetaBinomial_fd_444;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_445> AgradCdfBetaBinomial_fd_445;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_446> AgradCdfBetaBinomial_fd_446;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_447> AgradCdfBetaBinomial_fd_447;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_448> AgradCdfBetaBinomial_fd_448;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_449> AgradCdfBetaBinomial_fd_449;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_450> AgradCdfBetaBinomial_fd_450;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_451> AgradCdfBetaBinomial_fd_451;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_452> AgradCdfBetaBinomial_fd_452;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_453> AgradCdfBetaBinomial_fd_453;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_454> AgradCdfBetaBinomial_fd_454;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_455> AgradCdfBetaBinomial_fd_455;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_456> AgradCdfBetaBinomial_fd_456;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_457> AgradCdfBetaBinomial_fd_457;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_458> AgradCdfBetaBinomial_fd_458;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_459> AgradCdfBetaBinomial_fd_459;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_460> AgradCdfBetaBinomial_fd_460;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_461> AgradCdfBetaBinomial_fd_461;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_462> AgradCdfBetaBinomial_fd_462;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_463> AgradCdfBetaBinomial_fd_463;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_464> AgradCdfBetaBinomial_fd_464;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_465> AgradCdfBetaBinomial_fd_465;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_466> AgradCdfBetaBinomial_fd_466;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_467> AgradCdfBetaBinomial_fd_467;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_468> AgradCdfBetaBinomial_fd_468;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_469> AgradCdfBetaBinomial_fd_469;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_470> AgradCdfBetaBinomial_fd_470;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_471> AgradCdfBetaBinomial_fd_471;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_472> AgradCdfBetaBinomial_fd_472;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_473> AgradCdfBetaBinomial_fd_473;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_474> AgradCdfBetaBinomial_fd_474;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_475> AgradCdfBetaBinomial_fd_475;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_476> AgradCdfBetaBinomial_fd_476;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_477> AgradCdfBetaBinomial_fd_477;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_478> AgradCdfBetaBinomial_fd_478;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_479> AgradCdfBetaBinomial_fd_479;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_480> AgradCdfBetaBinomial_fd_480;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_481> AgradCdfBetaBinomial_fd_481;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_482> AgradCdfBetaBinomial_fd_482;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_483> AgradCdfBetaBinomial_fd_483;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_484> AgradCdfBetaBinomial_fd_484;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_485> AgradCdfBetaBinomial_fd_485;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_486> AgradCdfBetaBinomial_fd_486;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_487> AgradCdfBetaBinomial_fd_487;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_488> AgradCdfBetaBinomial_fd_488;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_489> AgradCdfBetaBinomial_fd_489;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_490> AgradCdfBetaBinomial_fd_490;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_491> AgradCdfBetaBinomial_fd_491;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_492> AgradCdfBetaBinomial_fd_492;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_493> AgradCdfBetaBinomial_fd_493;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_494> AgradCdfBetaBinomial_fd_494;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_495> AgradCdfBetaBinomial_fd_495;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_496> AgradCdfBetaBinomial_fd_496;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_497> AgradCdfBetaBinomial_fd_497;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_498> AgradCdfBetaBinomial_fd_498;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_499> AgradCdfBetaBinomial_fd_499;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_500> AgradCdfBetaBinomial_fd_500;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_501> AgradCdfBetaBinomial_fd_501;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_502> AgradCdfBetaBinomial_fd_502;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_503> AgradCdfBetaBinomial_fd_503;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_504> AgradCdfBetaBinomial_fd_504;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_505> AgradCdfBetaBinomial_fd_505;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_506> AgradCdfBetaBinomial_fd_506;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_507> AgradCdfBetaBinomial_fd_507;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_508> AgradCdfBetaBinomial_fd_508;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_509> AgradCdfBetaBinomial_fd_509;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_510> AgradCdfBetaBinomial_fd_510;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_511> AgradCdfBetaBinomial_fd_511;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_512> AgradCdfBetaBinomial_fd_512;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_513> AgradCdfBetaBinomial_fd_513;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_514> AgradCdfBetaBinomial_fd_514;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_515> AgradCdfBetaBinomial_fd_515;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_516> AgradCdfBetaBinomial_fd_516;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_517> AgradCdfBetaBinomial_fd_517;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_518> AgradCdfBetaBinomial_fd_518;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_519> AgradCdfBetaBinomial_fd_519;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_520> AgradCdfBetaBinomial_fd_520;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_521> AgradCdfBetaBinomial_fd_521;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_522> AgradCdfBetaBinomial_fd_522;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_523> AgradCdfBetaBinomial_fd_523;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_524> AgradCdfBetaBinomial_fd_524;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_525> AgradCdfBetaBinomial_fd_525;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_526> AgradCdfBetaBinomial_fd_526;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_527> AgradCdfBetaBinomial_fd_527;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_528> AgradCdfBetaBinomial_fd_528;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_529> AgradCdfBetaBinomial_fd_529;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_530> AgradCdfBetaBinomial_fd_530;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_531> AgradCdfBetaBinomial_fd_531;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_532> AgradCdfBetaBinomial_fd_532;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_533> AgradCdfBetaBinomial_fd_533;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_534> AgradCdfBetaBinomial_fd_534;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_535> AgradCdfBetaBinomial_fd_535;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_536> AgradCdfBetaBinomial_fd_536;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_537> AgradCdfBetaBinomial_fd_537;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_538> AgradCdfBetaBinomial_fd_538;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_539> AgradCdfBetaBinomial_fd_539;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_540> AgradCdfBetaBinomial_fd_540;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_541> AgradCdfBetaBinomial_fd_541;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_542> AgradCdfBetaBinomial_fd_542;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_543> AgradCdfBetaBinomial_fd_543;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_544> AgradCdfBetaBinomial_fd_544;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_545> AgradCdfBetaBinomial_fd_545;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_546> AgradCdfBetaBinomial_fd_546;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_547> AgradCdfBetaBinomial_fd_547;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_548> AgradCdfBetaBinomial_fd_548;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_549> AgradCdfBetaBinomial_fd_549;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_550> AgradCdfBetaBinomial_fd_550;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_551> AgradCdfBetaBinomial_fd_551;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_552> AgradCdfBetaBinomial_fd_552;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_553> AgradCdfBetaBinomial_fd_553;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_554> AgradCdfBetaBinomial_fd_554;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_555> AgradCdfBetaBinomial_fd_555;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_556> AgradCdfBetaBinomial_fd_556;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_557> AgradCdfBetaBinomial_fd_557;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_558> AgradCdfBetaBinomial_fd_558;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_559> AgradCdfBetaBinomial_fd_559;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_560> AgradCdfBetaBinomial_fd_560;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_561> AgradCdfBetaBinomial_fd_561;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_562> AgradCdfBetaBinomial_fd_562;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_563> AgradCdfBetaBinomial_fd_563;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_564> AgradCdfBetaBinomial_fd_564;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_565> AgradCdfBetaBinomial_fd_565;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_566> AgradCdfBetaBinomial_fd_566;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_567> AgradCdfBetaBinomial_fd_567;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_568> AgradCdfBetaBinomial_fd_568;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_569> AgradCdfBetaBinomial_fd_569;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_570> AgradCdfBetaBinomial_fd_570;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_571> AgradCdfBetaBinomial_fd_571;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_572> AgradCdfBetaBinomial_fd_572;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_573> AgradCdfBetaBinomial_fd_573;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_574> AgradCdfBetaBinomial_fd_574;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_575> AgradCdfBetaBinomial_fd_575;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_576> AgradCdfBetaBinomial_fd_576;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_577> AgradCdfBetaBinomial_fd_577;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_578> AgradCdfBetaBinomial_fd_578;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_579> AgradCdfBetaBinomial_fd_579;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_580> AgradCdfBetaBinomial_fd_580;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_581> AgradCdfBetaBinomial_fd_581;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_582> AgradCdfBetaBinomial_fd_582;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_583> AgradCdfBetaBinomial_fd_583;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_584> AgradCdfBetaBinomial_fd_584;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_585> AgradCdfBetaBinomial_fd_585;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_586> AgradCdfBetaBinomial_fd_586;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_587> AgradCdfBetaBinomial_fd_587;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_588> AgradCdfBetaBinomial_fd_588;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_589> AgradCdfBetaBinomial_fd_589;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_590> AgradCdfBetaBinomial_fd_590;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_591> AgradCdfBetaBinomial_fd_591;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_592> AgradCdfBetaBinomial_fd_592;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_593> AgradCdfBetaBinomial_fd_593;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_594> AgradCdfBetaBinomial_fd_594;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_595> AgradCdfBetaBinomial_fd_595;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_596> AgradCdfBetaBinomial_fd_596;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_597> AgradCdfBetaBinomial_fd_597;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_598> AgradCdfBetaBinomial_fd_598;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_fd_599> AgradCdfBetaBinomial_fd_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_400, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_401, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_402, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_403, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_404, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_405, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_406, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_407, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_408, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_409, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_410, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_411, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_412, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_413, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_414, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_415, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_416, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_417, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_418, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_419, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_420, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_421, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_422, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_423, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_424, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_425, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_426, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_427, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_428, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_429, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_430, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_431, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_432, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_433, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_434, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_435, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_436, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_437, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_438, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_439, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_440, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_441, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_442, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_443, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_444, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_445, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_446, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_447, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_448, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_449, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_450, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_451, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_452, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_453, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_454, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_455, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_456, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_457, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_458, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_459, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_460, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_461, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_462, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_463, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_464, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_465, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_466, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_467, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_468, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_469, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_470, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_471, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_472, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_473, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_474, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_475, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_476, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_477, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_478, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_479, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_480, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_481, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_482, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_483, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_484, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_485, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_486, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_487, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_488, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_489, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_490, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_491, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_492, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_493, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_494, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_495, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_496, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_497, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_498, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_499, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_500, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_501, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_502, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_503, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_504, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_505, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_506, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_507, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_508, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_509, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_510, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_511, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_512, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_513, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_514, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_515, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_516, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_517, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_518, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_519, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_520, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_521, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_522, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_523, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_524, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_525, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_526, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_527, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_528, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_529, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_530, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_531, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_532, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_533, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_534, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_535, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_536, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_537, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_538, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_539, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_540, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_541, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_542, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_543, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_544, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_545, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_546, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_547, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_548, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_549, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_550, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_551, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_552, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_553, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_554, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_555, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_556, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_557, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_558, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_559, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_560, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_561, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_562, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_563, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_564, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_565, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_566, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_567, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_568, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_569, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_570, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_571, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_572, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_573, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_574, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_575, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_576, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_577, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_578, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_579, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_580, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_581, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_582, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_583, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_584, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_585, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_586, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_587, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_588, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_589, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_590, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_591, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_592, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_593, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_594, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_595, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_596, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_597, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_598, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_fd_599, AgradCdfTestFixture, AgradCdfBetaBinomial_fd_599);

