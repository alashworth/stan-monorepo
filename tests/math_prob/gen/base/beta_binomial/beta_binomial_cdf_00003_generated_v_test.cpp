#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_600;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_601;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_602;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_603;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_604;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_605;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_606;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_607;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, double, empty, empty> type_v_608;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_609;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_610;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_611;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, var, empty, empty> type_v_612;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_613;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_614;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_615;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_616;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_617;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_618;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_619;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_620;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_621;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_622;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_623;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_624;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_625;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_626;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_627;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_628;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_629;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_630;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_631;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_632;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_633;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_634;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_635;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_636;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_637;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_638;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_639;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_640;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_641;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_642;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_643;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_644;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_645;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_646;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_647;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_648;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_649;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_650;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_651;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_652;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_653;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_654;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_655;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_656;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_657;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_658;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_659;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_660;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_661;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_662;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_663;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_664;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_665;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_666;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_667;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_668;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_669;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_670;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_671;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_672;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_673;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_674;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_675;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_676;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_677;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_678;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_679;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_680;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_681;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_682;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_683;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_684;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_685;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_686;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_687;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_688;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_689;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_690;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_691;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_692;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_693;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_694;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_695;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_696;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_697;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_698;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_699;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_700;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_701;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_702;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_703;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_704;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_705;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_706;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_707;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_708;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_709;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_710;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_711;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_712;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_713;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_714;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_715;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_716;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_717;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_718;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_719;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_720;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_721;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_722;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_723;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_724;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_725;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_726;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_727;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_728;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_729;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_730;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_731;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_732;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_733;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_734;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_735;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_736;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_737;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_738;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_739;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_740;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_741;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_742;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_743;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_744;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_745;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_746;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_747;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_748;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_749;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_750;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_751;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_752;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_753;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_754;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_755;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_756;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_757;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_758;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_759;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_760;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_761;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_762;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_763;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_764;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_765;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_766;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_767;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, double, empty, empty> type_v_768;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<double>, empty, empty> type_v_769;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_770;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_771;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, var, empty, empty> type_v_772;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<var>, empty, empty> type_v_773;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_774;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_775;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, double, empty, empty> type_v_776;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_777;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_778;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_779;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, var, empty, empty> type_v_780;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_781;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_782;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_783;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_784;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_785;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_786;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_787;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_788;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_789;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_790;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_791;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_792;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_793;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_794;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_795;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_796;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_797;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_798;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_799;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_600> AgradCdfBetaBinomial_v_600;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_601> AgradCdfBetaBinomial_v_601;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_602> AgradCdfBetaBinomial_v_602;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_603> AgradCdfBetaBinomial_v_603;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_604> AgradCdfBetaBinomial_v_604;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_605> AgradCdfBetaBinomial_v_605;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_606> AgradCdfBetaBinomial_v_606;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_607> AgradCdfBetaBinomial_v_607;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_608> AgradCdfBetaBinomial_v_608;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_609> AgradCdfBetaBinomial_v_609;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_610> AgradCdfBetaBinomial_v_610;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_611> AgradCdfBetaBinomial_v_611;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_612> AgradCdfBetaBinomial_v_612;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_613> AgradCdfBetaBinomial_v_613;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_614> AgradCdfBetaBinomial_v_614;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_615> AgradCdfBetaBinomial_v_615;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_616> AgradCdfBetaBinomial_v_616;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_617> AgradCdfBetaBinomial_v_617;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_618> AgradCdfBetaBinomial_v_618;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_619> AgradCdfBetaBinomial_v_619;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_620> AgradCdfBetaBinomial_v_620;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_621> AgradCdfBetaBinomial_v_621;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_622> AgradCdfBetaBinomial_v_622;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_623> AgradCdfBetaBinomial_v_623;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_624> AgradCdfBetaBinomial_v_624;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_625> AgradCdfBetaBinomial_v_625;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_626> AgradCdfBetaBinomial_v_626;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_627> AgradCdfBetaBinomial_v_627;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_628> AgradCdfBetaBinomial_v_628;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_629> AgradCdfBetaBinomial_v_629;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_630> AgradCdfBetaBinomial_v_630;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_631> AgradCdfBetaBinomial_v_631;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_632> AgradCdfBetaBinomial_v_632;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_633> AgradCdfBetaBinomial_v_633;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_634> AgradCdfBetaBinomial_v_634;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_635> AgradCdfBetaBinomial_v_635;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_636> AgradCdfBetaBinomial_v_636;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_637> AgradCdfBetaBinomial_v_637;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_638> AgradCdfBetaBinomial_v_638;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_639> AgradCdfBetaBinomial_v_639;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_640> AgradCdfBetaBinomial_v_640;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_641> AgradCdfBetaBinomial_v_641;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_642> AgradCdfBetaBinomial_v_642;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_643> AgradCdfBetaBinomial_v_643;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_644> AgradCdfBetaBinomial_v_644;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_645> AgradCdfBetaBinomial_v_645;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_646> AgradCdfBetaBinomial_v_646;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_647> AgradCdfBetaBinomial_v_647;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_648> AgradCdfBetaBinomial_v_648;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_649> AgradCdfBetaBinomial_v_649;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_650> AgradCdfBetaBinomial_v_650;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_651> AgradCdfBetaBinomial_v_651;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_652> AgradCdfBetaBinomial_v_652;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_653> AgradCdfBetaBinomial_v_653;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_654> AgradCdfBetaBinomial_v_654;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_655> AgradCdfBetaBinomial_v_655;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_656> AgradCdfBetaBinomial_v_656;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_657> AgradCdfBetaBinomial_v_657;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_658> AgradCdfBetaBinomial_v_658;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_659> AgradCdfBetaBinomial_v_659;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_660> AgradCdfBetaBinomial_v_660;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_661> AgradCdfBetaBinomial_v_661;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_662> AgradCdfBetaBinomial_v_662;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_663> AgradCdfBetaBinomial_v_663;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_664> AgradCdfBetaBinomial_v_664;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_665> AgradCdfBetaBinomial_v_665;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_666> AgradCdfBetaBinomial_v_666;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_667> AgradCdfBetaBinomial_v_667;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_668> AgradCdfBetaBinomial_v_668;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_669> AgradCdfBetaBinomial_v_669;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_670> AgradCdfBetaBinomial_v_670;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_671> AgradCdfBetaBinomial_v_671;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_672> AgradCdfBetaBinomial_v_672;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_673> AgradCdfBetaBinomial_v_673;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_674> AgradCdfBetaBinomial_v_674;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_675> AgradCdfBetaBinomial_v_675;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_676> AgradCdfBetaBinomial_v_676;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_677> AgradCdfBetaBinomial_v_677;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_678> AgradCdfBetaBinomial_v_678;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_679> AgradCdfBetaBinomial_v_679;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_680> AgradCdfBetaBinomial_v_680;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_681> AgradCdfBetaBinomial_v_681;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_682> AgradCdfBetaBinomial_v_682;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_683> AgradCdfBetaBinomial_v_683;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_684> AgradCdfBetaBinomial_v_684;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_685> AgradCdfBetaBinomial_v_685;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_686> AgradCdfBetaBinomial_v_686;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_687> AgradCdfBetaBinomial_v_687;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_688> AgradCdfBetaBinomial_v_688;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_689> AgradCdfBetaBinomial_v_689;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_690> AgradCdfBetaBinomial_v_690;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_691> AgradCdfBetaBinomial_v_691;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_692> AgradCdfBetaBinomial_v_692;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_693> AgradCdfBetaBinomial_v_693;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_694> AgradCdfBetaBinomial_v_694;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_695> AgradCdfBetaBinomial_v_695;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_696> AgradCdfBetaBinomial_v_696;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_697> AgradCdfBetaBinomial_v_697;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_698> AgradCdfBetaBinomial_v_698;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_699> AgradCdfBetaBinomial_v_699;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_700> AgradCdfBetaBinomial_v_700;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_701> AgradCdfBetaBinomial_v_701;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_702> AgradCdfBetaBinomial_v_702;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_703> AgradCdfBetaBinomial_v_703;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_704> AgradCdfBetaBinomial_v_704;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_705> AgradCdfBetaBinomial_v_705;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_706> AgradCdfBetaBinomial_v_706;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_707> AgradCdfBetaBinomial_v_707;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_708> AgradCdfBetaBinomial_v_708;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_709> AgradCdfBetaBinomial_v_709;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_710> AgradCdfBetaBinomial_v_710;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_711> AgradCdfBetaBinomial_v_711;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_712> AgradCdfBetaBinomial_v_712;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_713> AgradCdfBetaBinomial_v_713;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_714> AgradCdfBetaBinomial_v_714;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_715> AgradCdfBetaBinomial_v_715;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_716> AgradCdfBetaBinomial_v_716;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_717> AgradCdfBetaBinomial_v_717;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_718> AgradCdfBetaBinomial_v_718;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_719> AgradCdfBetaBinomial_v_719;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_720> AgradCdfBetaBinomial_v_720;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_721> AgradCdfBetaBinomial_v_721;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_722> AgradCdfBetaBinomial_v_722;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_723> AgradCdfBetaBinomial_v_723;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_724> AgradCdfBetaBinomial_v_724;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_725> AgradCdfBetaBinomial_v_725;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_726> AgradCdfBetaBinomial_v_726;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_727> AgradCdfBetaBinomial_v_727;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_728> AgradCdfBetaBinomial_v_728;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_729> AgradCdfBetaBinomial_v_729;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_730> AgradCdfBetaBinomial_v_730;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_731> AgradCdfBetaBinomial_v_731;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_732> AgradCdfBetaBinomial_v_732;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_733> AgradCdfBetaBinomial_v_733;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_734> AgradCdfBetaBinomial_v_734;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_735> AgradCdfBetaBinomial_v_735;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_736> AgradCdfBetaBinomial_v_736;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_737> AgradCdfBetaBinomial_v_737;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_738> AgradCdfBetaBinomial_v_738;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_739> AgradCdfBetaBinomial_v_739;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_740> AgradCdfBetaBinomial_v_740;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_741> AgradCdfBetaBinomial_v_741;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_742> AgradCdfBetaBinomial_v_742;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_743> AgradCdfBetaBinomial_v_743;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_744> AgradCdfBetaBinomial_v_744;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_745> AgradCdfBetaBinomial_v_745;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_746> AgradCdfBetaBinomial_v_746;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_747> AgradCdfBetaBinomial_v_747;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_748> AgradCdfBetaBinomial_v_748;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_749> AgradCdfBetaBinomial_v_749;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_750> AgradCdfBetaBinomial_v_750;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_751> AgradCdfBetaBinomial_v_751;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_752> AgradCdfBetaBinomial_v_752;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_753> AgradCdfBetaBinomial_v_753;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_754> AgradCdfBetaBinomial_v_754;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_755> AgradCdfBetaBinomial_v_755;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_756> AgradCdfBetaBinomial_v_756;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_757> AgradCdfBetaBinomial_v_757;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_758> AgradCdfBetaBinomial_v_758;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_759> AgradCdfBetaBinomial_v_759;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_760> AgradCdfBetaBinomial_v_760;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_761> AgradCdfBetaBinomial_v_761;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_762> AgradCdfBetaBinomial_v_762;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_763> AgradCdfBetaBinomial_v_763;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_764> AgradCdfBetaBinomial_v_764;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_765> AgradCdfBetaBinomial_v_765;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_766> AgradCdfBetaBinomial_v_766;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_767> AgradCdfBetaBinomial_v_767;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_768> AgradCdfBetaBinomial_v_768;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_769> AgradCdfBetaBinomial_v_769;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_770> AgradCdfBetaBinomial_v_770;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_771> AgradCdfBetaBinomial_v_771;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_772> AgradCdfBetaBinomial_v_772;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_773> AgradCdfBetaBinomial_v_773;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_774> AgradCdfBetaBinomial_v_774;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_775> AgradCdfBetaBinomial_v_775;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_776> AgradCdfBetaBinomial_v_776;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_777> AgradCdfBetaBinomial_v_777;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_778> AgradCdfBetaBinomial_v_778;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_779> AgradCdfBetaBinomial_v_779;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_780> AgradCdfBetaBinomial_v_780;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_781> AgradCdfBetaBinomial_v_781;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_782> AgradCdfBetaBinomial_v_782;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_783> AgradCdfBetaBinomial_v_783;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_784> AgradCdfBetaBinomial_v_784;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_785> AgradCdfBetaBinomial_v_785;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_786> AgradCdfBetaBinomial_v_786;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_787> AgradCdfBetaBinomial_v_787;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_788> AgradCdfBetaBinomial_v_788;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_789> AgradCdfBetaBinomial_v_789;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_790> AgradCdfBetaBinomial_v_790;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_791> AgradCdfBetaBinomial_v_791;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_792> AgradCdfBetaBinomial_v_792;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_793> AgradCdfBetaBinomial_v_793;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_794> AgradCdfBetaBinomial_v_794;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_795> AgradCdfBetaBinomial_v_795;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_796> AgradCdfBetaBinomial_v_796;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_797> AgradCdfBetaBinomial_v_797;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_798> AgradCdfBetaBinomial_v_798;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_799> AgradCdfBetaBinomial_v_799;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_600, AgradCdfTestFixture, AgradCdfBetaBinomial_v_600);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_601, AgradCdfTestFixture, AgradCdfBetaBinomial_v_601);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_602, AgradCdfTestFixture, AgradCdfBetaBinomial_v_602);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_603, AgradCdfTestFixture, AgradCdfBetaBinomial_v_603);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_604, AgradCdfTestFixture, AgradCdfBetaBinomial_v_604);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_605, AgradCdfTestFixture, AgradCdfBetaBinomial_v_605);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_606, AgradCdfTestFixture, AgradCdfBetaBinomial_v_606);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_607, AgradCdfTestFixture, AgradCdfBetaBinomial_v_607);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_608, AgradCdfTestFixture, AgradCdfBetaBinomial_v_608);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_609, AgradCdfTestFixture, AgradCdfBetaBinomial_v_609);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_610, AgradCdfTestFixture, AgradCdfBetaBinomial_v_610);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_611, AgradCdfTestFixture, AgradCdfBetaBinomial_v_611);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_612, AgradCdfTestFixture, AgradCdfBetaBinomial_v_612);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_613, AgradCdfTestFixture, AgradCdfBetaBinomial_v_613);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_614, AgradCdfTestFixture, AgradCdfBetaBinomial_v_614);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_615, AgradCdfTestFixture, AgradCdfBetaBinomial_v_615);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_616, AgradCdfTestFixture, AgradCdfBetaBinomial_v_616);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_617, AgradCdfTestFixture, AgradCdfBetaBinomial_v_617);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_618, AgradCdfTestFixture, AgradCdfBetaBinomial_v_618);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_619, AgradCdfTestFixture, AgradCdfBetaBinomial_v_619);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_620, AgradCdfTestFixture, AgradCdfBetaBinomial_v_620);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_621, AgradCdfTestFixture, AgradCdfBetaBinomial_v_621);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_622, AgradCdfTestFixture, AgradCdfBetaBinomial_v_622);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_623, AgradCdfTestFixture, AgradCdfBetaBinomial_v_623);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_624, AgradCdfTestFixture, AgradCdfBetaBinomial_v_624);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_625, AgradCdfTestFixture, AgradCdfBetaBinomial_v_625);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_626, AgradCdfTestFixture, AgradCdfBetaBinomial_v_626);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_627, AgradCdfTestFixture, AgradCdfBetaBinomial_v_627);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_628, AgradCdfTestFixture, AgradCdfBetaBinomial_v_628);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_629, AgradCdfTestFixture, AgradCdfBetaBinomial_v_629);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_630, AgradCdfTestFixture, AgradCdfBetaBinomial_v_630);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_631, AgradCdfTestFixture, AgradCdfBetaBinomial_v_631);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_632, AgradCdfTestFixture, AgradCdfBetaBinomial_v_632);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_633, AgradCdfTestFixture, AgradCdfBetaBinomial_v_633);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_634, AgradCdfTestFixture, AgradCdfBetaBinomial_v_634);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_635, AgradCdfTestFixture, AgradCdfBetaBinomial_v_635);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_636, AgradCdfTestFixture, AgradCdfBetaBinomial_v_636);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_637, AgradCdfTestFixture, AgradCdfBetaBinomial_v_637);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_638, AgradCdfTestFixture, AgradCdfBetaBinomial_v_638);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_639, AgradCdfTestFixture, AgradCdfBetaBinomial_v_639);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_640, AgradCdfTestFixture, AgradCdfBetaBinomial_v_640);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_641, AgradCdfTestFixture, AgradCdfBetaBinomial_v_641);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_642, AgradCdfTestFixture, AgradCdfBetaBinomial_v_642);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_643, AgradCdfTestFixture, AgradCdfBetaBinomial_v_643);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_644, AgradCdfTestFixture, AgradCdfBetaBinomial_v_644);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_645, AgradCdfTestFixture, AgradCdfBetaBinomial_v_645);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_646, AgradCdfTestFixture, AgradCdfBetaBinomial_v_646);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_647, AgradCdfTestFixture, AgradCdfBetaBinomial_v_647);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_648, AgradCdfTestFixture, AgradCdfBetaBinomial_v_648);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_649, AgradCdfTestFixture, AgradCdfBetaBinomial_v_649);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_650, AgradCdfTestFixture, AgradCdfBetaBinomial_v_650);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_651, AgradCdfTestFixture, AgradCdfBetaBinomial_v_651);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_652, AgradCdfTestFixture, AgradCdfBetaBinomial_v_652);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_653, AgradCdfTestFixture, AgradCdfBetaBinomial_v_653);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_654, AgradCdfTestFixture, AgradCdfBetaBinomial_v_654);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_655, AgradCdfTestFixture, AgradCdfBetaBinomial_v_655);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_656, AgradCdfTestFixture, AgradCdfBetaBinomial_v_656);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_657, AgradCdfTestFixture, AgradCdfBetaBinomial_v_657);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_658, AgradCdfTestFixture, AgradCdfBetaBinomial_v_658);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_659, AgradCdfTestFixture, AgradCdfBetaBinomial_v_659);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_660, AgradCdfTestFixture, AgradCdfBetaBinomial_v_660);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_661, AgradCdfTestFixture, AgradCdfBetaBinomial_v_661);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_662, AgradCdfTestFixture, AgradCdfBetaBinomial_v_662);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_663, AgradCdfTestFixture, AgradCdfBetaBinomial_v_663);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_664, AgradCdfTestFixture, AgradCdfBetaBinomial_v_664);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_665, AgradCdfTestFixture, AgradCdfBetaBinomial_v_665);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_666, AgradCdfTestFixture, AgradCdfBetaBinomial_v_666);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_667, AgradCdfTestFixture, AgradCdfBetaBinomial_v_667);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_668, AgradCdfTestFixture, AgradCdfBetaBinomial_v_668);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_669, AgradCdfTestFixture, AgradCdfBetaBinomial_v_669);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_670, AgradCdfTestFixture, AgradCdfBetaBinomial_v_670);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_671, AgradCdfTestFixture, AgradCdfBetaBinomial_v_671);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_672, AgradCdfTestFixture, AgradCdfBetaBinomial_v_672);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_673, AgradCdfTestFixture, AgradCdfBetaBinomial_v_673);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_674, AgradCdfTestFixture, AgradCdfBetaBinomial_v_674);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_675, AgradCdfTestFixture, AgradCdfBetaBinomial_v_675);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_676, AgradCdfTestFixture, AgradCdfBetaBinomial_v_676);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_677, AgradCdfTestFixture, AgradCdfBetaBinomial_v_677);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_678, AgradCdfTestFixture, AgradCdfBetaBinomial_v_678);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_679, AgradCdfTestFixture, AgradCdfBetaBinomial_v_679);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_680, AgradCdfTestFixture, AgradCdfBetaBinomial_v_680);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_681, AgradCdfTestFixture, AgradCdfBetaBinomial_v_681);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_682, AgradCdfTestFixture, AgradCdfBetaBinomial_v_682);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_683, AgradCdfTestFixture, AgradCdfBetaBinomial_v_683);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_684, AgradCdfTestFixture, AgradCdfBetaBinomial_v_684);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_685, AgradCdfTestFixture, AgradCdfBetaBinomial_v_685);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_686, AgradCdfTestFixture, AgradCdfBetaBinomial_v_686);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_687, AgradCdfTestFixture, AgradCdfBetaBinomial_v_687);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_688, AgradCdfTestFixture, AgradCdfBetaBinomial_v_688);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_689, AgradCdfTestFixture, AgradCdfBetaBinomial_v_689);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_690, AgradCdfTestFixture, AgradCdfBetaBinomial_v_690);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_691, AgradCdfTestFixture, AgradCdfBetaBinomial_v_691);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_692, AgradCdfTestFixture, AgradCdfBetaBinomial_v_692);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_693, AgradCdfTestFixture, AgradCdfBetaBinomial_v_693);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_694, AgradCdfTestFixture, AgradCdfBetaBinomial_v_694);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_695, AgradCdfTestFixture, AgradCdfBetaBinomial_v_695);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_696, AgradCdfTestFixture, AgradCdfBetaBinomial_v_696);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_697, AgradCdfTestFixture, AgradCdfBetaBinomial_v_697);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_698, AgradCdfTestFixture, AgradCdfBetaBinomial_v_698);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_699, AgradCdfTestFixture, AgradCdfBetaBinomial_v_699);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_700, AgradCdfTestFixture, AgradCdfBetaBinomial_v_700);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_701, AgradCdfTestFixture, AgradCdfBetaBinomial_v_701);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_702, AgradCdfTestFixture, AgradCdfBetaBinomial_v_702);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_703, AgradCdfTestFixture, AgradCdfBetaBinomial_v_703);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_704, AgradCdfTestFixture, AgradCdfBetaBinomial_v_704);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_705, AgradCdfTestFixture, AgradCdfBetaBinomial_v_705);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_706, AgradCdfTestFixture, AgradCdfBetaBinomial_v_706);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_707, AgradCdfTestFixture, AgradCdfBetaBinomial_v_707);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_708, AgradCdfTestFixture, AgradCdfBetaBinomial_v_708);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_709, AgradCdfTestFixture, AgradCdfBetaBinomial_v_709);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_710, AgradCdfTestFixture, AgradCdfBetaBinomial_v_710);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_711, AgradCdfTestFixture, AgradCdfBetaBinomial_v_711);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_712, AgradCdfTestFixture, AgradCdfBetaBinomial_v_712);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_713, AgradCdfTestFixture, AgradCdfBetaBinomial_v_713);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_714, AgradCdfTestFixture, AgradCdfBetaBinomial_v_714);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_715, AgradCdfTestFixture, AgradCdfBetaBinomial_v_715);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_716, AgradCdfTestFixture, AgradCdfBetaBinomial_v_716);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_717, AgradCdfTestFixture, AgradCdfBetaBinomial_v_717);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_718, AgradCdfTestFixture, AgradCdfBetaBinomial_v_718);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_719, AgradCdfTestFixture, AgradCdfBetaBinomial_v_719);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_720, AgradCdfTestFixture, AgradCdfBetaBinomial_v_720);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_721, AgradCdfTestFixture, AgradCdfBetaBinomial_v_721);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_722, AgradCdfTestFixture, AgradCdfBetaBinomial_v_722);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_723, AgradCdfTestFixture, AgradCdfBetaBinomial_v_723);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_724, AgradCdfTestFixture, AgradCdfBetaBinomial_v_724);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_725, AgradCdfTestFixture, AgradCdfBetaBinomial_v_725);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_726, AgradCdfTestFixture, AgradCdfBetaBinomial_v_726);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_727, AgradCdfTestFixture, AgradCdfBetaBinomial_v_727);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_728, AgradCdfTestFixture, AgradCdfBetaBinomial_v_728);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_729, AgradCdfTestFixture, AgradCdfBetaBinomial_v_729);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_730, AgradCdfTestFixture, AgradCdfBetaBinomial_v_730);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_731, AgradCdfTestFixture, AgradCdfBetaBinomial_v_731);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_732, AgradCdfTestFixture, AgradCdfBetaBinomial_v_732);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_733, AgradCdfTestFixture, AgradCdfBetaBinomial_v_733);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_734, AgradCdfTestFixture, AgradCdfBetaBinomial_v_734);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_735, AgradCdfTestFixture, AgradCdfBetaBinomial_v_735);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_736, AgradCdfTestFixture, AgradCdfBetaBinomial_v_736);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_737, AgradCdfTestFixture, AgradCdfBetaBinomial_v_737);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_738, AgradCdfTestFixture, AgradCdfBetaBinomial_v_738);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_739, AgradCdfTestFixture, AgradCdfBetaBinomial_v_739);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_740, AgradCdfTestFixture, AgradCdfBetaBinomial_v_740);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_741, AgradCdfTestFixture, AgradCdfBetaBinomial_v_741);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_742, AgradCdfTestFixture, AgradCdfBetaBinomial_v_742);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_743, AgradCdfTestFixture, AgradCdfBetaBinomial_v_743);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_744, AgradCdfTestFixture, AgradCdfBetaBinomial_v_744);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_745, AgradCdfTestFixture, AgradCdfBetaBinomial_v_745);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_746, AgradCdfTestFixture, AgradCdfBetaBinomial_v_746);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_747, AgradCdfTestFixture, AgradCdfBetaBinomial_v_747);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_748, AgradCdfTestFixture, AgradCdfBetaBinomial_v_748);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_749, AgradCdfTestFixture, AgradCdfBetaBinomial_v_749);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_750, AgradCdfTestFixture, AgradCdfBetaBinomial_v_750);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_751, AgradCdfTestFixture, AgradCdfBetaBinomial_v_751);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_752, AgradCdfTestFixture, AgradCdfBetaBinomial_v_752);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_753, AgradCdfTestFixture, AgradCdfBetaBinomial_v_753);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_754, AgradCdfTestFixture, AgradCdfBetaBinomial_v_754);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_755, AgradCdfTestFixture, AgradCdfBetaBinomial_v_755);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_756, AgradCdfTestFixture, AgradCdfBetaBinomial_v_756);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_757, AgradCdfTestFixture, AgradCdfBetaBinomial_v_757);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_758, AgradCdfTestFixture, AgradCdfBetaBinomial_v_758);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_759, AgradCdfTestFixture, AgradCdfBetaBinomial_v_759);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_760, AgradCdfTestFixture, AgradCdfBetaBinomial_v_760);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_761, AgradCdfTestFixture, AgradCdfBetaBinomial_v_761);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_762, AgradCdfTestFixture, AgradCdfBetaBinomial_v_762);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_763, AgradCdfTestFixture, AgradCdfBetaBinomial_v_763);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_764, AgradCdfTestFixture, AgradCdfBetaBinomial_v_764);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_765, AgradCdfTestFixture, AgradCdfBetaBinomial_v_765);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_766, AgradCdfTestFixture, AgradCdfBetaBinomial_v_766);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_767, AgradCdfTestFixture, AgradCdfBetaBinomial_v_767);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_768, AgradCdfTestFixture, AgradCdfBetaBinomial_v_768);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_769, AgradCdfTestFixture, AgradCdfBetaBinomial_v_769);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_770, AgradCdfTestFixture, AgradCdfBetaBinomial_v_770);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_771, AgradCdfTestFixture, AgradCdfBetaBinomial_v_771);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_772, AgradCdfTestFixture, AgradCdfBetaBinomial_v_772);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_773, AgradCdfTestFixture, AgradCdfBetaBinomial_v_773);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_774, AgradCdfTestFixture, AgradCdfBetaBinomial_v_774);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_775, AgradCdfTestFixture, AgradCdfBetaBinomial_v_775);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_776, AgradCdfTestFixture, AgradCdfBetaBinomial_v_776);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_777, AgradCdfTestFixture, AgradCdfBetaBinomial_v_777);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_778, AgradCdfTestFixture, AgradCdfBetaBinomial_v_778);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_779, AgradCdfTestFixture, AgradCdfBetaBinomial_v_779);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_780, AgradCdfTestFixture, AgradCdfBetaBinomial_v_780);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_781, AgradCdfTestFixture, AgradCdfBetaBinomial_v_781);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_782, AgradCdfTestFixture, AgradCdfBetaBinomial_v_782);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_783, AgradCdfTestFixture, AgradCdfBetaBinomial_v_783);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_784, AgradCdfTestFixture, AgradCdfBetaBinomial_v_784);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_785, AgradCdfTestFixture, AgradCdfBetaBinomial_v_785);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_786, AgradCdfTestFixture, AgradCdfBetaBinomial_v_786);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_787, AgradCdfTestFixture, AgradCdfBetaBinomial_v_787);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_788, AgradCdfTestFixture, AgradCdfBetaBinomial_v_788);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_789, AgradCdfTestFixture, AgradCdfBetaBinomial_v_789);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_790, AgradCdfTestFixture, AgradCdfBetaBinomial_v_790);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_791, AgradCdfTestFixture, AgradCdfBetaBinomial_v_791);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_792, AgradCdfTestFixture, AgradCdfBetaBinomial_v_792);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_793, AgradCdfTestFixture, AgradCdfBetaBinomial_v_793);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_794, AgradCdfTestFixture, AgradCdfBetaBinomial_v_794);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_795, AgradCdfTestFixture, AgradCdfBetaBinomial_v_795);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_796, AgradCdfTestFixture, AgradCdfBetaBinomial_v_796);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_797, AgradCdfTestFixture, AgradCdfBetaBinomial_v_797);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_798, AgradCdfTestFixture, AgradCdfBetaBinomial_v_798);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_799, AgradCdfTestFixture, AgradCdfBetaBinomial_v_799);

