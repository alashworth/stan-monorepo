#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty> type_fv_500;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_501;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_502;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_503;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty> type_fv_504;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_505;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_506;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_507;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_508;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_509;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_510;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty> type_fv_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty> type_fv_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty> type_fv_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty> type_fv_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty> type_fv_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty> type_fv_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty> type_fv_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_575;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, fvar<var>, empty, empty> type_fv_576;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<fvar<var>>, empty, empty> type_fv_577;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_578;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_579;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, fvar<var>, empty, empty> type_fv_580;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_581;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_582;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_583;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_584;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_585;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_586;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_587;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_588;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_589;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_590;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_591;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, double, empty, empty> type_fv_592;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, std::vector<double>, empty, empty> type_fv_593;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_594;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_595;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, fvar<var>, empty, empty> type_fv_596;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_597;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_598;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_599;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_500> AgradDistributionsBetaBinomial_fv_500;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_501> AgradDistributionsBetaBinomial_fv_501;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_502> AgradDistributionsBetaBinomial_fv_502;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_503> AgradDistributionsBetaBinomial_fv_503;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_504> AgradDistributionsBetaBinomial_fv_504;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_505> AgradDistributionsBetaBinomial_fv_505;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_506> AgradDistributionsBetaBinomial_fv_506;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_507> AgradDistributionsBetaBinomial_fv_507;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_508> AgradDistributionsBetaBinomial_fv_508;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_509> AgradDistributionsBetaBinomial_fv_509;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_510> AgradDistributionsBetaBinomial_fv_510;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_511> AgradDistributionsBetaBinomial_fv_511;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_512> AgradDistributionsBetaBinomial_fv_512;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_513> AgradDistributionsBetaBinomial_fv_513;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_514> AgradDistributionsBetaBinomial_fv_514;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_515> AgradDistributionsBetaBinomial_fv_515;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_516> AgradDistributionsBetaBinomial_fv_516;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_517> AgradDistributionsBetaBinomial_fv_517;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_518> AgradDistributionsBetaBinomial_fv_518;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_519> AgradDistributionsBetaBinomial_fv_519;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_520> AgradDistributionsBetaBinomial_fv_520;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_521> AgradDistributionsBetaBinomial_fv_521;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_522> AgradDistributionsBetaBinomial_fv_522;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_523> AgradDistributionsBetaBinomial_fv_523;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_524> AgradDistributionsBetaBinomial_fv_524;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_525> AgradDistributionsBetaBinomial_fv_525;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_526> AgradDistributionsBetaBinomial_fv_526;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_527> AgradDistributionsBetaBinomial_fv_527;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_528> AgradDistributionsBetaBinomial_fv_528;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_529> AgradDistributionsBetaBinomial_fv_529;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_530> AgradDistributionsBetaBinomial_fv_530;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_531> AgradDistributionsBetaBinomial_fv_531;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_532> AgradDistributionsBetaBinomial_fv_532;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_533> AgradDistributionsBetaBinomial_fv_533;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_534> AgradDistributionsBetaBinomial_fv_534;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_535> AgradDistributionsBetaBinomial_fv_535;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_536> AgradDistributionsBetaBinomial_fv_536;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_537> AgradDistributionsBetaBinomial_fv_537;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_538> AgradDistributionsBetaBinomial_fv_538;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_539> AgradDistributionsBetaBinomial_fv_539;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_540> AgradDistributionsBetaBinomial_fv_540;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_541> AgradDistributionsBetaBinomial_fv_541;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_542> AgradDistributionsBetaBinomial_fv_542;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_543> AgradDistributionsBetaBinomial_fv_543;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_544> AgradDistributionsBetaBinomial_fv_544;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_545> AgradDistributionsBetaBinomial_fv_545;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_546> AgradDistributionsBetaBinomial_fv_546;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_547> AgradDistributionsBetaBinomial_fv_547;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_548> AgradDistributionsBetaBinomial_fv_548;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_549> AgradDistributionsBetaBinomial_fv_549;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_550> AgradDistributionsBetaBinomial_fv_550;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_551> AgradDistributionsBetaBinomial_fv_551;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_552> AgradDistributionsBetaBinomial_fv_552;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_553> AgradDistributionsBetaBinomial_fv_553;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_554> AgradDistributionsBetaBinomial_fv_554;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_555> AgradDistributionsBetaBinomial_fv_555;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_556> AgradDistributionsBetaBinomial_fv_556;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_557> AgradDistributionsBetaBinomial_fv_557;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_558> AgradDistributionsBetaBinomial_fv_558;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_559> AgradDistributionsBetaBinomial_fv_559;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_560> AgradDistributionsBetaBinomial_fv_560;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_561> AgradDistributionsBetaBinomial_fv_561;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_562> AgradDistributionsBetaBinomial_fv_562;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_563> AgradDistributionsBetaBinomial_fv_563;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_564> AgradDistributionsBetaBinomial_fv_564;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_565> AgradDistributionsBetaBinomial_fv_565;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_566> AgradDistributionsBetaBinomial_fv_566;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_567> AgradDistributionsBetaBinomial_fv_567;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_568> AgradDistributionsBetaBinomial_fv_568;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_569> AgradDistributionsBetaBinomial_fv_569;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_570> AgradDistributionsBetaBinomial_fv_570;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_571> AgradDistributionsBetaBinomial_fv_571;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_572> AgradDistributionsBetaBinomial_fv_572;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_573> AgradDistributionsBetaBinomial_fv_573;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_574> AgradDistributionsBetaBinomial_fv_574;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_575> AgradDistributionsBetaBinomial_fv_575;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_576> AgradDistributionsBetaBinomial_fv_576;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_577> AgradDistributionsBetaBinomial_fv_577;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_578> AgradDistributionsBetaBinomial_fv_578;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_579> AgradDistributionsBetaBinomial_fv_579;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_580> AgradDistributionsBetaBinomial_fv_580;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_581> AgradDistributionsBetaBinomial_fv_581;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_582> AgradDistributionsBetaBinomial_fv_582;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_583> AgradDistributionsBetaBinomial_fv_583;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_584> AgradDistributionsBetaBinomial_fv_584;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_585> AgradDistributionsBetaBinomial_fv_585;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_586> AgradDistributionsBetaBinomial_fv_586;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_587> AgradDistributionsBetaBinomial_fv_587;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_588> AgradDistributionsBetaBinomial_fv_588;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_589> AgradDistributionsBetaBinomial_fv_589;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_590> AgradDistributionsBetaBinomial_fv_590;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_591> AgradDistributionsBetaBinomial_fv_591;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_592> AgradDistributionsBetaBinomial_fv_592;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_593> AgradDistributionsBetaBinomial_fv_593;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_594> AgradDistributionsBetaBinomial_fv_594;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_595> AgradDistributionsBetaBinomial_fv_595;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_596> AgradDistributionsBetaBinomial_fv_596;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_597> AgradDistributionsBetaBinomial_fv_597;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_598> AgradDistributionsBetaBinomial_fv_598;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_599> AgradDistributionsBetaBinomial_fv_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_500, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_501, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_502, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_503, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_504, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_505, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_506, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_507, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_508, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_509, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_510, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_511, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_512, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_513, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_514, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_515, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_516, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_517, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_518, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_519, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_520, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_521, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_522, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_523, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_524, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_525, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_526, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_527, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_528, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_529, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_530, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_531, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_532, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_533, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_534, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_535, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_536, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_537, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_538, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_539, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_540, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_541, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_542, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_543, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_544, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_545, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_546, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_547, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_548, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_549, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_550, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_551, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_552, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_553, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_554, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_555, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_556, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_557, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_558, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_559, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_560, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_561, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_562, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_563, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_564, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_565, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_566, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_567, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_568, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_569, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_570, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_571, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_572, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_573, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_574, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_575, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_576, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_577, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_578, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_579, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_580, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_581, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_582, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_583, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_584, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_585, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_586, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_587, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_588, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_589, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_590, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_591, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_592, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_593, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_594, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_595, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_596, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_597, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_598, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_599, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_599);

