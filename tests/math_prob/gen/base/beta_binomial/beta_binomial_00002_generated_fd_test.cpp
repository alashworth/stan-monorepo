#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, double, empty, empty> type_fd_400;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, std::vector<double>, empty, empty> type_fd_401;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_402;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_403;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, fvar<double>, empty, empty> type_fd_404;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_405;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_406;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_407;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, double, empty, empty> type_fd_408;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_409;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_410;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_411;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_412;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_413;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_414;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_415;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_416;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_417;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_418;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_419;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_420;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_421;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_422;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_423;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_424;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_425;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_426;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_427;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_428;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_429;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_430;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_431;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, fvar<double>, empty, empty> type_fd_432;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<fvar<double>>, empty, empty> type_fd_433;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_434;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_435;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, fvar<double>, empty, empty> type_fd_436;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_437;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_438;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_439;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_440;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_441;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_442;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_443;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_444;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_445;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_446;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_447;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, double, empty, empty> type_fd_448;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, std::vector<double>, empty, empty> type_fd_449;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_450;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_451;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, fvar<double>, empty, empty> type_fd_452;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_453;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_454;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_455;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, double, empty, empty> type_fd_456;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_457;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_458;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_459;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_460;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_461;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_462;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_463;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_464;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_465;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_466;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_467;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_468;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_469;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_470;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_471;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_472;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_473;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_474;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_475;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_476;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_477;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_478;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_479;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty> type_fd_480;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty> type_fd_481;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_482;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_483;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty> type_fd_484;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_485;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_486;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_487;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_488;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_489;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_490;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_491;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_492;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_493;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_494;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_495;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty> type_fd_496;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty> type_fd_497;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_498;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_499;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty> type_fd_500;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_501;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_502;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_503;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty> type_fd_504;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_505;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_506;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_507;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_508;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_509;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_510;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty> type_fd_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty> type_fd_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty> type_fd_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty> type_fd_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty> type_fd_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty> type_fd_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty> type_fd_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty> type_fd_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty> type_fd_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty> type_fd_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty> type_fd_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fd_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty> type_fd_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fd_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_575;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, fvar<double>, empty, empty> type_fd_576;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, std::vector<fvar<double>>, empty, empty> type_fd_577;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_578;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_579;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, fvar<double>, empty, empty> type_fd_580;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, std::vector<fvar<double>>, empty, empty> type_fd_581;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_582;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_583;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty> type_fd_584;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty> type_fd_585;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_586;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_587;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty> type_fd_588;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty> type_fd_589;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_590;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_591;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, double, empty, empty> type_fd_592;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, std::vector<double>, empty, empty> type_fd_593;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fd_594;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fd_595;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, fvar<double>, empty, empty> type_fd_596;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, std::vector<fvar<double>>, empty, empty> type_fd_597;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty> type_fd_598;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty> type_fd_599;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_400> AgradDistributionsBetaBinomial_fd_400;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_401> AgradDistributionsBetaBinomial_fd_401;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_402> AgradDistributionsBetaBinomial_fd_402;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_403> AgradDistributionsBetaBinomial_fd_403;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_404> AgradDistributionsBetaBinomial_fd_404;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_405> AgradDistributionsBetaBinomial_fd_405;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_406> AgradDistributionsBetaBinomial_fd_406;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_407> AgradDistributionsBetaBinomial_fd_407;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_408> AgradDistributionsBetaBinomial_fd_408;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_409> AgradDistributionsBetaBinomial_fd_409;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_410> AgradDistributionsBetaBinomial_fd_410;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_411> AgradDistributionsBetaBinomial_fd_411;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_412> AgradDistributionsBetaBinomial_fd_412;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_413> AgradDistributionsBetaBinomial_fd_413;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_414> AgradDistributionsBetaBinomial_fd_414;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_415> AgradDistributionsBetaBinomial_fd_415;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_416> AgradDistributionsBetaBinomial_fd_416;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_417> AgradDistributionsBetaBinomial_fd_417;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_418> AgradDistributionsBetaBinomial_fd_418;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_419> AgradDistributionsBetaBinomial_fd_419;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_420> AgradDistributionsBetaBinomial_fd_420;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_421> AgradDistributionsBetaBinomial_fd_421;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_422> AgradDistributionsBetaBinomial_fd_422;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_423> AgradDistributionsBetaBinomial_fd_423;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_424> AgradDistributionsBetaBinomial_fd_424;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_425> AgradDistributionsBetaBinomial_fd_425;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_426> AgradDistributionsBetaBinomial_fd_426;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_427> AgradDistributionsBetaBinomial_fd_427;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_428> AgradDistributionsBetaBinomial_fd_428;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_429> AgradDistributionsBetaBinomial_fd_429;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_430> AgradDistributionsBetaBinomial_fd_430;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_431> AgradDistributionsBetaBinomial_fd_431;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_432> AgradDistributionsBetaBinomial_fd_432;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_433> AgradDistributionsBetaBinomial_fd_433;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_434> AgradDistributionsBetaBinomial_fd_434;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_435> AgradDistributionsBetaBinomial_fd_435;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_436> AgradDistributionsBetaBinomial_fd_436;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_437> AgradDistributionsBetaBinomial_fd_437;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_438> AgradDistributionsBetaBinomial_fd_438;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_439> AgradDistributionsBetaBinomial_fd_439;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_440> AgradDistributionsBetaBinomial_fd_440;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_441> AgradDistributionsBetaBinomial_fd_441;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_442> AgradDistributionsBetaBinomial_fd_442;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_443> AgradDistributionsBetaBinomial_fd_443;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_444> AgradDistributionsBetaBinomial_fd_444;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_445> AgradDistributionsBetaBinomial_fd_445;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_446> AgradDistributionsBetaBinomial_fd_446;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_447> AgradDistributionsBetaBinomial_fd_447;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_448> AgradDistributionsBetaBinomial_fd_448;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_449> AgradDistributionsBetaBinomial_fd_449;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_450> AgradDistributionsBetaBinomial_fd_450;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_451> AgradDistributionsBetaBinomial_fd_451;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_452> AgradDistributionsBetaBinomial_fd_452;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_453> AgradDistributionsBetaBinomial_fd_453;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_454> AgradDistributionsBetaBinomial_fd_454;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_455> AgradDistributionsBetaBinomial_fd_455;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_456> AgradDistributionsBetaBinomial_fd_456;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_457> AgradDistributionsBetaBinomial_fd_457;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_458> AgradDistributionsBetaBinomial_fd_458;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_459> AgradDistributionsBetaBinomial_fd_459;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_460> AgradDistributionsBetaBinomial_fd_460;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_461> AgradDistributionsBetaBinomial_fd_461;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_462> AgradDistributionsBetaBinomial_fd_462;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_463> AgradDistributionsBetaBinomial_fd_463;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_464> AgradDistributionsBetaBinomial_fd_464;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_465> AgradDistributionsBetaBinomial_fd_465;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_466> AgradDistributionsBetaBinomial_fd_466;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_467> AgradDistributionsBetaBinomial_fd_467;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_468> AgradDistributionsBetaBinomial_fd_468;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_469> AgradDistributionsBetaBinomial_fd_469;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_470> AgradDistributionsBetaBinomial_fd_470;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_471> AgradDistributionsBetaBinomial_fd_471;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_472> AgradDistributionsBetaBinomial_fd_472;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_473> AgradDistributionsBetaBinomial_fd_473;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_474> AgradDistributionsBetaBinomial_fd_474;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_475> AgradDistributionsBetaBinomial_fd_475;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_476> AgradDistributionsBetaBinomial_fd_476;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_477> AgradDistributionsBetaBinomial_fd_477;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_478> AgradDistributionsBetaBinomial_fd_478;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_479> AgradDistributionsBetaBinomial_fd_479;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_480> AgradDistributionsBetaBinomial_fd_480;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_481> AgradDistributionsBetaBinomial_fd_481;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_482> AgradDistributionsBetaBinomial_fd_482;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_483> AgradDistributionsBetaBinomial_fd_483;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_484> AgradDistributionsBetaBinomial_fd_484;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_485> AgradDistributionsBetaBinomial_fd_485;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_486> AgradDistributionsBetaBinomial_fd_486;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_487> AgradDistributionsBetaBinomial_fd_487;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_488> AgradDistributionsBetaBinomial_fd_488;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_489> AgradDistributionsBetaBinomial_fd_489;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_490> AgradDistributionsBetaBinomial_fd_490;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_491> AgradDistributionsBetaBinomial_fd_491;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_492> AgradDistributionsBetaBinomial_fd_492;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_493> AgradDistributionsBetaBinomial_fd_493;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_494> AgradDistributionsBetaBinomial_fd_494;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_495> AgradDistributionsBetaBinomial_fd_495;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_496> AgradDistributionsBetaBinomial_fd_496;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_497> AgradDistributionsBetaBinomial_fd_497;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_498> AgradDistributionsBetaBinomial_fd_498;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_499> AgradDistributionsBetaBinomial_fd_499;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_500> AgradDistributionsBetaBinomial_fd_500;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_501> AgradDistributionsBetaBinomial_fd_501;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_502> AgradDistributionsBetaBinomial_fd_502;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_503> AgradDistributionsBetaBinomial_fd_503;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_504> AgradDistributionsBetaBinomial_fd_504;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_505> AgradDistributionsBetaBinomial_fd_505;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_506> AgradDistributionsBetaBinomial_fd_506;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_507> AgradDistributionsBetaBinomial_fd_507;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_508> AgradDistributionsBetaBinomial_fd_508;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_509> AgradDistributionsBetaBinomial_fd_509;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_510> AgradDistributionsBetaBinomial_fd_510;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_511> AgradDistributionsBetaBinomial_fd_511;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_512> AgradDistributionsBetaBinomial_fd_512;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_513> AgradDistributionsBetaBinomial_fd_513;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_514> AgradDistributionsBetaBinomial_fd_514;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_515> AgradDistributionsBetaBinomial_fd_515;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_516> AgradDistributionsBetaBinomial_fd_516;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_517> AgradDistributionsBetaBinomial_fd_517;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_518> AgradDistributionsBetaBinomial_fd_518;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_519> AgradDistributionsBetaBinomial_fd_519;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_520> AgradDistributionsBetaBinomial_fd_520;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_521> AgradDistributionsBetaBinomial_fd_521;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_522> AgradDistributionsBetaBinomial_fd_522;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_523> AgradDistributionsBetaBinomial_fd_523;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_524> AgradDistributionsBetaBinomial_fd_524;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_525> AgradDistributionsBetaBinomial_fd_525;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_526> AgradDistributionsBetaBinomial_fd_526;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_527> AgradDistributionsBetaBinomial_fd_527;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_528> AgradDistributionsBetaBinomial_fd_528;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_529> AgradDistributionsBetaBinomial_fd_529;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_530> AgradDistributionsBetaBinomial_fd_530;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_531> AgradDistributionsBetaBinomial_fd_531;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_532> AgradDistributionsBetaBinomial_fd_532;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_533> AgradDistributionsBetaBinomial_fd_533;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_534> AgradDistributionsBetaBinomial_fd_534;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_535> AgradDistributionsBetaBinomial_fd_535;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_536> AgradDistributionsBetaBinomial_fd_536;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_537> AgradDistributionsBetaBinomial_fd_537;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_538> AgradDistributionsBetaBinomial_fd_538;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_539> AgradDistributionsBetaBinomial_fd_539;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_540> AgradDistributionsBetaBinomial_fd_540;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_541> AgradDistributionsBetaBinomial_fd_541;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_542> AgradDistributionsBetaBinomial_fd_542;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_543> AgradDistributionsBetaBinomial_fd_543;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_544> AgradDistributionsBetaBinomial_fd_544;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_545> AgradDistributionsBetaBinomial_fd_545;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_546> AgradDistributionsBetaBinomial_fd_546;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_547> AgradDistributionsBetaBinomial_fd_547;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_548> AgradDistributionsBetaBinomial_fd_548;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_549> AgradDistributionsBetaBinomial_fd_549;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_550> AgradDistributionsBetaBinomial_fd_550;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_551> AgradDistributionsBetaBinomial_fd_551;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_552> AgradDistributionsBetaBinomial_fd_552;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_553> AgradDistributionsBetaBinomial_fd_553;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_554> AgradDistributionsBetaBinomial_fd_554;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_555> AgradDistributionsBetaBinomial_fd_555;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_556> AgradDistributionsBetaBinomial_fd_556;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_557> AgradDistributionsBetaBinomial_fd_557;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_558> AgradDistributionsBetaBinomial_fd_558;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_559> AgradDistributionsBetaBinomial_fd_559;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_560> AgradDistributionsBetaBinomial_fd_560;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_561> AgradDistributionsBetaBinomial_fd_561;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_562> AgradDistributionsBetaBinomial_fd_562;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_563> AgradDistributionsBetaBinomial_fd_563;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_564> AgradDistributionsBetaBinomial_fd_564;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_565> AgradDistributionsBetaBinomial_fd_565;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_566> AgradDistributionsBetaBinomial_fd_566;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_567> AgradDistributionsBetaBinomial_fd_567;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_568> AgradDistributionsBetaBinomial_fd_568;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_569> AgradDistributionsBetaBinomial_fd_569;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_570> AgradDistributionsBetaBinomial_fd_570;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_571> AgradDistributionsBetaBinomial_fd_571;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_572> AgradDistributionsBetaBinomial_fd_572;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_573> AgradDistributionsBetaBinomial_fd_573;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_574> AgradDistributionsBetaBinomial_fd_574;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_575> AgradDistributionsBetaBinomial_fd_575;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_576> AgradDistributionsBetaBinomial_fd_576;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_577> AgradDistributionsBetaBinomial_fd_577;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_578> AgradDistributionsBetaBinomial_fd_578;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_579> AgradDistributionsBetaBinomial_fd_579;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_580> AgradDistributionsBetaBinomial_fd_580;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_581> AgradDistributionsBetaBinomial_fd_581;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_582> AgradDistributionsBetaBinomial_fd_582;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_583> AgradDistributionsBetaBinomial_fd_583;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_584> AgradDistributionsBetaBinomial_fd_584;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_585> AgradDistributionsBetaBinomial_fd_585;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_586> AgradDistributionsBetaBinomial_fd_586;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_587> AgradDistributionsBetaBinomial_fd_587;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_588> AgradDistributionsBetaBinomial_fd_588;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_589> AgradDistributionsBetaBinomial_fd_589;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_590> AgradDistributionsBetaBinomial_fd_590;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_591> AgradDistributionsBetaBinomial_fd_591;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_592> AgradDistributionsBetaBinomial_fd_592;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_593> AgradDistributionsBetaBinomial_fd_593;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_594> AgradDistributionsBetaBinomial_fd_594;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_595> AgradDistributionsBetaBinomial_fd_595;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_596> AgradDistributionsBetaBinomial_fd_596;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_597> AgradDistributionsBetaBinomial_fd_597;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_598> AgradDistributionsBetaBinomial_fd_598;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fd_599> AgradDistributionsBetaBinomial_fd_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_400, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_401, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_402, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_403, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_404, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_405, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_406, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_407, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_408, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_409, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_410, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_411, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_412, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_413, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_414, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_415, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_416, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_417, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_418, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_419, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_420, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_421, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_422, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_423, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_424, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_425, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_426, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_427, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_428, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_429, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_430, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_431, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_432, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_433, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_434, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_435, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_436, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_437, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_438, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_439, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_440, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_441, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_442, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_443, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_444, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_445, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_446, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_447, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_448, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_449, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_450, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_451, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_452, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_453, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_454, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_455, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_456, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_457, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_458, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_459, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_460, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_461, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_462, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_463, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_464, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_465, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_466, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_467, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_468, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_469, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_470, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_471, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_472, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_473, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_474, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_475, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_476, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_477, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_478, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_479, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_480, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_481, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_482, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_483, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_484, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_485, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_486, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_487, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_488, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_489, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_490, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_491, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_492, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_493, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_494, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_495, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_496, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_497, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_498, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_499, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_500, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_501, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_502, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_503, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_504, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_505, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_506, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_507, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_508, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_509, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_510, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_511, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_512, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_513, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_514, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_515, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_516, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_517, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_518, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_519, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_520, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_521, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_522, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_523, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_524, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_525, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_526, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_527, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_528, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_529, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_530, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_531, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_532, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_533, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_534, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_535, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_536, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_537, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_538, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_539, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_540, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_541, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_542, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_543, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_544, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_545, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_546, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_547, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_548, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_549, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_550, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_551, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_552, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_553, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_554, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_555, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_556, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_557, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_558, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_559, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_560, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_561, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_562, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_563, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_564, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_565, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_566, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_567, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_568, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_569, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_570, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_571, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_572, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_573, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_574, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_575, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_576, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_577, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_578, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_579, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_580, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_581, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_582, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_583, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_584, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_585, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_586, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_587, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_588, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_589, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_590, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_591, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_592, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_593, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_594, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_595, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_596, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_597, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_598, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fd_599, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fd_599);

