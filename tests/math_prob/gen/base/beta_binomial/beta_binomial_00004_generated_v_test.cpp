#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, double, empty, empty> type_v_800;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<double>, empty, empty> type_v_801;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_802;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_803;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, var, empty, empty> type_v_804;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<var>, empty, empty> type_v_805;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_806;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_807;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, double, empty, empty> type_v_808;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_809;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_810;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_811;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, var, empty, empty> type_v_812;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_813;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_814;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_815;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_816;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_817;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_818;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_819;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_820;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_821;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_822;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_823;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_824;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_825;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_826;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_827;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_828;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_829;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_830;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_831;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, double, empty, empty> type_v_832;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_833;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_834;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_835;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, var, empty, empty> type_v_836;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_837;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_838;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_839;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_840;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_841;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_842;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_843;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_844;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_845;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_846;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_847;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_848;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_849;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_850;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_851;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_852;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_853;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_854;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_855;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_856;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_857;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_858;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_859;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_860;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_861;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_862;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_863;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, double, empty, empty> type_v_864;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_865;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_866;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_867;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, var, empty, empty> type_v_868;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_869;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_870;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_871;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_872;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_873;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_874;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_875;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_876;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_877;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_878;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_879;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_880;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_881;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_882;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_883;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_884;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_885;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_886;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_887;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_888;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_889;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_890;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_891;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_892;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_893;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_894;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_895;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_896;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_897;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_898;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_899;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_900;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_901;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_902;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_903;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_904;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_905;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_906;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_907;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_908;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_909;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_910;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_911;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_912;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_913;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_914;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_915;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_916;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_917;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_918;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_919;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_920;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_921;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_922;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_923;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_924;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_925;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_926;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_927;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_928;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_929;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_930;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_931;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_932;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_933;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_934;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_935;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_936;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_937;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_938;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_939;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_940;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_941;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_942;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_943;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_944;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_945;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_946;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_947;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_948;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_949;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_950;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_951;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_952;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_953;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_954;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_955;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_956;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_957;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_958;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_959;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_960;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_961;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_962;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_963;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_964;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_965;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_966;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_967;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_968;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_969;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_970;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_971;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_972;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_973;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_974;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_975;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_976;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_977;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_978;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_979;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_980;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_981;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_982;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_983;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_984;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_985;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_986;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_987;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_988;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_989;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_990;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_991;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_992;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_993;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_994;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_995;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_996;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_997;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_998;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_999;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_800> AgradDistributionsBetaBinomial_v_800;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_801> AgradDistributionsBetaBinomial_v_801;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_802> AgradDistributionsBetaBinomial_v_802;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_803> AgradDistributionsBetaBinomial_v_803;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_804> AgradDistributionsBetaBinomial_v_804;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_805> AgradDistributionsBetaBinomial_v_805;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_806> AgradDistributionsBetaBinomial_v_806;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_807> AgradDistributionsBetaBinomial_v_807;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_808> AgradDistributionsBetaBinomial_v_808;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_809> AgradDistributionsBetaBinomial_v_809;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_810> AgradDistributionsBetaBinomial_v_810;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_811> AgradDistributionsBetaBinomial_v_811;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_812> AgradDistributionsBetaBinomial_v_812;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_813> AgradDistributionsBetaBinomial_v_813;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_814> AgradDistributionsBetaBinomial_v_814;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_815> AgradDistributionsBetaBinomial_v_815;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_816> AgradDistributionsBetaBinomial_v_816;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_817> AgradDistributionsBetaBinomial_v_817;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_818> AgradDistributionsBetaBinomial_v_818;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_819> AgradDistributionsBetaBinomial_v_819;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_820> AgradDistributionsBetaBinomial_v_820;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_821> AgradDistributionsBetaBinomial_v_821;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_822> AgradDistributionsBetaBinomial_v_822;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_823> AgradDistributionsBetaBinomial_v_823;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_824> AgradDistributionsBetaBinomial_v_824;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_825> AgradDistributionsBetaBinomial_v_825;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_826> AgradDistributionsBetaBinomial_v_826;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_827> AgradDistributionsBetaBinomial_v_827;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_828> AgradDistributionsBetaBinomial_v_828;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_829> AgradDistributionsBetaBinomial_v_829;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_830> AgradDistributionsBetaBinomial_v_830;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_831> AgradDistributionsBetaBinomial_v_831;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_832> AgradDistributionsBetaBinomial_v_832;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_833> AgradDistributionsBetaBinomial_v_833;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_834> AgradDistributionsBetaBinomial_v_834;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_835> AgradDistributionsBetaBinomial_v_835;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_836> AgradDistributionsBetaBinomial_v_836;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_837> AgradDistributionsBetaBinomial_v_837;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_838> AgradDistributionsBetaBinomial_v_838;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_839> AgradDistributionsBetaBinomial_v_839;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_840> AgradDistributionsBetaBinomial_v_840;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_841> AgradDistributionsBetaBinomial_v_841;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_842> AgradDistributionsBetaBinomial_v_842;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_843> AgradDistributionsBetaBinomial_v_843;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_844> AgradDistributionsBetaBinomial_v_844;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_845> AgradDistributionsBetaBinomial_v_845;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_846> AgradDistributionsBetaBinomial_v_846;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_847> AgradDistributionsBetaBinomial_v_847;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_848> AgradDistributionsBetaBinomial_v_848;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_849> AgradDistributionsBetaBinomial_v_849;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_850> AgradDistributionsBetaBinomial_v_850;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_851> AgradDistributionsBetaBinomial_v_851;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_852> AgradDistributionsBetaBinomial_v_852;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_853> AgradDistributionsBetaBinomial_v_853;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_854> AgradDistributionsBetaBinomial_v_854;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_855> AgradDistributionsBetaBinomial_v_855;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_856> AgradDistributionsBetaBinomial_v_856;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_857> AgradDistributionsBetaBinomial_v_857;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_858> AgradDistributionsBetaBinomial_v_858;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_859> AgradDistributionsBetaBinomial_v_859;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_860> AgradDistributionsBetaBinomial_v_860;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_861> AgradDistributionsBetaBinomial_v_861;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_862> AgradDistributionsBetaBinomial_v_862;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_863> AgradDistributionsBetaBinomial_v_863;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_864> AgradDistributionsBetaBinomial_v_864;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_865> AgradDistributionsBetaBinomial_v_865;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_866> AgradDistributionsBetaBinomial_v_866;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_867> AgradDistributionsBetaBinomial_v_867;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_868> AgradDistributionsBetaBinomial_v_868;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_869> AgradDistributionsBetaBinomial_v_869;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_870> AgradDistributionsBetaBinomial_v_870;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_871> AgradDistributionsBetaBinomial_v_871;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_872> AgradDistributionsBetaBinomial_v_872;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_873> AgradDistributionsBetaBinomial_v_873;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_874> AgradDistributionsBetaBinomial_v_874;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_875> AgradDistributionsBetaBinomial_v_875;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_876> AgradDistributionsBetaBinomial_v_876;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_877> AgradDistributionsBetaBinomial_v_877;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_878> AgradDistributionsBetaBinomial_v_878;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_879> AgradDistributionsBetaBinomial_v_879;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_880> AgradDistributionsBetaBinomial_v_880;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_881> AgradDistributionsBetaBinomial_v_881;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_882> AgradDistributionsBetaBinomial_v_882;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_883> AgradDistributionsBetaBinomial_v_883;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_884> AgradDistributionsBetaBinomial_v_884;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_885> AgradDistributionsBetaBinomial_v_885;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_886> AgradDistributionsBetaBinomial_v_886;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_887> AgradDistributionsBetaBinomial_v_887;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_888> AgradDistributionsBetaBinomial_v_888;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_889> AgradDistributionsBetaBinomial_v_889;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_890> AgradDistributionsBetaBinomial_v_890;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_891> AgradDistributionsBetaBinomial_v_891;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_892> AgradDistributionsBetaBinomial_v_892;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_893> AgradDistributionsBetaBinomial_v_893;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_894> AgradDistributionsBetaBinomial_v_894;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_895> AgradDistributionsBetaBinomial_v_895;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_896> AgradDistributionsBetaBinomial_v_896;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_897> AgradDistributionsBetaBinomial_v_897;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_898> AgradDistributionsBetaBinomial_v_898;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_899> AgradDistributionsBetaBinomial_v_899;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_900> AgradDistributionsBetaBinomial_v_900;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_901> AgradDistributionsBetaBinomial_v_901;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_902> AgradDistributionsBetaBinomial_v_902;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_903> AgradDistributionsBetaBinomial_v_903;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_904> AgradDistributionsBetaBinomial_v_904;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_905> AgradDistributionsBetaBinomial_v_905;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_906> AgradDistributionsBetaBinomial_v_906;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_907> AgradDistributionsBetaBinomial_v_907;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_908> AgradDistributionsBetaBinomial_v_908;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_909> AgradDistributionsBetaBinomial_v_909;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_910> AgradDistributionsBetaBinomial_v_910;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_911> AgradDistributionsBetaBinomial_v_911;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_912> AgradDistributionsBetaBinomial_v_912;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_913> AgradDistributionsBetaBinomial_v_913;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_914> AgradDistributionsBetaBinomial_v_914;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_915> AgradDistributionsBetaBinomial_v_915;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_916> AgradDistributionsBetaBinomial_v_916;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_917> AgradDistributionsBetaBinomial_v_917;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_918> AgradDistributionsBetaBinomial_v_918;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_919> AgradDistributionsBetaBinomial_v_919;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_920> AgradDistributionsBetaBinomial_v_920;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_921> AgradDistributionsBetaBinomial_v_921;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_922> AgradDistributionsBetaBinomial_v_922;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_923> AgradDistributionsBetaBinomial_v_923;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_924> AgradDistributionsBetaBinomial_v_924;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_925> AgradDistributionsBetaBinomial_v_925;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_926> AgradDistributionsBetaBinomial_v_926;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_927> AgradDistributionsBetaBinomial_v_927;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_928> AgradDistributionsBetaBinomial_v_928;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_929> AgradDistributionsBetaBinomial_v_929;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_930> AgradDistributionsBetaBinomial_v_930;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_931> AgradDistributionsBetaBinomial_v_931;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_932> AgradDistributionsBetaBinomial_v_932;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_933> AgradDistributionsBetaBinomial_v_933;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_934> AgradDistributionsBetaBinomial_v_934;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_935> AgradDistributionsBetaBinomial_v_935;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_936> AgradDistributionsBetaBinomial_v_936;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_937> AgradDistributionsBetaBinomial_v_937;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_938> AgradDistributionsBetaBinomial_v_938;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_939> AgradDistributionsBetaBinomial_v_939;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_940> AgradDistributionsBetaBinomial_v_940;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_941> AgradDistributionsBetaBinomial_v_941;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_942> AgradDistributionsBetaBinomial_v_942;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_943> AgradDistributionsBetaBinomial_v_943;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_944> AgradDistributionsBetaBinomial_v_944;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_945> AgradDistributionsBetaBinomial_v_945;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_946> AgradDistributionsBetaBinomial_v_946;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_947> AgradDistributionsBetaBinomial_v_947;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_948> AgradDistributionsBetaBinomial_v_948;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_949> AgradDistributionsBetaBinomial_v_949;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_950> AgradDistributionsBetaBinomial_v_950;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_951> AgradDistributionsBetaBinomial_v_951;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_952> AgradDistributionsBetaBinomial_v_952;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_953> AgradDistributionsBetaBinomial_v_953;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_954> AgradDistributionsBetaBinomial_v_954;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_955> AgradDistributionsBetaBinomial_v_955;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_956> AgradDistributionsBetaBinomial_v_956;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_957> AgradDistributionsBetaBinomial_v_957;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_958> AgradDistributionsBetaBinomial_v_958;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_959> AgradDistributionsBetaBinomial_v_959;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_960> AgradDistributionsBetaBinomial_v_960;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_961> AgradDistributionsBetaBinomial_v_961;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_962> AgradDistributionsBetaBinomial_v_962;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_963> AgradDistributionsBetaBinomial_v_963;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_964> AgradDistributionsBetaBinomial_v_964;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_965> AgradDistributionsBetaBinomial_v_965;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_966> AgradDistributionsBetaBinomial_v_966;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_967> AgradDistributionsBetaBinomial_v_967;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_968> AgradDistributionsBetaBinomial_v_968;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_969> AgradDistributionsBetaBinomial_v_969;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_970> AgradDistributionsBetaBinomial_v_970;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_971> AgradDistributionsBetaBinomial_v_971;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_972> AgradDistributionsBetaBinomial_v_972;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_973> AgradDistributionsBetaBinomial_v_973;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_974> AgradDistributionsBetaBinomial_v_974;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_975> AgradDistributionsBetaBinomial_v_975;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_976> AgradDistributionsBetaBinomial_v_976;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_977> AgradDistributionsBetaBinomial_v_977;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_978> AgradDistributionsBetaBinomial_v_978;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_979> AgradDistributionsBetaBinomial_v_979;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_980> AgradDistributionsBetaBinomial_v_980;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_981> AgradDistributionsBetaBinomial_v_981;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_982> AgradDistributionsBetaBinomial_v_982;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_983> AgradDistributionsBetaBinomial_v_983;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_984> AgradDistributionsBetaBinomial_v_984;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_985> AgradDistributionsBetaBinomial_v_985;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_986> AgradDistributionsBetaBinomial_v_986;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_987> AgradDistributionsBetaBinomial_v_987;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_988> AgradDistributionsBetaBinomial_v_988;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_989> AgradDistributionsBetaBinomial_v_989;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_990> AgradDistributionsBetaBinomial_v_990;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_991> AgradDistributionsBetaBinomial_v_991;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_992> AgradDistributionsBetaBinomial_v_992;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_993> AgradDistributionsBetaBinomial_v_993;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_994> AgradDistributionsBetaBinomial_v_994;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_995> AgradDistributionsBetaBinomial_v_995;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_996> AgradDistributionsBetaBinomial_v_996;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_997> AgradDistributionsBetaBinomial_v_997;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_998> AgradDistributionsBetaBinomial_v_998;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_v_999> AgradDistributionsBetaBinomial_v_999;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_800, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_800);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_801, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_801);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_802, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_802);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_803, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_803);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_804, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_804);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_805, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_805);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_806, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_806);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_807, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_807);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_808, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_808);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_809, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_809);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_810, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_810);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_811, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_811);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_812, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_812);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_813, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_813);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_814, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_814);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_815, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_815);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_816, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_816);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_817, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_817);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_818, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_818);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_819, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_819);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_820, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_820);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_821, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_821);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_822, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_822);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_823, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_823);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_824, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_824);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_825, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_825);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_826, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_826);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_827, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_827);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_828, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_828);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_829, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_829);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_830, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_830);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_831, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_831);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_832, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_832);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_833, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_833);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_834, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_834);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_835, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_835);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_836, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_836);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_837, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_837);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_838, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_838);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_839, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_839);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_840, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_840);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_841, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_841);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_842, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_842);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_843, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_843);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_844, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_844);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_845, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_845);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_846, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_846);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_847, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_847);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_848, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_848);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_849, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_849);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_850, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_850);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_851, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_851);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_852, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_852);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_853, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_853);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_854, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_854);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_855, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_855);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_856, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_856);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_857, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_857);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_858, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_858);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_859, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_859);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_860, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_860);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_861, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_861);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_862, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_862);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_863, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_863);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_864, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_864);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_865, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_865);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_866, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_866);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_867, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_867);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_868, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_868);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_869, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_869);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_870, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_870);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_871, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_871);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_872, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_872);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_873, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_873);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_874, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_874);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_875, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_875);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_876, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_876);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_877, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_877);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_878, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_878);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_879, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_879);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_880, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_880);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_881, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_881);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_882, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_882);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_883, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_883);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_884, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_884);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_885, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_885);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_886, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_886);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_887, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_887);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_888, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_888);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_889, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_889);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_890, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_890);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_891, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_891);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_892, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_892);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_893, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_893);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_894, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_894);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_895, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_895);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_896, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_896);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_897, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_897);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_898, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_898);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_899, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_899);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_900, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_900);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_901, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_901);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_902, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_902);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_903, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_903);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_904, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_904);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_905, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_905);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_906, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_906);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_907, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_907);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_908, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_908);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_909, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_909);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_910, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_910);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_911, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_911);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_912, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_912);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_913, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_913);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_914, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_914);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_915, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_915);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_916, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_916);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_917, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_917);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_918, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_918);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_919, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_919);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_920, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_920);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_921, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_921);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_922, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_922);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_923, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_923);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_924, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_924);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_925, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_925);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_926, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_926);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_927, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_927);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_928, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_928);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_929, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_929);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_930, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_930);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_931, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_931);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_932, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_932);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_933, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_933);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_934, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_934);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_935, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_935);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_936, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_936);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_937, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_937);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_938, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_938);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_939, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_939);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_940, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_940);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_941, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_941);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_942, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_942);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_943, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_943);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_944, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_944);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_945, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_945);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_946, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_946);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_947, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_947);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_948, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_948);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_949, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_949);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_950, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_950);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_951, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_951);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_952, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_952);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_953, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_953);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_954, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_954);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_955, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_955);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_956, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_956);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_957, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_957);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_958, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_958);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_959, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_959);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_960, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_960);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_961, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_961);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_962, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_962);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_963, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_963);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_964, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_964);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_965, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_965);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_966, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_966);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_967, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_967);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_968, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_968);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_969, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_969);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_970, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_970);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_971, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_971);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_972, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_972);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_973, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_973);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_974, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_974);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_975, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_975);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_976, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_976);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_977, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_977);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_978, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_978);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_979, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_979);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_980, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_980);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_981, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_981);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_982, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_982);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_983, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_983);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_984, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_984);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_985, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_985);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_986, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_986);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_987, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_987);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_988, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_988);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_989, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_989);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_990, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_990);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_991, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_991);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_992, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_992);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_993, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_993);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_994, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_994);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_995, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_995);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_996, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_996);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_997, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_997);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_998, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_998);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_v_999, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_v_999);

