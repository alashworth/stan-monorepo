#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, double, empty, empty> type_v_800;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<double>, empty, empty> type_v_801;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_802;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_803;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, var, empty, empty> type_v_804;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, std::vector<var>, empty, empty> type_v_805;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_806;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_807;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, double, empty, empty> type_v_808;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_809;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_810;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_811;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, var, empty, empty> type_v_812;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_813;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_814;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_815;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_816;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_817;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_818;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_819;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_820;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_821;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_822;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_823;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_824;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_825;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_826;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_827;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_828;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_829;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_830;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_831;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, double, empty, empty> type_v_832;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_833;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_834;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_835;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, var, empty, empty> type_v_836;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_837;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_838;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_839;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_840;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_841;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_842;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_843;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_844;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_845;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_846;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_847;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_848;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_849;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_850;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_851;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_852;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_853;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_854;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_855;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_856;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_857;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_858;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_859;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_860;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_861;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_862;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_863;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, double, empty, empty> type_v_864;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_865;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_866;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_867;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, var, empty, empty> type_v_868;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_869;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_870;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_871;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_872;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_873;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_874;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_875;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_876;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_877;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_878;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_879;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_880;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_881;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_882;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_883;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_884;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_885;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_886;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_887;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_888;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_889;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_890;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_891;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_892;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_893;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_894;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_895;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_896;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_897;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_898;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_899;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_800> AgradCdfBetaBinomial_v_800;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_801> AgradCdfBetaBinomial_v_801;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_802> AgradCdfBetaBinomial_v_802;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_803> AgradCdfBetaBinomial_v_803;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_804> AgradCdfBetaBinomial_v_804;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_805> AgradCdfBetaBinomial_v_805;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_806> AgradCdfBetaBinomial_v_806;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_807> AgradCdfBetaBinomial_v_807;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_808> AgradCdfBetaBinomial_v_808;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_809> AgradCdfBetaBinomial_v_809;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_810> AgradCdfBetaBinomial_v_810;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_811> AgradCdfBetaBinomial_v_811;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_812> AgradCdfBetaBinomial_v_812;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_813> AgradCdfBetaBinomial_v_813;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_814> AgradCdfBetaBinomial_v_814;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_815> AgradCdfBetaBinomial_v_815;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_816> AgradCdfBetaBinomial_v_816;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_817> AgradCdfBetaBinomial_v_817;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_818> AgradCdfBetaBinomial_v_818;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_819> AgradCdfBetaBinomial_v_819;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_820> AgradCdfBetaBinomial_v_820;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_821> AgradCdfBetaBinomial_v_821;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_822> AgradCdfBetaBinomial_v_822;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_823> AgradCdfBetaBinomial_v_823;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_824> AgradCdfBetaBinomial_v_824;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_825> AgradCdfBetaBinomial_v_825;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_826> AgradCdfBetaBinomial_v_826;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_827> AgradCdfBetaBinomial_v_827;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_828> AgradCdfBetaBinomial_v_828;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_829> AgradCdfBetaBinomial_v_829;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_830> AgradCdfBetaBinomial_v_830;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_831> AgradCdfBetaBinomial_v_831;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_832> AgradCdfBetaBinomial_v_832;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_833> AgradCdfBetaBinomial_v_833;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_834> AgradCdfBetaBinomial_v_834;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_835> AgradCdfBetaBinomial_v_835;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_836> AgradCdfBetaBinomial_v_836;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_837> AgradCdfBetaBinomial_v_837;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_838> AgradCdfBetaBinomial_v_838;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_839> AgradCdfBetaBinomial_v_839;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_840> AgradCdfBetaBinomial_v_840;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_841> AgradCdfBetaBinomial_v_841;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_842> AgradCdfBetaBinomial_v_842;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_843> AgradCdfBetaBinomial_v_843;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_844> AgradCdfBetaBinomial_v_844;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_845> AgradCdfBetaBinomial_v_845;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_846> AgradCdfBetaBinomial_v_846;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_847> AgradCdfBetaBinomial_v_847;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_848> AgradCdfBetaBinomial_v_848;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_849> AgradCdfBetaBinomial_v_849;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_850> AgradCdfBetaBinomial_v_850;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_851> AgradCdfBetaBinomial_v_851;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_852> AgradCdfBetaBinomial_v_852;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_853> AgradCdfBetaBinomial_v_853;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_854> AgradCdfBetaBinomial_v_854;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_855> AgradCdfBetaBinomial_v_855;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_856> AgradCdfBetaBinomial_v_856;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_857> AgradCdfBetaBinomial_v_857;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_858> AgradCdfBetaBinomial_v_858;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_859> AgradCdfBetaBinomial_v_859;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_860> AgradCdfBetaBinomial_v_860;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_861> AgradCdfBetaBinomial_v_861;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_862> AgradCdfBetaBinomial_v_862;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_863> AgradCdfBetaBinomial_v_863;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_864> AgradCdfBetaBinomial_v_864;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_865> AgradCdfBetaBinomial_v_865;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_866> AgradCdfBetaBinomial_v_866;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_867> AgradCdfBetaBinomial_v_867;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_868> AgradCdfBetaBinomial_v_868;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_869> AgradCdfBetaBinomial_v_869;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_870> AgradCdfBetaBinomial_v_870;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_871> AgradCdfBetaBinomial_v_871;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_872> AgradCdfBetaBinomial_v_872;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_873> AgradCdfBetaBinomial_v_873;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_874> AgradCdfBetaBinomial_v_874;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_875> AgradCdfBetaBinomial_v_875;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_876> AgradCdfBetaBinomial_v_876;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_877> AgradCdfBetaBinomial_v_877;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_878> AgradCdfBetaBinomial_v_878;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_879> AgradCdfBetaBinomial_v_879;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_880> AgradCdfBetaBinomial_v_880;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_881> AgradCdfBetaBinomial_v_881;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_882> AgradCdfBetaBinomial_v_882;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_883> AgradCdfBetaBinomial_v_883;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_884> AgradCdfBetaBinomial_v_884;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_885> AgradCdfBetaBinomial_v_885;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_886> AgradCdfBetaBinomial_v_886;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_887> AgradCdfBetaBinomial_v_887;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_888> AgradCdfBetaBinomial_v_888;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_889> AgradCdfBetaBinomial_v_889;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_890> AgradCdfBetaBinomial_v_890;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_891> AgradCdfBetaBinomial_v_891;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_892> AgradCdfBetaBinomial_v_892;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_893> AgradCdfBetaBinomial_v_893;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_894> AgradCdfBetaBinomial_v_894;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_895> AgradCdfBetaBinomial_v_895;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_896> AgradCdfBetaBinomial_v_896;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_897> AgradCdfBetaBinomial_v_897;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_898> AgradCdfBetaBinomial_v_898;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_899> AgradCdfBetaBinomial_v_899;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_800, AgradCdfTestFixture, AgradCdfBetaBinomial_v_800);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_801, AgradCdfTestFixture, AgradCdfBetaBinomial_v_801);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_802, AgradCdfTestFixture, AgradCdfBetaBinomial_v_802);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_803, AgradCdfTestFixture, AgradCdfBetaBinomial_v_803);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_804, AgradCdfTestFixture, AgradCdfBetaBinomial_v_804);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_805, AgradCdfTestFixture, AgradCdfBetaBinomial_v_805);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_806, AgradCdfTestFixture, AgradCdfBetaBinomial_v_806);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_807, AgradCdfTestFixture, AgradCdfBetaBinomial_v_807);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_808, AgradCdfTestFixture, AgradCdfBetaBinomial_v_808);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_809, AgradCdfTestFixture, AgradCdfBetaBinomial_v_809);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_810, AgradCdfTestFixture, AgradCdfBetaBinomial_v_810);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_811, AgradCdfTestFixture, AgradCdfBetaBinomial_v_811);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_812, AgradCdfTestFixture, AgradCdfBetaBinomial_v_812);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_813, AgradCdfTestFixture, AgradCdfBetaBinomial_v_813);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_814, AgradCdfTestFixture, AgradCdfBetaBinomial_v_814);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_815, AgradCdfTestFixture, AgradCdfBetaBinomial_v_815);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_816, AgradCdfTestFixture, AgradCdfBetaBinomial_v_816);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_817, AgradCdfTestFixture, AgradCdfBetaBinomial_v_817);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_818, AgradCdfTestFixture, AgradCdfBetaBinomial_v_818);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_819, AgradCdfTestFixture, AgradCdfBetaBinomial_v_819);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_820, AgradCdfTestFixture, AgradCdfBetaBinomial_v_820);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_821, AgradCdfTestFixture, AgradCdfBetaBinomial_v_821);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_822, AgradCdfTestFixture, AgradCdfBetaBinomial_v_822);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_823, AgradCdfTestFixture, AgradCdfBetaBinomial_v_823);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_824, AgradCdfTestFixture, AgradCdfBetaBinomial_v_824);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_825, AgradCdfTestFixture, AgradCdfBetaBinomial_v_825);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_826, AgradCdfTestFixture, AgradCdfBetaBinomial_v_826);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_827, AgradCdfTestFixture, AgradCdfBetaBinomial_v_827);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_828, AgradCdfTestFixture, AgradCdfBetaBinomial_v_828);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_829, AgradCdfTestFixture, AgradCdfBetaBinomial_v_829);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_830, AgradCdfTestFixture, AgradCdfBetaBinomial_v_830);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_831, AgradCdfTestFixture, AgradCdfBetaBinomial_v_831);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_832, AgradCdfTestFixture, AgradCdfBetaBinomial_v_832);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_833, AgradCdfTestFixture, AgradCdfBetaBinomial_v_833);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_834, AgradCdfTestFixture, AgradCdfBetaBinomial_v_834);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_835, AgradCdfTestFixture, AgradCdfBetaBinomial_v_835);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_836, AgradCdfTestFixture, AgradCdfBetaBinomial_v_836);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_837, AgradCdfTestFixture, AgradCdfBetaBinomial_v_837);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_838, AgradCdfTestFixture, AgradCdfBetaBinomial_v_838);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_839, AgradCdfTestFixture, AgradCdfBetaBinomial_v_839);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_840, AgradCdfTestFixture, AgradCdfBetaBinomial_v_840);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_841, AgradCdfTestFixture, AgradCdfBetaBinomial_v_841);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_842, AgradCdfTestFixture, AgradCdfBetaBinomial_v_842);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_843, AgradCdfTestFixture, AgradCdfBetaBinomial_v_843);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_844, AgradCdfTestFixture, AgradCdfBetaBinomial_v_844);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_845, AgradCdfTestFixture, AgradCdfBetaBinomial_v_845);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_846, AgradCdfTestFixture, AgradCdfBetaBinomial_v_846);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_847, AgradCdfTestFixture, AgradCdfBetaBinomial_v_847);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_848, AgradCdfTestFixture, AgradCdfBetaBinomial_v_848);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_849, AgradCdfTestFixture, AgradCdfBetaBinomial_v_849);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_850, AgradCdfTestFixture, AgradCdfBetaBinomial_v_850);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_851, AgradCdfTestFixture, AgradCdfBetaBinomial_v_851);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_852, AgradCdfTestFixture, AgradCdfBetaBinomial_v_852);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_853, AgradCdfTestFixture, AgradCdfBetaBinomial_v_853);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_854, AgradCdfTestFixture, AgradCdfBetaBinomial_v_854);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_855, AgradCdfTestFixture, AgradCdfBetaBinomial_v_855);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_856, AgradCdfTestFixture, AgradCdfBetaBinomial_v_856);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_857, AgradCdfTestFixture, AgradCdfBetaBinomial_v_857);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_858, AgradCdfTestFixture, AgradCdfBetaBinomial_v_858);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_859, AgradCdfTestFixture, AgradCdfBetaBinomial_v_859);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_860, AgradCdfTestFixture, AgradCdfBetaBinomial_v_860);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_861, AgradCdfTestFixture, AgradCdfBetaBinomial_v_861);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_862, AgradCdfTestFixture, AgradCdfBetaBinomial_v_862);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_863, AgradCdfTestFixture, AgradCdfBetaBinomial_v_863);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_864, AgradCdfTestFixture, AgradCdfBetaBinomial_v_864);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_865, AgradCdfTestFixture, AgradCdfBetaBinomial_v_865);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_866, AgradCdfTestFixture, AgradCdfBetaBinomial_v_866);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_867, AgradCdfTestFixture, AgradCdfBetaBinomial_v_867);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_868, AgradCdfTestFixture, AgradCdfBetaBinomial_v_868);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_869, AgradCdfTestFixture, AgradCdfBetaBinomial_v_869);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_870, AgradCdfTestFixture, AgradCdfBetaBinomial_v_870);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_871, AgradCdfTestFixture, AgradCdfBetaBinomial_v_871);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_872, AgradCdfTestFixture, AgradCdfBetaBinomial_v_872);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_873, AgradCdfTestFixture, AgradCdfBetaBinomial_v_873);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_874, AgradCdfTestFixture, AgradCdfBetaBinomial_v_874);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_875, AgradCdfTestFixture, AgradCdfBetaBinomial_v_875);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_876, AgradCdfTestFixture, AgradCdfBetaBinomial_v_876);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_877, AgradCdfTestFixture, AgradCdfBetaBinomial_v_877);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_878, AgradCdfTestFixture, AgradCdfBetaBinomial_v_878);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_879, AgradCdfTestFixture, AgradCdfBetaBinomial_v_879);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_880, AgradCdfTestFixture, AgradCdfBetaBinomial_v_880);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_881, AgradCdfTestFixture, AgradCdfBetaBinomial_v_881);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_882, AgradCdfTestFixture, AgradCdfBetaBinomial_v_882);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_883, AgradCdfTestFixture, AgradCdfBetaBinomial_v_883);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_884, AgradCdfTestFixture, AgradCdfBetaBinomial_v_884);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_885, AgradCdfTestFixture, AgradCdfBetaBinomial_v_885);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_886, AgradCdfTestFixture, AgradCdfBetaBinomial_v_886);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_887, AgradCdfTestFixture, AgradCdfBetaBinomial_v_887);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_888, AgradCdfTestFixture, AgradCdfBetaBinomial_v_888);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_889, AgradCdfTestFixture, AgradCdfBetaBinomial_v_889);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_890, AgradCdfTestFixture, AgradCdfBetaBinomial_v_890);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_891, AgradCdfTestFixture, AgradCdfBetaBinomial_v_891);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_892, AgradCdfTestFixture, AgradCdfBetaBinomial_v_892);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_893, AgradCdfTestFixture, AgradCdfBetaBinomial_v_893);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_894, AgradCdfTestFixture, AgradCdfBetaBinomial_v_894);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_895, AgradCdfTestFixture, AgradCdfBetaBinomial_v_895);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_896, AgradCdfTestFixture, AgradCdfBetaBinomial_v_896);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_897, AgradCdfTestFixture, AgradCdfBetaBinomial_v_897);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_898, AgradCdfTestFixture, AgradCdfBetaBinomial_v_898);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_899, AgradCdfTestFixture, AgradCdfBetaBinomial_v_899);

