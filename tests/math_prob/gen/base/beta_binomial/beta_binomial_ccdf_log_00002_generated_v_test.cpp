#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_ccdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_400;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_401;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_402;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_403;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_404;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_405;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_406;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_407;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_408;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_409;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_410;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_411;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_412;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_413;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_414;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_415;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_416;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_417;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_418;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_419;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_420;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_421;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_422;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_423;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_424;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_425;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_426;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_427;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_428;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_429;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_430;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_431;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_432;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_433;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_434;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_435;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_436;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_437;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_438;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_439;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_440;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_441;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_442;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_443;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_444;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_445;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_446;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_447;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_448;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_449;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_450;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_451;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_452;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_453;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_454;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_455;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_456;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_457;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_458;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_459;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_460;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_461;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_462;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_463;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_464;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_465;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_466;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_467;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_468;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_469;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_470;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_471;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_472;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_473;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_474;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_475;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_476;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_477;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_478;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_479;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_480;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_481;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_482;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_483;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_484;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_485;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_486;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_487;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty> type_v_488;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty> type_v_489;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_490;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_491;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty> type_v_492;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty> type_v_493;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_494;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_495;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_496;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_497;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_498;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_499;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_500;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_501;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_502;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_503;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_504;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_505;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_506;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_507;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_508;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_509;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_510;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_511;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, double, empty, empty> type_v_512;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<double>, empty, empty> type_v_513;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_514;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_515;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, var, empty, empty> type_v_516;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<var>, empty, empty> type_v_517;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_518;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_519;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, double, empty, empty> type_v_520;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<double>, empty, empty> type_v_521;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_522;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_523;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, var, empty, empty> type_v_524;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<var>, empty, empty> type_v_525;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_526;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_527;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_528;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_529;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_530;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_531;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_532;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_533;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_534;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_535;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_536;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_537;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_538;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_539;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_540;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_541;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_542;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_543;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, double, empty, empty> type_v_544;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<double>, empty, empty> type_v_545;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_546;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_547;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, var, empty, empty> type_v_548;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, std::vector<var>, empty, empty> type_v_549;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_550;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_551;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, double, empty, empty> type_v_552;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<double>, empty, empty> type_v_553;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_554;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_555;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, var, empty, empty> type_v_556;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, std::vector<var>, empty, empty> type_v_557;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_558;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_559;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_560;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_561;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_562;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_563;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_564;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_565;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_566;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_567;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_568;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_569;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_570;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_571;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_572;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_573;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_574;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_575;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, double, empty, empty> type_v_576;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<double>, empty, empty> type_v_577;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_578;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_579;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, var, empty, empty> type_v_580;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, std::vector<var>, empty, empty> type_v_581;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_582;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_583;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, double, empty, empty> type_v_584;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<double>, empty, empty> type_v_585;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_586;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_587;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, var, empty, empty> type_v_588;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, std::vector<var>, empty, empty> type_v_589;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_590;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_591;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_592;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_593;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_594;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_595;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_596;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_597;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_598;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_599;

typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_400> AgradCcdfLogBetaBinomial_v_400;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_401> AgradCcdfLogBetaBinomial_v_401;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_402> AgradCcdfLogBetaBinomial_v_402;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_403> AgradCcdfLogBetaBinomial_v_403;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_404> AgradCcdfLogBetaBinomial_v_404;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_405> AgradCcdfLogBetaBinomial_v_405;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_406> AgradCcdfLogBetaBinomial_v_406;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_407> AgradCcdfLogBetaBinomial_v_407;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_408> AgradCcdfLogBetaBinomial_v_408;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_409> AgradCcdfLogBetaBinomial_v_409;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_410> AgradCcdfLogBetaBinomial_v_410;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_411> AgradCcdfLogBetaBinomial_v_411;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_412> AgradCcdfLogBetaBinomial_v_412;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_413> AgradCcdfLogBetaBinomial_v_413;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_414> AgradCcdfLogBetaBinomial_v_414;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_415> AgradCcdfLogBetaBinomial_v_415;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_416> AgradCcdfLogBetaBinomial_v_416;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_417> AgradCcdfLogBetaBinomial_v_417;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_418> AgradCcdfLogBetaBinomial_v_418;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_419> AgradCcdfLogBetaBinomial_v_419;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_420> AgradCcdfLogBetaBinomial_v_420;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_421> AgradCcdfLogBetaBinomial_v_421;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_422> AgradCcdfLogBetaBinomial_v_422;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_423> AgradCcdfLogBetaBinomial_v_423;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_424> AgradCcdfLogBetaBinomial_v_424;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_425> AgradCcdfLogBetaBinomial_v_425;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_426> AgradCcdfLogBetaBinomial_v_426;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_427> AgradCcdfLogBetaBinomial_v_427;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_428> AgradCcdfLogBetaBinomial_v_428;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_429> AgradCcdfLogBetaBinomial_v_429;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_430> AgradCcdfLogBetaBinomial_v_430;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_431> AgradCcdfLogBetaBinomial_v_431;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_432> AgradCcdfLogBetaBinomial_v_432;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_433> AgradCcdfLogBetaBinomial_v_433;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_434> AgradCcdfLogBetaBinomial_v_434;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_435> AgradCcdfLogBetaBinomial_v_435;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_436> AgradCcdfLogBetaBinomial_v_436;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_437> AgradCcdfLogBetaBinomial_v_437;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_438> AgradCcdfLogBetaBinomial_v_438;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_439> AgradCcdfLogBetaBinomial_v_439;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_440> AgradCcdfLogBetaBinomial_v_440;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_441> AgradCcdfLogBetaBinomial_v_441;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_442> AgradCcdfLogBetaBinomial_v_442;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_443> AgradCcdfLogBetaBinomial_v_443;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_444> AgradCcdfLogBetaBinomial_v_444;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_445> AgradCcdfLogBetaBinomial_v_445;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_446> AgradCcdfLogBetaBinomial_v_446;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_447> AgradCcdfLogBetaBinomial_v_447;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_448> AgradCcdfLogBetaBinomial_v_448;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_449> AgradCcdfLogBetaBinomial_v_449;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_450> AgradCcdfLogBetaBinomial_v_450;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_451> AgradCcdfLogBetaBinomial_v_451;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_452> AgradCcdfLogBetaBinomial_v_452;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_453> AgradCcdfLogBetaBinomial_v_453;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_454> AgradCcdfLogBetaBinomial_v_454;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_455> AgradCcdfLogBetaBinomial_v_455;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_456> AgradCcdfLogBetaBinomial_v_456;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_457> AgradCcdfLogBetaBinomial_v_457;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_458> AgradCcdfLogBetaBinomial_v_458;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_459> AgradCcdfLogBetaBinomial_v_459;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_460> AgradCcdfLogBetaBinomial_v_460;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_461> AgradCcdfLogBetaBinomial_v_461;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_462> AgradCcdfLogBetaBinomial_v_462;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_463> AgradCcdfLogBetaBinomial_v_463;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_464> AgradCcdfLogBetaBinomial_v_464;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_465> AgradCcdfLogBetaBinomial_v_465;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_466> AgradCcdfLogBetaBinomial_v_466;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_467> AgradCcdfLogBetaBinomial_v_467;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_468> AgradCcdfLogBetaBinomial_v_468;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_469> AgradCcdfLogBetaBinomial_v_469;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_470> AgradCcdfLogBetaBinomial_v_470;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_471> AgradCcdfLogBetaBinomial_v_471;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_472> AgradCcdfLogBetaBinomial_v_472;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_473> AgradCcdfLogBetaBinomial_v_473;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_474> AgradCcdfLogBetaBinomial_v_474;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_475> AgradCcdfLogBetaBinomial_v_475;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_476> AgradCcdfLogBetaBinomial_v_476;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_477> AgradCcdfLogBetaBinomial_v_477;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_478> AgradCcdfLogBetaBinomial_v_478;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_479> AgradCcdfLogBetaBinomial_v_479;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_480> AgradCcdfLogBetaBinomial_v_480;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_481> AgradCcdfLogBetaBinomial_v_481;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_482> AgradCcdfLogBetaBinomial_v_482;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_483> AgradCcdfLogBetaBinomial_v_483;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_484> AgradCcdfLogBetaBinomial_v_484;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_485> AgradCcdfLogBetaBinomial_v_485;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_486> AgradCcdfLogBetaBinomial_v_486;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_487> AgradCcdfLogBetaBinomial_v_487;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_488> AgradCcdfLogBetaBinomial_v_488;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_489> AgradCcdfLogBetaBinomial_v_489;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_490> AgradCcdfLogBetaBinomial_v_490;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_491> AgradCcdfLogBetaBinomial_v_491;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_492> AgradCcdfLogBetaBinomial_v_492;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_493> AgradCcdfLogBetaBinomial_v_493;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_494> AgradCcdfLogBetaBinomial_v_494;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_495> AgradCcdfLogBetaBinomial_v_495;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_496> AgradCcdfLogBetaBinomial_v_496;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_497> AgradCcdfLogBetaBinomial_v_497;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_498> AgradCcdfLogBetaBinomial_v_498;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_499> AgradCcdfLogBetaBinomial_v_499;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_500> AgradCcdfLogBetaBinomial_v_500;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_501> AgradCcdfLogBetaBinomial_v_501;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_502> AgradCcdfLogBetaBinomial_v_502;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_503> AgradCcdfLogBetaBinomial_v_503;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_504> AgradCcdfLogBetaBinomial_v_504;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_505> AgradCcdfLogBetaBinomial_v_505;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_506> AgradCcdfLogBetaBinomial_v_506;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_507> AgradCcdfLogBetaBinomial_v_507;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_508> AgradCcdfLogBetaBinomial_v_508;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_509> AgradCcdfLogBetaBinomial_v_509;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_510> AgradCcdfLogBetaBinomial_v_510;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_511> AgradCcdfLogBetaBinomial_v_511;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_512> AgradCcdfLogBetaBinomial_v_512;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_513> AgradCcdfLogBetaBinomial_v_513;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_514> AgradCcdfLogBetaBinomial_v_514;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_515> AgradCcdfLogBetaBinomial_v_515;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_516> AgradCcdfLogBetaBinomial_v_516;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_517> AgradCcdfLogBetaBinomial_v_517;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_518> AgradCcdfLogBetaBinomial_v_518;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_519> AgradCcdfLogBetaBinomial_v_519;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_520> AgradCcdfLogBetaBinomial_v_520;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_521> AgradCcdfLogBetaBinomial_v_521;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_522> AgradCcdfLogBetaBinomial_v_522;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_523> AgradCcdfLogBetaBinomial_v_523;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_524> AgradCcdfLogBetaBinomial_v_524;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_525> AgradCcdfLogBetaBinomial_v_525;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_526> AgradCcdfLogBetaBinomial_v_526;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_527> AgradCcdfLogBetaBinomial_v_527;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_528> AgradCcdfLogBetaBinomial_v_528;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_529> AgradCcdfLogBetaBinomial_v_529;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_530> AgradCcdfLogBetaBinomial_v_530;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_531> AgradCcdfLogBetaBinomial_v_531;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_532> AgradCcdfLogBetaBinomial_v_532;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_533> AgradCcdfLogBetaBinomial_v_533;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_534> AgradCcdfLogBetaBinomial_v_534;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_535> AgradCcdfLogBetaBinomial_v_535;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_536> AgradCcdfLogBetaBinomial_v_536;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_537> AgradCcdfLogBetaBinomial_v_537;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_538> AgradCcdfLogBetaBinomial_v_538;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_539> AgradCcdfLogBetaBinomial_v_539;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_540> AgradCcdfLogBetaBinomial_v_540;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_541> AgradCcdfLogBetaBinomial_v_541;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_542> AgradCcdfLogBetaBinomial_v_542;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_543> AgradCcdfLogBetaBinomial_v_543;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_544> AgradCcdfLogBetaBinomial_v_544;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_545> AgradCcdfLogBetaBinomial_v_545;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_546> AgradCcdfLogBetaBinomial_v_546;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_547> AgradCcdfLogBetaBinomial_v_547;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_548> AgradCcdfLogBetaBinomial_v_548;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_549> AgradCcdfLogBetaBinomial_v_549;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_550> AgradCcdfLogBetaBinomial_v_550;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_551> AgradCcdfLogBetaBinomial_v_551;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_552> AgradCcdfLogBetaBinomial_v_552;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_553> AgradCcdfLogBetaBinomial_v_553;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_554> AgradCcdfLogBetaBinomial_v_554;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_555> AgradCcdfLogBetaBinomial_v_555;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_556> AgradCcdfLogBetaBinomial_v_556;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_557> AgradCcdfLogBetaBinomial_v_557;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_558> AgradCcdfLogBetaBinomial_v_558;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_559> AgradCcdfLogBetaBinomial_v_559;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_560> AgradCcdfLogBetaBinomial_v_560;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_561> AgradCcdfLogBetaBinomial_v_561;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_562> AgradCcdfLogBetaBinomial_v_562;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_563> AgradCcdfLogBetaBinomial_v_563;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_564> AgradCcdfLogBetaBinomial_v_564;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_565> AgradCcdfLogBetaBinomial_v_565;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_566> AgradCcdfLogBetaBinomial_v_566;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_567> AgradCcdfLogBetaBinomial_v_567;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_568> AgradCcdfLogBetaBinomial_v_568;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_569> AgradCcdfLogBetaBinomial_v_569;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_570> AgradCcdfLogBetaBinomial_v_570;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_571> AgradCcdfLogBetaBinomial_v_571;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_572> AgradCcdfLogBetaBinomial_v_572;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_573> AgradCcdfLogBetaBinomial_v_573;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_574> AgradCcdfLogBetaBinomial_v_574;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_575> AgradCcdfLogBetaBinomial_v_575;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_576> AgradCcdfLogBetaBinomial_v_576;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_577> AgradCcdfLogBetaBinomial_v_577;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_578> AgradCcdfLogBetaBinomial_v_578;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_579> AgradCcdfLogBetaBinomial_v_579;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_580> AgradCcdfLogBetaBinomial_v_580;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_581> AgradCcdfLogBetaBinomial_v_581;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_582> AgradCcdfLogBetaBinomial_v_582;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_583> AgradCcdfLogBetaBinomial_v_583;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_584> AgradCcdfLogBetaBinomial_v_584;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_585> AgradCcdfLogBetaBinomial_v_585;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_586> AgradCcdfLogBetaBinomial_v_586;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_587> AgradCcdfLogBetaBinomial_v_587;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_588> AgradCcdfLogBetaBinomial_v_588;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_589> AgradCcdfLogBetaBinomial_v_589;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_590> AgradCcdfLogBetaBinomial_v_590;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_591> AgradCcdfLogBetaBinomial_v_591;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_592> AgradCcdfLogBetaBinomial_v_592;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_593> AgradCcdfLogBetaBinomial_v_593;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_594> AgradCcdfLogBetaBinomial_v_594;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_595> AgradCcdfLogBetaBinomial_v_595;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_596> AgradCcdfLogBetaBinomial_v_596;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_597> AgradCcdfLogBetaBinomial_v_597;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_598> AgradCcdfLogBetaBinomial_v_598;
typedef boost::mpl::vector<AgradCcdfLogBetaBinomial, type_v_599> AgradCcdfLogBetaBinomial_v_599;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_400, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_401, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_402, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_403, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_404, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_405, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_406, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_407, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_408, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_409, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_410, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_411, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_412, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_413, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_414, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_415, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_416, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_417, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_418, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_419, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_420, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_421, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_422, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_423, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_424, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_425, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_426, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_427, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_428, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_429, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_430, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_431, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_432, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_433, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_434, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_435, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_436, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_437, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_438, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_439, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_440, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_441, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_442, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_443, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_444, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_445, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_446, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_447, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_448, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_449, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_450, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_451, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_452, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_453, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_454, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_455, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_456, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_457, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_458, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_459, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_460, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_461, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_462, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_463, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_464, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_465, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_466, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_467, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_468, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_469, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_470, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_471, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_472, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_473, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_474, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_475, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_476, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_477, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_478, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_479, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_480, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_481, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_482, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_483, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_484, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_485, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_486, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_487, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_488, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_489, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_490, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_491, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_492, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_493, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_494, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_495, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_496, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_497, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_498, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_499, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_499);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_500, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_500);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_501, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_501);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_502, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_502);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_503, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_503);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_504, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_504);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_505, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_505);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_506, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_506);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_507, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_507);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_508, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_508);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_509, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_509);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_510, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_510);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_511, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_511);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_512, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_512);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_513, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_513);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_514, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_514);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_515, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_515);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_516, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_516);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_517, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_517);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_518, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_518);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_519, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_519);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_520, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_520);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_521, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_521);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_522, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_522);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_523, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_523);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_524, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_524);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_525, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_525);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_526, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_526);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_527, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_527);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_528, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_528);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_529, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_529);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_530, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_530);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_531, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_531);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_532, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_532);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_533, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_533);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_534, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_534);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_535, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_535);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_536, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_536);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_537, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_537);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_538, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_538);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_539, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_539);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_540, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_540);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_541, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_541);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_542, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_542);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_543, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_543);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_544, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_544);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_545, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_545);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_546, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_546);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_547, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_547);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_548, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_548);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_549, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_549);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_550, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_550);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_551, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_551);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_552, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_552);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_553, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_553);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_554, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_554);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_555, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_555);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_556, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_556);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_557, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_557);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_558, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_558);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_559, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_559);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_560, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_560);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_561, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_561);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_562, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_562);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_563, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_563);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_564, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_564);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_565, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_565);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_566, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_566);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_567, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_567);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_568, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_568);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_569, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_569);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_570, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_570);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_571, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_571);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_572, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_572);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_573, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_573);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_574, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_574);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_575, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_575);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_576, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_576);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_577, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_577);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_578, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_578);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_579, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_579);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_580, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_580);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_581, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_581);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_582, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_582);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_583, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_583);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_584, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_584);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_585, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_585);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_586, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_586);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_587, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_587);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_588, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_588);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_589, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_589);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_590, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_590);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_591, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_591);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_592, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_592);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_593, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_593);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_594, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_594);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_595, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_595);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_596, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_596);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_597, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_597);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_598, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_598);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBetaBinomial_v_599, AgradCcdfLogTestFixture, AgradCcdfLogBetaBinomial_v_599);

