#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<int, int, double, fvar<var>, empty, empty> type_fv_0;
typedef boost::mpl::vector<int, int, double, std::vector<fvar<var>>, empty, empty> type_fv_1;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_2;
typedef boost::mpl::vector<int, int, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_3;
typedef boost::mpl::vector<int, int, std::vector<double>, fvar<var>, empty, empty> type_fv_4;
typedef boost::mpl::vector<int, int, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_5;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_6;
typedef boost::mpl::vector<int, int, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_7;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_8;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_9;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_10;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_11;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_12;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_13;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_14;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_15;
typedef boost::mpl::vector<int, int, fvar<var>, double, empty, empty> type_fv_16;
typedef boost::mpl::vector<int, int, fvar<var>, std::vector<double>, empty, empty> type_fv_17;
typedef boost::mpl::vector<int, int, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_18;
typedef boost::mpl::vector<int, int, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_19;
typedef boost::mpl::vector<int, int, fvar<var>, fvar<var>, empty, empty> type_fv_20;
typedef boost::mpl::vector<int, int, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_21;
typedef boost::mpl::vector<int, int, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_22;
typedef boost::mpl::vector<int, int, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_23;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, double, empty, empty> type_fv_24;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_25;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_26;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_27;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_28;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_29;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_30;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_31;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_32;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_33;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_34;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_35;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_36;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_37;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_38;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_39;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_40;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_41;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_42;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_43;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_44;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_45;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_46;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_47;
typedef boost::mpl::vector<int, std::vector<int>, double, fvar<var>, empty, empty> type_fv_48;
typedef boost::mpl::vector<int, std::vector<int>, double, std::vector<fvar<var>>, empty, empty> type_fv_49;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_50;
typedef boost::mpl::vector<int, std::vector<int>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_51;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, fvar<var>, empty, empty> type_fv_52;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_53;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_54;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_55;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_56;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_57;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_58;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_59;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_60;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_61;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_62;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_63;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, double, empty, empty> type_fv_64;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, std::vector<double>, empty, empty> type_fv_65;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_66;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_67;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, fvar<var>, empty, empty> type_fv_68;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_69;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_70;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_71;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, double, empty, empty> type_fv_72;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_73;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_74;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_75;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_76;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_77;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_78;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_79;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_80;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_81;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_82;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_83;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_84;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_85;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_86;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_87;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_88;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_89;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_90;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_91;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_92;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_93;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_94;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_95;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty> type_fv_96;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty> type_fv_97;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_98;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_99;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty> type_fv_100;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_101;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_102;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_103;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_104;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_105;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_106;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_107;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_108;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_109;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_110;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_111;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty> type_fv_112;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty> type_fv_113;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_114;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_115;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty> type_fv_116;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_117;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_118;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_119;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty> type_fv_120;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_121;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_122;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_123;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_124;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_125;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_126;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_127;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_128;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_129;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_130;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_131;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_132;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_133;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_134;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_135;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_136;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_137;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_138;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_139;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_140;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_141;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_142;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_143;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty> type_fv_144;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty> type_fv_145;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_146;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_147;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty> type_fv_148;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_149;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_150;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_151;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_152;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_153;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_154;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_155;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_156;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_157;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_158;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_159;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty> type_fv_160;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty> type_fv_161;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_162;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_163;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty> type_fv_164;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_165;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_166;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_167;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty> type_fv_168;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_169;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_170;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_171;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_172;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_173;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_174;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_175;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_176;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_177;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_178;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_179;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_180;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_181;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_182;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_183;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_184;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_185;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_186;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_187;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_188;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_189;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_190;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_191;
typedef boost::mpl::vector<std::vector<int>, int, double, fvar<var>, empty, empty> type_fv_192;
typedef boost::mpl::vector<std::vector<int>, int, double, std::vector<fvar<var>>, empty, empty> type_fv_193;
typedef boost::mpl::vector<std::vector<int>, int, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_194;
typedef boost::mpl::vector<std::vector<int>, int, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_195;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, fvar<var>, empty, empty> type_fv_196;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_197;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_198;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_199;

typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_0> AgradCdfLogBetaBinomial_fv_0;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_1> AgradCdfLogBetaBinomial_fv_1;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_2> AgradCdfLogBetaBinomial_fv_2;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_3> AgradCdfLogBetaBinomial_fv_3;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_4> AgradCdfLogBetaBinomial_fv_4;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_5> AgradCdfLogBetaBinomial_fv_5;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_6> AgradCdfLogBetaBinomial_fv_6;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_7> AgradCdfLogBetaBinomial_fv_7;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_8> AgradCdfLogBetaBinomial_fv_8;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_9> AgradCdfLogBetaBinomial_fv_9;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_10> AgradCdfLogBetaBinomial_fv_10;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_11> AgradCdfLogBetaBinomial_fv_11;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_12> AgradCdfLogBetaBinomial_fv_12;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_13> AgradCdfLogBetaBinomial_fv_13;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_14> AgradCdfLogBetaBinomial_fv_14;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_15> AgradCdfLogBetaBinomial_fv_15;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_16> AgradCdfLogBetaBinomial_fv_16;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_17> AgradCdfLogBetaBinomial_fv_17;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_18> AgradCdfLogBetaBinomial_fv_18;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_19> AgradCdfLogBetaBinomial_fv_19;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_20> AgradCdfLogBetaBinomial_fv_20;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_21> AgradCdfLogBetaBinomial_fv_21;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_22> AgradCdfLogBetaBinomial_fv_22;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_23> AgradCdfLogBetaBinomial_fv_23;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_24> AgradCdfLogBetaBinomial_fv_24;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_25> AgradCdfLogBetaBinomial_fv_25;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_26> AgradCdfLogBetaBinomial_fv_26;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_27> AgradCdfLogBetaBinomial_fv_27;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_28> AgradCdfLogBetaBinomial_fv_28;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_29> AgradCdfLogBetaBinomial_fv_29;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_30> AgradCdfLogBetaBinomial_fv_30;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_31> AgradCdfLogBetaBinomial_fv_31;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_32> AgradCdfLogBetaBinomial_fv_32;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_33> AgradCdfLogBetaBinomial_fv_33;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_34> AgradCdfLogBetaBinomial_fv_34;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_35> AgradCdfLogBetaBinomial_fv_35;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_36> AgradCdfLogBetaBinomial_fv_36;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_37> AgradCdfLogBetaBinomial_fv_37;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_38> AgradCdfLogBetaBinomial_fv_38;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_39> AgradCdfLogBetaBinomial_fv_39;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_40> AgradCdfLogBetaBinomial_fv_40;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_41> AgradCdfLogBetaBinomial_fv_41;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_42> AgradCdfLogBetaBinomial_fv_42;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_43> AgradCdfLogBetaBinomial_fv_43;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_44> AgradCdfLogBetaBinomial_fv_44;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_45> AgradCdfLogBetaBinomial_fv_45;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_46> AgradCdfLogBetaBinomial_fv_46;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_47> AgradCdfLogBetaBinomial_fv_47;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_48> AgradCdfLogBetaBinomial_fv_48;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_49> AgradCdfLogBetaBinomial_fv_49;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_50> AgradCdfLogBetaBinomial_fv_50;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_51> AgradCdfLogBetaBinomial_fv_51;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_52> AgradCdfLogBetaBinomial_fv_52;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_53> AgradCdfLogBetaBinomial_fv_53;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_54> AgradCdfLogBetaBinomial_fv_54;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_55> AgradCdfLogBetaBinomial_fv_55;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_56> AgradCdfLogBetaBinomial_fv_56;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_57> AgradCdfLogBetaBinomial_fv_57;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_58> AgradCdfLogBetaBinomial_fv_58;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_59> AgradCdfLogBetaBinomial_fv_59;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_60> AgradCdfLogBetaBinomial_fv_60;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_61> AgradCdfLogBetaBinomial_fv_61;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_62> AgradCdfLogBetaBinomial_fv_62;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_63> AgradCdfLogBetaBinomial_fv_63;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_64> AgradCdfLogBetaBinomial_fv_64;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_65> AgradCdfLogBetaBinomial_fv_65;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_66> AgradCdfLogBetaBinomial_fv_66;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_67> AgradCdfLogBetaBinomial_fv_67;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_68> AgradCdfLogBetaBinomial_fv_68;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_69> AgradCdfLogBetaBinomial_fv_69;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_70> AgradCdfLogBetaBinomial_fv_70;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_71> AgradCdfLogBetaBinomial_fv_71;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_72> AgradCdfLogBetaBinomial_fv_72;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_73> AgradCdfLogBetaBinomial_fv_73;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_74> AgradCdfLogBetaBinomial_fv_74;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_75> AgradCdfLogBetaBinomial_fv_75;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_76> AgradCdfLogBetaBinomial_fv_76;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_77> AgradCdfLogBetaBinomial_fv_77;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_78> AgradCdfLogBetaBinomial_fv_78;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_79> AgradCdfLogBetaBinomial_fv_79;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_80> AgradCdfLogBetaBinomial_fv_80;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_81> AgradCdfLogBetaBinomial_fv_81;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_82> AgradCdfLogBetaBinomial_fv_82;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_83> AgradCdfLogBetaBinomial_fv_83;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_84> AgradCdfLogBetaBinomial_fv_84;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_85> AgradCdfLogBetaBinomial_fv_85;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_86> AgradCdfLogBetaBinomial_fv_86;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_87> AgradCdfLogBetaBinomial_fv_87;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_88> AgradCdfLogBetaBinomial_fv_88;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_89> AgradCdfLogBetaBinomial_fv_89;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_90> AgradCdfLogBetaBinomial_fv_90;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_91> AgradCdfLogBetaBinomial_fv_91;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_92> AgradCdfLogBetaBinomial_fv_92;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_93> AgradCdfLogBetaBinomial_fv_93;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_94> AgradCdfLogBetaBinomial_fv_94;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_95> AgradCdfLogBetaBinomial_fv_95;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_96> AgradCdfLogBetaBinomial_fv_96;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_97> AgradCdfLogBetaBinomial_fv_97;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_98> AgradCdfLogBetaBinomial_fv_98;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_99> AgradCdfLogBetaBinomial_fv_99;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_100> AgradCdfLogBetaBinomial_fv_100;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_101> AgradCdfLogBetaBinomial_fv_101;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_102> AgradCdfLogBetaBinomial_fv_102;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_103> AgradCdfLogBetaBinomial_fv_103;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_104> AgradCdfLogBetaBinomial_fv_104;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_105> AgradCdfLogBetaBinomial_fv_105;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_106> AgradCdfLogBetaBinomial_fv_106;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_107> AgradCdfLogBetaBinomial_fv_107;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_108> AgradCdfLogBetaBinomial_fv_108;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_109> AgradCdfLogBetaBinomial_fv_109;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_110> AgradCdfLogBetaBinomial_fv_110;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_111> AgradCdfLogBetaBinomial_fv_111;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_112> AgradCdfLogBetaBinomial_fv_112;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_113> AgradCdfLogBetaBinomial_fv_113;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_114> AgradCdfLogBetaBinomial_fv_114;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_115> AgradCdfLogBetaBinomial_fv_115;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_116> AgradCdfLogBetaBinomial_fv_116;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_117> AgradCdfLogBetaBinomial_fv_117;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_118> AgradCdfLogBetaBinomial_fv_118;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_119> AgradCdfLogBetaBinomial_fv_119;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_120> AgradCdfLogBetaBinomial_fv_120;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_121> AgradCdfLogBetaBinomial_fv_121;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_122> AgradCdfLogBetaBinomial_fv_122;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_123> AgradCdfLogBetaBinomial_fv_123;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_124> AgradCdfLogBetaBinomial_fv_124;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_125> AgradCdfLogBetaBinomial_fv_125;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_126> AgradCdfLogBetaBinomial_fv_126;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_127> AgradCdfLogBetaBinomial_fv_127;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_128> AgradCdfLogBetaBinomial_fv_128;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_129> AgradCdfLogBetaBinomial_fv_129;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_130> AgradCdfLogBetaBinomial_fv_130;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_131> AgradCdfLogBetaBinomial_fv_131;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_132> AgradCdfLogBetaBinomial_fv_132;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_133> AgradCdfLogBetaBinomial_fv_133;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_134> AgradCdfLogBetaBinomial_fv_134;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_135> AgradCdfLogBetaBinomial_fv_135;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_136> AgradCdfLogBetaBinomial_fv_136;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_137> AgradCdfLogBetaBinomial_fv_137;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_138> AgradCdfLogBetaBinomial_fv_138;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_139> AgradCdfLogBetaBinomial_fv_139;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_140> AgradCdfLogBetaBinomial_fv_140;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_141> AgradCdfLogBetaBinomial_fv_141;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_142> AgradCdfLogBetaBinomial_fv_142;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_143> AgradCdfLogBetaBinomial_fv_143;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_144> AgradCdfLogBetaBinomial_fv_144;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_145> AgradCdfLogBetaBinomial_fv_145;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_146> AgradCdfLogBetaBinomial_fv_146;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_147> AgradCdfLogBetaBinomial_fv_147;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_148> AgradCdfLogBetaBinomial_fv_148;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_149> AgradCdfLogBetaBinomial_fv_149;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_150> AgradCdfLogBetaBinomial_fv_150;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_151> AgradCdfLogBetaBinomial_fv_151;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_152> AgradCdfLogBetaBinomial_fv_152;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_153> AgradCdfLogBetaBinomial_fv_153;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_154> AgradCdfLogBetaBinomial_fv_154;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_155> AgradCdfLogBetaBinomial_fv_155;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_156> AgradCdfLogBetaBinomial_fv_156;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_157> AgradCdfLogBetaBinomial_fv_157;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_158> AgradCdfLogBetaBinomial_fv_158;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_159> AgradCdfLogBetaBinomial_fv_159;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_160> AgradCdfLogBetaBinomial_fv_160;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_161> AgradCdfLogBetaBinomial_fv_161;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_162> AgradCdfLogBetaBinomial_fv_162;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_163> AgradCdfLogBetaBinomial_fv_163;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_164> AgradCdfLogBetaBinomial_fv_164;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_165> AgradCdfLogBetaBinomial_fv_165;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_166> AgradCdfLogBetaBinomial_fv_166;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_167> AgradCdfLogBetaBinomial_fv_167;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_168> AgradCdfLogBetaBinomial_fv_168;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_169> AgradCdfLogBetaBinomial_fv_169;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_170> AgradCdfLogBetaBinomial_fv_170;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_171> AgradCdfLogBetaBinomial_fv_171;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_172> AgradCdfLogBetaBinomial_fv_172;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_173> AgradCdfLogBetaBinomial_fv_173;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_174> AgradCdfLogBetaBinomial_fv_174;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_175> AgradCdfLogBetaBinomial_fv_175;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_176> AgradCdfLogBetaBinomial_fv_176;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_177> AgradCdfLogBetaBinomial_fv_177;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_178> AgradCdfLogBetaBinomial_fv_178;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_179> AgradCdfLogBetaBinomial_fv_179;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_180> AgradCdfLogBetaBinomial_fv_180;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_181> AgradCdfLogBetaBinomial_fv_181;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_182> AgradCdfLogBetaBinomial_fv_182;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_183> AgradCdfLogBetaBinomial_fv_183;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_184> AgradCdfLogBetaBinomial_fv_184;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_185> AgradCdfLogBetaBinomial_fv_185;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_186> AgradCdfLogBetaBinomial_fv_186;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_187> AgradCdfLogBetaBinomial_fv_187;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_188> AgradCdfLogBetaBinomial_fv_188;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_189> AgradCdfLogBetaBinomial_fv_189;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_190> AgradCdfLogBetaBinomial_fv_190;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_191> AgradCdfLogBetaBinomial_fv_191;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_192> AgradCdfLogBetaBinomial_fv_192;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_193> AgradCdfLogBetaBinomial_fv_193;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_194> AgradCdfLogBetaBinomial_fv_194;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_195> AgradCdfLogBetaBinomial_fv_195;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_196> AgradCdfLogBetaBinomial_fv_196;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_197> AgradCdfLogBetaBinomial_fv_197;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_198> AgradCdfLogBetaBinomial_fv_198;
typedef boost::mpl::vector<AgradCdfLogBetaBinomial, type_fv_199> AgradCdfLogBetaBinomial_fv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_0, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_1, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_2, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_3, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_4, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_5, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_6, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_7, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_8, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_9, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_10, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_11, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_12, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_13, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_14, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_15, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_16, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_17, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_18, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_19, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_20, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_21, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_22, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_23, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_24, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_25, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_26, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_27, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_28, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_29, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_30, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_31, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_32, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_33, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_34, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_35, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_36, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_37, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_38, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_39, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_40, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_41, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_42, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_43, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_44, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_45, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_46, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_47, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_48, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_49, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_50, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_51, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_52, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_53, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_54, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_55, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_56, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_57, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_58, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_59, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_60, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_61, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_62, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_63, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_64, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_65, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_66, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_67, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_68, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_69, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_70, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_71, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_72, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_73, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_74, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_75, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_76, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_77, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_78, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_79, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_80, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_81, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_82, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_83, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_84, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_85, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_86, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_87, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_88, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_89, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_90, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_91, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_92, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_93, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_94, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_95, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_96, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_97, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_98, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_99, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_100, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_101, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_102, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_103, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_104, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_105, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_106, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_107, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_108, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_109, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_110, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_111, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_112, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_113, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_114, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_115, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_116, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_117, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_118, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_119, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_120, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_121, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_122, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_123, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_124, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_125, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_126, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_127, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_128, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_129, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_130, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_131, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_132, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_133, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_134, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_135, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_136, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_137, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_138, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_139, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_140, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_141, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_142, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_143, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_144, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_145, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_146, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_147, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_148, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_149, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_150, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_151, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_152, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_153, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_154, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_155, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_156, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_157, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_158, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_159, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_160, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_161, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_162, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_163, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_164, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_165, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_166, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_167, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_168, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_169, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_170, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_171, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_172, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_173, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_174, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_175, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_176, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_177, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_178, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_179, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_180, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_181, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_182, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_183, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_184, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_185, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_186, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_187, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_188, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_189, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_190, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_191, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_192, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_193, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_194, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_195, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_196, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_197, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_198, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBetaBinomial_fv_199, AgradCdfLogTestFixture, AgradCdfLogBetaBinomial_fv_199);

