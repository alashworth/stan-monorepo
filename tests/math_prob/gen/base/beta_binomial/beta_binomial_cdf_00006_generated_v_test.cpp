#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_600;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_601;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_602;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_603;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_604;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_605;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_606;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_607;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, double, empty, empty> type_v_608;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<double>, empty, empty> type_v_609;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_610;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_611;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, var, empty, empty> type_v_612;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, std::vector<var>, empty, empty> type_v_613;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_614;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_615;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, double, empty, empty> type_v_616;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<double>, empty, empty> type_v_617;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_618;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_619;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, var, empty, empty> type_v_620;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, std::vector<var>, empty, empty> type_v_621;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_622;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_623;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_624;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_625;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_626;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_627;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_628;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_629;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_630;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_631;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_632;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_633;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_634;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_635;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_636;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_637;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_638;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_639;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty> type_v_640;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty> type_v_641;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_642;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_643;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_644;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_645;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_646;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_647;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_648;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_649;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_650;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_651;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_652;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_653;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_654;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_655;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_656;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_657;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_658;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_659;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_660;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_661;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_662;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_663;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_664;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_665;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_666;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_667;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_668;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_669;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_670;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_671;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_672;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_673;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_674;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_675;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_676;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_677;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_678;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_679;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_680;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_681;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_682;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_683;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_684;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_685;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_686;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_687;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_688;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_689;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_690;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_691;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_692;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_693;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_694;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_695;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_696;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_697;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_698;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_699;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_600> AgradCdfBetaBinomial_v_600;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_601> AgradCdfBetaBinomial_v_601;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_602> AgradCdfBetaBinomial_v_602;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_603> AgradCdfBetaBinomial_v_603;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_604> AgradCdfBetaBinomial_v_604;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_605> AgradCdfBetaBinomial_v_605;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_606> AgradCdfBetaBinomial_v_606;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_607> AgradCdfBetaBinomial_v_607;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_608> AgradCdfBetaBinomial_v_608;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_609> AgradCdfBetaBinomial_v_609;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_610> AgradCdfBetaBinomial_v_610;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_611> AgradCdfBetaBinomial_v_611;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_612> AgradCdfBetaBinomial_v_612;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_613> AgradCdfBetaBinomial_v_613;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_614> AgradCdfBetaBinomial_v_614;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_615> AgradCdfBetaBinomial_v_615;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_616> AgradCdfBetaBinomial_v_616;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_617> AgradCdfBetaBinomial_v_617;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_618> AgradCdfBetaBinomial_v_618;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_619> AgradCdfBetaBinomial_v_619;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_620> AgradCdfBetaBinomial_v_620;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_621> AgradCdfBetaBinomial_v_621;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_622> AgradCdfBetaBinomial_v_622;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_623> AgradCdfBetaBinomial_v_623;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_624> AgradCdfBetaBinomial_v_624;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_625> AgradCdfBetaBinomial_v_625;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_626> AgradCdfBetaBinomial_v_626;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_627> AgradCdfBetaBinomial_v_627;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_628> AgradCdfBetaBinomial_v_628;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_629> AgradCdfBetaBinomial_v_629;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_630> AgradCdfBetaBinomial_v_630;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_631> AgradCdfBetaBinomial_v_631;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_632> AgradCdfBetaBinomial_v_632;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_633> AgradCdfBetaBinomial_v_633;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_634> AgradCdfBetaBinomial_v_634;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_635> AgradCdfBetaBinomial_v_635;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_636> AgradCdfBetaBinomial_v_636;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_637> AgradCdfBetaBinomial_v_637;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_638> AgradCdfBetaBinomial_v_638;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_639> AgradCdfBetaBinomial_v_639;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_640> AgradCdfBetaBinomial_v_640;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_641> AgradCdfBetaBinomial_v_641;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_642> AgradCdfBetaBinomial_v_642;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_643> AgradCdfBetaBinomial_v_643;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_644> AgradCdfBetaBinomial_v_644;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_645> AgradCdfBetaBinomial_v_645;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_646> AgradCdfBetaBinomial_v_646;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_647> AgradCdfBetaBinomial_v_647;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_648> AgradCdfBetaBinomial_v_648;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_649> AgradCdfBetaBinomial_v_649;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_650> AgradCdfBetaBinomial_v_650;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_651> AgradCdfBetaBinomial_v_651;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_652> AgradCdfBetaBinomial_v_652;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_653> AgradCdfBetaBinomial_v_653;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_654> AgradCdfBetaBinomial_v_654;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_655> AgradCdfBetaBinomial_v_655;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_656> AgradCdfBetaBinomial_v_656;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_657> AgradCdfBetaBinomial_v_657;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_658> AgradCdfBetaBinomial_v_658;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_659> AgradCdfBetaBinomial_v_659;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_660> AgradCdfBetaBinomial_v_660;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_661> AgradCdfBetaBinomial_v_661;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_662> AgradCdfBetaBinomial_v_662;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_663> AgradCdfBetaBinomial_v_663;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_664> AgradCdfBetaBinomial_v_664;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_665> AgradCdfBetaBinomial_v_665;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_666> AgradCdfBetaBinomial_v_666;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_667> AgradCdfBetaBinomial_v_667;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_668> AgradCdfBetaBinomial_v_668;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_669> AgradCdfBetaBinomial_v_669;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_670> AgradCdfBetaBinomial_v_670;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_671> AgradCdfBetaBinomial_v_671;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_672> AgradCdfBetaBinomial_v_672;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_673> AgradCdfBetaBinomial_v_673;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_674> AgradCdfBetaBinomial_v_674;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_675> AgradCdfBetaBinomial_v_675;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_676> AgradCdfBetaBinomial_v_676;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_677> AgradCdfBetaBinomial_v_677;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_678> AgradCdfBetaBinomial_v_678;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_679> AgradCdfBetaBinomial_v_679;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_680> AgradCdfBetaBinomial_v_680;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_681> AgradCdfBetaBinomial_v_681;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_682> AgradCdfBetaBinomial_v_682;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_683> AgradCdfBetaBinomial_v_683;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_684> AgradCdfBetaBinomial_v_684;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_685> AgradCdfBetaBinomial_v_685;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_686> AgradCdfBetaBinomial_v_686;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_687> AgradCdfBetaBinomial_v_687;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_688> AgradCdfBetaBinomial_v_688;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_689> AgradCdfBetaBinomial_v_689;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_690> AgradCdfBetaBinomial_v_690;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_691> AgradCdfBetaBinomial_v_691;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_692> AgradCdfBetaBinomial_v_692;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_693> AgradCdfBetaBinomial_v_693;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_694> AgradCdfBetaBinomial_v_694;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_695> AgradCdfBetaBinomial_v_695;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_696> AgradCdfBetaBinomial_v_696;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_697> AgradCdfBetaBinomial_v_697;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_698> AgradCdfBetaBinomial_v_698;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_699> AgradCdfBetaBinomial_v_699;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_600, AgradCdfTestFixture, AgradCdfBetaBinomial_v_600);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_601, AgradCdfTestFixture, AgradCdfBetaBinomial_v_601);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_602, AgradCdfTestFixture, AgradCdfBetaBinomial_v_602);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_603, AgradCdfTestFixture, AgradCdfBetaBinomial_v_603);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_604, AgradCdfTestFixture, AgradCdfBetaBinomial_v_604);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_605, AgradCdfTestFixture, AgradCdfBetaBinomial_v_605);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_606, AgradCdfTestFixture, AgradCdfBetaBinomial_v_606);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_607, AgradCdfTestFixture, AgradCdfBetaBinomial_v_607);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_608, AgradCdfTestFixture, AgradCdfBetaBinomial_v_608);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_609, AgradCdfTestFixture, AgradCdfBetaBinomial_v_609);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_610, AgradCdfTestFixture, AgradCdfBetaBinomial_v_610);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_611, AgradCdfTestFixture, AgradCdfBetaBinomial_v_611);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_612, AgradCdfTestFixture, AgradCdfBetaBinomial_v_612);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_613, AgradCdfTestFixture, AgradCdfBetaBinomial_v_613);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_614, AgradCdfTestFixture, AgradCdfBetaBinomial_v_614);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_615, AgradCdfTestFixture, AgradCdfBetaBinomial_v_615);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_616, AgradCdfTestFixture, AgradCdfBetaBinomial_v_616);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_617, AgradCdfTestFixture, AgradCdfBetaBinomial_v_617);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_618, AgradCdfTestFixture, AgradCdfBetaBinomial_v_618);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_619, AgradCdfTestFixture, AgradCdfBetaBinomial_v_619);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_620, AgradCdfTestFixture, AgradCdfBetaBinomial_v_620);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_621, AgradCdfTestFixture, AgradCdfBetaBinomial_v_621);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_622, AgradCdfTestFixture, AgradCdfBetaBinomial_v_622);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_623, AgradCdfTestFixture, AgradCdfBetaBinomial_v_623);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_624, AgradCdfTestFixture, AgradCdfBetaBinomial_v_624);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_625, AgradCdfTestFixture, AgradCdfBetaBinomial_v_625);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_626, AgradCdfTestFixture, AgradCdfBetaBinomial_v_626);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_627, AgradCdfTestFixture, AgradCdfBetaBinomial_v_627);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_628, AgradCdfTestFixture, AgradCdfBetaBinomial_v_628);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_629, AgradCdfTestFixture, AgradCdfBetaBinomial_v_629);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_630, AgradCdfTestFixture, AgradCdfBetaBinomial_v_630);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_631, AgradCdfTestFixture, AgradCdfBetaBinomial_v_631);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_632, AgradCdfTestFixture, AgradCdfBetaBinomial_v_632);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_633, AgradCdfTestFixture, AgradCdfBetaBinomial_v_633);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_634, AgradCdfTestFixture, AgradCdfBetaBinomial_v_634);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_635, AgradCdfTestFixture, AgradCdfBetaBinomial_v_635);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_636, AgradCdfTestFixture, AgradCdfBetaBinomial_v_636);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_637, AgradCdfTestFixture, AgradCdfBetaBinomial_v_637);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_638, AgradCdfTestFixture, AgradCdfBetaBinomial_v_638);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_639, AgradCdfTestFixture, AgradCdfBetaBinomial_v_639);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_640, AgradCdfTestFixture, AgradCdfBetaBinomial_v_640);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_641, AgradCdfTestFixture, AgradCdfBetaBinomial_v_641);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_642, AgradCdfTestFixture, AgradCdfBetaBinomial_v_642);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_643, AgradCdfTestFixture, AgradCdfBetaBinomial_v_643);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_644, AgradCdfTestFixture, AgradCdfBetaBinomial_v_644);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_645, AgradCdfTestFixture, AgradCdfBetaBinomial_v_645);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_646, AgradCdfTestFixture, AgradCdfBetaBinomial_v_646);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_647, AgradCdfTestFixture, AgradCdfBetaBinomial_v_647);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_648, AgradCdfTestFixture, AgradCdfBetaBinomial_v_648);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_649, AgradCdfTestFixture, AgradCdfBetaBinomial_v_649);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_650, AgradCdfTestFixture, AgradCdfBetaBinomial_v_650);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_651, AgradCdfTestFixture, AgradCdfBetaBinomial_v_651);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_652, AgradCdfTestFixture, AgradCdfBetaBinomial_v_652);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_653, AgradCdfTestFixture, AgradCdfBetaBinomial_v_653);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_654, AgradCdfTestFixture, AgradCdfBetaBinomial_v_654);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_655, AgradCdfTestFixture, AgradCdfBetaBinomial_v_655);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_656, AgradCdfTestFixture, AgradCdfBetaBinomial_v_656);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_657, AgradCdfTestFixture, AgradCdfBetaBinomial_v_657);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_658, AgradCdfTestFixture, AgradCdfBetaBinomial_v_658);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_659, AgradCdfTestFixture, AgradCdfBetaBinomial_v_659);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_660, AgradCdfTestFixture, AgradCdfBetaBinomial_v_660);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_661, AgradCdfTestFixture, AgradCdfBetaBinomial_v_661);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_662, AgradCdfTestFixture, AgradCdfBetaBinomial_v_662);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_663, AgradCdfTestFixture, AgradCdfBetaBinomial_v_663);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_664, AgradCdfTestFixture, AgradCdfBetaBinomial_v_664);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_665, AgradCdfTestFixture, AgradCdfBetaBinomial_v_665);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_666, AgradCdfTestFixture, AgradCdfBetaBinomial_v_666);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_667, AgradCdfTestFixture, AgradCdfBetaBinomial_v_667);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_668, AgradCdfTestFixture, AgradCdfBetaBinomial_v_668);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_669, AgradCdfTestFixture, AgradCdfBetaBinomial_v_669);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_670, AgradCdfTestFixture, AgradCdfBetaBinomial_v_670);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_671, AgradCdfTestFixture, AgradCdfBetaBinomial_v_671);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_672, AgradCdfTestFixture, AgradCdfBetaBinomial_v_672);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_673, AgradCdfTestFixture, AgradCdfBetaBinomial_v_673);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_674, AgradCdfTestFixture, AgradCdfBetaBinomial_v_674);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_675, AgradCdfTestFixture, AgradCdfBetaBinomial_v_675);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_676, AgradCdfTestFixture, AgradCdfBetaBinomial_v_676);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_677, AgradCdfTestFixture, AgradCdfBetaBinomial_v_677);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_678, AgradCdfTestFixture, AgradCdfBetaBinomial_v_678);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_679, AgradCdfTestFixture, AgradCdfBetaBinomial_v_679);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_680, AgradCdfTestFixture, AgradCdfBetaBinomial_v_680);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_681, AgradCdfTestFixture, AgradCdfBetaBinomial_v_681);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_682, AgradCdfTestFixture, AgradCdfBetaBinomial_v_682);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_683, AgradCdfTestFixture, AgradCdfBetaBinomial_v_683);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_684, AgradCdfTestFixture, AgradCdfBetaBinomial_v_684);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_685, AgradCdfTestFixture, AgradCdfBetaBinomial_v_685);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_686, AgradCdfTestFixture, AgradCdfBetaBinomial_v_686);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_687, AgradCdfTestFixture, AgradCdfBetaBinomial_v_687);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_688, AgradCdfTestFixture, AgradCdfBetaBinomial_v_688);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_689, AgradCdfTestFixture, AgradCdfBetaBinomial_v_689);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_690, AgradCdfTestFixture, AgradCdfBetaBinomial_v_690);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_691, AgradCdfTestFixture, AgradCdfBetaBinomial_v_691);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_692, AgradCdfTestFixture, AgradCdfBetaBinomial_v_692);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_693, AgradCdfTestFixture, AgradCdfBetaBinomial_v_693);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_694, AgradCdfTestFixture, AgradCdfBetaBinomial_v_694);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_695, AgradCdfTestFixture, AgradCdfBetaBinomial_v_695);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_696, AgradCdfTestFixture, AgradCdfBetaBinomial_v_696);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_697, AgradCdfTestFixture, AgradCdfBetaBinomial_v_697);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_698, AgradCdfTestFixture, AgradCdfBetaBinomial_v_698);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_699, AgradCdfTestFixture, AgradCdfBetaBinomial_v_699);

