#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, double, empty, empty> type_fv_600;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_601;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_602;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_603;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_604;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_605;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_606;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_607;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_608;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_609;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_610;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_611;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_612;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_613;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_614;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_615;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_616;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_617;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_618;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_619;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_620;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_621;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_622;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_623;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, fvar<var>, empty, empty> type_fv_624;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, std::vector<fvar<var>>, empty, empty> type_fv_625;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_626;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_627;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, fvar<var>, empty, empty> type_fv_628;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_629;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_630;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_631;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_632;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_633;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_634;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_635;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_636;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_637;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_638;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_639;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, double, empty, empty> type_fv_640;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, std::vector<double>, empty, empty> type_fv_641;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_642;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_643;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, fvar<var>, empty, empty> type_fv_644;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_645;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_646;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_647;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, double, empty, empty> type_fv_648;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_649;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_650;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_651;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_652;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_653;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_654;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_655;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_656;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_657;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_658;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_659;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_660;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_661;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_662;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_663;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_664;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_665;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_666;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_667;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_668;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_669;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_670;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_671;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty> type_fv_672;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty> type_fv_673;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_674;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_675;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty> type_fv_676;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_677;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_678;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_679;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_680;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_681;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_682;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_683;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_684;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_685;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_686;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_687;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty> type_fv_688;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty> type_fv_689;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_690;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_691;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty> type_fv_692;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_693;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_694;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_695;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty> type_fv_696;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_697;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_698;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_699;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_600> AgradDistributionsBetaBinomial_fv_600;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_601> AgradDistributionsBetaBinomial_fv_601;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_602> AgradDistributionsBetaBinomial_fv_602;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_603> AgradDistributionsBetaBinomial_fv_603;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_604> AgradDistributionsBetaBinomial_fv_604;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_605> AgradDistributionsBetaBinomial_fv_605;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_606> AgradDistributionsBetaBinomial_fv_606;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_607> AgradDistributionsBetaBinomial_fv_607;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_608> AgradDistributionsBetaBinomial_fv_608;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_609> AgradDistributionsBetaBinomial_fv_609;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_610> AgradDistributionsBetaBinomial_fv_610;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_611> AgradDistributionsBetaBinomial_fv_611;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_612> AgradDistributionsBetaBinomial_fv_612;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_613> AgradDistributionsBetaBinomial_fv_613;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_614> AgradDistributionsBetaBinomial_fv_614;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_615> AgradDistributionsBetaBinomial_fv_615;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_616> AgradDistributionsBetaBinomial_fv_616;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_617> AgradDistributionsBetaBinomial_fv_617;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_618> AgradDistributionsBetaBinomial_fv_618;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_619> AgradDistributionsBetaBinomial_fv_619;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_620> AgradDistributionsBetaBinomial_fv_620;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_621> AgradDistributionsBetaBinomial_fv_621;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_622> AgradDistributionsBetaBinomial_fv_622;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_623> AgradDistributionsBetaBinomial_fv_623;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_624> AgradDistributionsBetaBinomial_fv_624;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_625> AgradDistributionsBetaBinomial_fv_625;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_626> AgradDistributionsBetaBinomial_fv_626;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_627> AgradDistributionsBetaBinomial_fv_627;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_628> AgradDistributionsBetaBinomial_fv_628;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_629> AgradDistributionsBetaBinomial_fv_629;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_630> AgradDistributionsBetaBinomial_fv_630;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_631> AgradDistributionsBetaBinomial_fv_631;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_632> AgradDistributionsBetaBinomial_fv_632;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_633> AgradDistributionsBetaBinomial_fv_633;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_634> AgradDistributionsBetaBinomial_fv_634;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_635> AgradDistributionsBetaBinomial_fv_635;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_636> AgradDistributionsBetaBinomial_fv_636;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_637> AgradDistributionsBetaBinomial_fv_637;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_638> AgradDistributionsBetaBinomial_fv_638;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_639> AgradDistributionsBetaBinomial_fv_639;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_640> AgradDistributionsBetaBinomial_fv_640;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_641> AgradDistributionsBetaBinomial_fv_641;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_642> AgradDistributionsBetaBinomial_fv_642;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_643> AgradDistributionsBetaBinomial_fv_643;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_644> AgradDistributionsBetaBinomial_fv_644;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_645> AgradDistributionsBetaBinomial_fv_645;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_646> AgradDistributionsBetaBinomial_fv_646;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_647> AgradDistributionsBetaBinomial_fv_647;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_648> AgradDistributionsBetaBinomial_fv_648;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_649> AgradDistributionsBetaBinomial_fv_649;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_650> AgradDistributionsBetaBinomial_fv_650;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_651> AgradDistributionsBetaBinomial_fv_651;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_652> AgradDistributionsBetaBinomial_fv_652;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_653> AgradDistributionsBetaBinomial_fv_653;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_654> AgradDistributionsBetaBinomial_fv_654;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_655> AgradDistributionsBetaBinomial_fv_655;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_656> AgradDistributionsBetaBinomial_fv_656;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_657> AgradDistributionsBetaBinomial_fv_657;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_658> AgradDistributionsBetaBinomial_fv_658;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_659> AgradDistributionsBetaBinomial_fv_659;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_660> AgradDistributionsBetaBinomial_fv_660;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_661> AgradDistributionsBetaBinomial_fv_661;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_662> AgradDistributionsBetaBinomial_fv_662;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_663> AgradDistributionsBetaBinomial_fv_663;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_664> AgradDistributionsBetaBinomial_fv_664;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_665> AgradDistributionsBetaBinomial_fv_665;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_666> AgradDistributionsBetaBinomial_fv_666;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_667> AgradDistributionsBetaBinomial_fv_667;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_668> AgradDistributionsBetaBinomial_fv_668;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_669> AgradDistributionsBetaBinomial_fv_669;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_670> AgradDistributionsBetaBinomial_fv_670;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_671> AgradDistributionsBetaBinomial_fv_671;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_672> AgradDistributionsBetaBinomial_fv_672;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_673> AgradDistributionsBetaBinomial_fv_673;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_674> AgradDistributionsBetaBinomial_fv_674;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_675> AgradDistributionsBetaBinomial_fv_675;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_676> AgradDistributionsBetaBinomial_fv_676;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_677> AgradDistributionsBetaBinomial_fv_677;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_678> AgradDistributionsBetaBinomial_fv_678;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_679> AgradDistributionsBetaBinomial_fv_679;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_680> AgradDistributionsBetaBinomial_fv_680;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_681> AgradDistributionsBetaBinomial_fv_681;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_682> AgradDistributionsBetaBinomial_fv_682;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_683> AgradDistributionsBetaBinomial_fv_683;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_684> AgradDistributionsBetaBinomial_fv_684;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_685> AgradDistributionsBetaBinomial_fv_685;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_686> AgradDistributionsBetaBinomial_fv_686;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_687> AgradDistributionsBetaBinomial_fv_687;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_688> AgradDistributionsBetaBinomial_fv_688;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_689> AgradDistributionsBetaBinomial_fv_689;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_690> AgradDistributionsBetaBinomial_fv_690;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_691> AgradDistributionsBetaBinomial_fv_691;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_692> AgradDistributionsBetaBinomial_fv_692;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_693> AgradDistributionsBetaBinomial_fv_693;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_694> AgradDistributionsBetaBinomial_fv_694;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_695> AgradDistributionsBetaBinomial_fv_695;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_696> AgradDistributionsBetaBinomial_fv_696;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_697> AgradDistributionsBetaBinomial_fv_697;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_698> AgradDistributionsBetaBinomial_fv_698;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_699> AgradDistributionsBetaBinomial_fv_699;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_600, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_600);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_601, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_601);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_602, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_602);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_603, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_603);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_604, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_604);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_605, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_605);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_606, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_606);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_607, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_607);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_608, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_608);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_609, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_609);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_610, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_610);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_611, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_611);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_612, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_612);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_613, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_613);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_614, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_614);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_615, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_615);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_616, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_616);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_617, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_617);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_618, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_618);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_619, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_619);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_620, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_620);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_621, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_621);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_622, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_622);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_623, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_623);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_624, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_624);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_625, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_625);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_626, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_626);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_627, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_627);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_628, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_628);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_629, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_629);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_630, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_630);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_631, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_631);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_632, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_632);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_633, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_633);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_634, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_634);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_635, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_635);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_636, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_636);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_637, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_637);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_638, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_638);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_639, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_639);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_640, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_640);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_641, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_641);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_642, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_642);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_643, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_643);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_644, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_644);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_645, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_645);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_646, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_646);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_647, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_647);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_648, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_648);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_649, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_649);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_650, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_650);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_651, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_651);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_652, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_652);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_653, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_653);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_654, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_654);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_655, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_655);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_656, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_656);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_657, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_657);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_658, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_658);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_659, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_659);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_660, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_660);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_661, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_661);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_662, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_662);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_663, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_663);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_664, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_664);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_665, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_665);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_666, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_666);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_667, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_667);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_668, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_668);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_669, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_669);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_670, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_670);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_671, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_671);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_672, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_672);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_673, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_673);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_674, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_674);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_675, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_675);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_676, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_676);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_677, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_677);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_678, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_678);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_679, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_679);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_680, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_680);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_681, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_681);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_682, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_682);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_683, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_683);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_684, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_684);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_685, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_685);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_686, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_686);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_687, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_687);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_688, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_688);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_689, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_689);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_690, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_690);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_691, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_691);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_692, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_692);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_693, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_693);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_694, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_694);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_695, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_695);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_696, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_696);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_697, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_697);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_698, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_698);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_699, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_699);

