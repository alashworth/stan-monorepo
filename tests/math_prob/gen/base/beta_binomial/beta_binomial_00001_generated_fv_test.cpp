#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta_binomial/beta_binomial_test.hpp>

typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_200;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_201;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_202;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_203;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_204;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_205;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_206;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_207;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, double, empty, empty> type_fv_208;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, std::vector<double>, empty, empty> type_fv_209;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_210;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_211;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, fvar<var>, empty, empty> type_fv_212;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_213;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_214;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_215;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, double, empty, empty> type_fv_216;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_217;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_218;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_219;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_220;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_221;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_222;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_223;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_224;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_225;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_226;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_227;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_228;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_229;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_230;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_231;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_232;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_233;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_234;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_235;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_236;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_237;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_238;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_239;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, fvar<var>, empty, empty> type_fv_240;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, std::vector<fvar<var>>, empty, empty> type_fv_241;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_242;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_243;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, fvar<var>, empty, empty> type_fv_244;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_245;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_246;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_247;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_248;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_249;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_250;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_251;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_252;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_253;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_254;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_255;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, double, empty, empty> type_fv_256;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, std::vector<double>, empty, empty> type_fv_257;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_258;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_259;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, fvar<var>, empty, empty> type_fv_260;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_261;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_262;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_263;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, double, empty, empty> type_fv_264;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_265;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_266;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_267;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_268;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_269;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_270;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_271;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_272;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_273;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_274;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_275;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_276;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_277;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_278;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_279;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_280;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_281;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_282;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_283;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_284;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_285;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_286;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_287;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty> type_fv_288;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty> type_fv_289;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_290;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_291;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty> type_fv_292;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_293;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_294;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_295;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_296;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_297;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_298;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_299;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_300;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_301;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_302;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_303;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty> type_fv_304;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty> type_fv_305;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_306;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_307;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty> type_fv_308;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_309;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_310;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_311;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty> type_fv_312;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_313;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_314;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_315;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_316;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_317;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_318;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_319;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_320;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_321;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_322;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_323;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_324;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_325;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_326;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_327;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_328;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_329;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_330;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_331;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_332;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_333;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_334;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_335;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty> type_fv_336;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty> type_fv_337;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_338;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_339;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty> type_fv_340;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_341;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_342;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_343;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_344;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_345;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_346;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_347;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_348;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_349;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_350;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_351;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty> type_fv_352;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty> type_fv_353;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_354;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_355;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty> type_fv_356;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty> type_fv_357;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_358;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_359;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty> type_fv_360;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty> type_fv_361;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_362;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_363;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty> type_fv_364;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty> type_fv_365;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_366;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_367;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty> type_fv_368;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_fv_369;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_370;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_371;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_372;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_373;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_374;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_375;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty> type_fv_376;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_fv_377;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_fv_378;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_fv_379;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_380;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_381;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_382;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_383;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, fvar<var>, empty, empty> type_fv_384;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, std::vector<fvar<var>>, empty, empty> type_fv_385;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_386;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_387;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, fvar<var>, empty, empty> type_fv_388;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, std::vector<fvar<var>>, empty, empty> type_fv_389;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_390;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_391;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty> type_fv_392;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty> type_fv_393;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_394;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_395;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty> type_fv_396;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty> type_fv_397;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty> type_fv_398;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty> type_fv_399;

typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_200> AgradDistributionsBetaBinomial_fv_200;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_201> AgradDistributionsBetaBinomial_fv_201;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_202> AgradDistributionsBetaBinomial_fv_202;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_203> AgradDistributionsBetaBinomial_fv_203;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_204> AgradDistributionsBetaBinomial_fv_204;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_205> AgradDistributionsBetaBinomial_fv_205;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_206> AgradDistributionsBetaBinomial_fv_206;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_207> AgradDistributionsBetaBinomial_fv_207;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_208> AgradDistributionsBetaBinomial_fv_208;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_209> AgradDistributionsBetaBinomial_fv_209;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_210> AgradDistributionsBetaBinomial_fv_210;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_211> AgradDistributionsBetaBinomial_fv_211;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_212> AgradDistributionsBetaBinomial_fv_212;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_213> AgradDistributionsBetaBinomial_fv_213;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_214> AgradDistributionsBetaBinomial_fv_214;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_215> AgradDistributionsBetaBinomial_fv_215;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_216> AgradDistributionsBetaBinomial_fv_216;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_217> AgradDistributionsBetaBinomial_fv_217;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_218> AgradDistributionsBetaBinomial_fv_218;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_219> AgradDistributionsBetaBinomial_fv_219;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_220> AgradDistributionsBetaBinomial_fv_220;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_221> AgradDistributionsBetaBinomial_fv_221;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_222> AgradDistributionsBetaBinomial_fv_222;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_223> AgradDistributionsBetaBinomial_fv_223;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_224> AgradDistributionsBetaBinomial_fv_224;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_225> AgradDistributionsBetaBinomial_fv_225;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_226> AgradDistributionsBetaBinomial_fv_226;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_227> AgradDistributionsBetaBinomial_fv_227;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_228> AgradDistributionsBetaBinomial_fv_228;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_229> AgradDistributionsBetaBinomial_fv_229;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_230> AgradDistributionsBetaBinomial_fv_230;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_231> AgradDistributionsBetaBinomial_fv_231;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_232> AgradDistributionsBetaBinomial_fv_232;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_233> AgradDistributionsBetaBinomial_fv_233;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_234> AgradDistributionsBetaBinomial_fv_234;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_235> AgradDistributionsBetaBinomial_fv_235;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_236> AgradDistributionsBetaBinomial_fv_236;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_237> AgradDistributionsBetaBinomial_fv_237;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_238> AgradDistributionsBetaBinomial_fv_238;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_239> AgradDistributionsBetaBinomial_fv_239;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_240> AgradDistributionsBetaBinomial_fv_240;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_241> AgradDistributionsBetaBinomial_fv_241;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_242> AgradDistributionsBetaBinomial_fv_242;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_243> AgradDistributionsBetaBinomial_fv_243;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_244> AgradDistributionsBetaBinomial_fv_244;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_245> AgradDistributionsBetaBinomial_fv_245;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_246> AgradDistributionsBetaBinomial_fv_246;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_247> AgradDistributionsBetaBinomial_fv_247;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_248> AgradDistributionsBetaBinomial_fv_248;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_249> AgradDistributionsBetaBinomial_fv_249;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_250> AgradDistributionsBetaBinomial_fv_250;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_251> AgradDistributionsBetaBinomial_fv_251;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_252> AgradDistributionsBetaBinomial_fv_252;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_253> AgradDistributionsBetaBinomial_fv_253;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_254> AgradDistributionsBetaBinomial_fv_254;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_255> AgradDistributionsBetaBinomial_fv_255;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_256> AgradDistributionsBetaBinomial_fv_256;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_257> AgradDistributionsBetaBinomial_fv_257;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_258> AgradDistributionsBetaBinomial_fv_258;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_259> AgradDistributionsBetaBinomial_fv_259;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_260> AgradDistributionsBetaBinomial_fv_260;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_261> AgradDistributionsBetaBinomial_fv_261;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_262> AgradDistributionsBetaBinomial_fv_262;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_263> AgradDistributionsBetaBinomial_fv_263;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_264> AgradDistributionsBetaBinomial_fv_264;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_265> AgradDistributionsBetaBinomial_fv_265;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_266> AgradDistributionsBetaBinomial_fv_266;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_267> AgradDistributionsBetaBinomial_fv_267;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_268> AgradDistributionsBetaBinomial_fv_268;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_269> AgradDistributionsBetaBinomial_fv_269;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_270> AgradDistributionsBetaBinomial_fv_270;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_271> AgradDistributionsBetaBinomial_fv_271;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_272> AgradDistributionsBetaBinomial_fv_272;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_273> AgradDistributionsBetaBinomial_fv_273;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_274> AgradDistributionsBetaBinomial_fv_274;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_275> AgradDistributionsBetaBinomial_fv_275;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_276> AgradDistributionsBetaBinomial_fv_276;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_277> AgradDistributionsBetaBinomial_fv_277;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_278> AgradDistributionsBetaBinomial_fv_278;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_279> AgradDistributionsBetaBinomial_fv_279;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_280> AgradDistributionsBetaBinomial_fv_280;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_281> AgradDistributionsBetaBinomial_fv_281;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_282> AgradDistributionsBetaBinomial_fv_282;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_283> AgradDistributionsBetaBinomial_fv_283;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_284> AgradDistributionsBetaBinomial_fv_284;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_285> AgradDistributionsBetaBinomial_fv_285;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_286> AgradDistributionsBetaBinomial_fv_286;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_287> AgradDistributionsBetaBinomial_fv_287;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_288> AgradDistributionsBetaBinomial_fv_288;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_289> AgradDistributionsBetaBinomial_fv_289;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_290> AgradDistributionsBetaBinomial_fv_290;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_291> AgradDistributionsBetaBinomial_fv_291;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_292> AgradDistributionsBetaBinomial_fv_292;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_293> AgradDistributionsBetaBinomial_fv_293;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_294> AgradDistributionsBetaBinomial_fv_294;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_295> AgradDistributionsBetaBinomial_fv_295;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_296> AgradDistributionsBetaBinomial_fv_296;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_297> AgradDistributionsBetaBinomial_fv_297;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_298> AgradDistributionsBetaBinomial_fv_298;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_299> AgradDistributionsBetaBinomial_fv_299;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_300> AgradDistributionsBetaBinomial_fv_300;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_301> AgradDistributionsBetaBinomial_fv_301;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_302> AgradDistributionsBetaBinomial_fv_302;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_303> AgradDistributionsBetaBinomial_fv_303;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_304> AgradDistributionsBetaBinomial_fv_304;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_305> AgradDistributionsBetaBinomial_fv_305;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_306> AgradDistributionsBetaBinomial_fv_306;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_307> AgradDistributionsBetaBinomial_fv_307;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_308> AgradDistributionsBetaBinomial_fv_308;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_309> AgradDistributionsBetaBinomial_fv_309;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_310> AgradDistributionsBetaBinomial_fv_310;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_311> AgradDistributionsBetaBinomial_fv_311;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_312> AgradDistributionsBetaBinomial_fv_312;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_313> AgradDistributionsBetaBinomial_fv_313;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_314> AgradDistributionsBetaBinomial_fv_314;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_315> AgradDistributionsBetaBinomial_fv_315;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_316> AgradDistributionsBetaBinomial_fv_316;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_317> AgradDistributionsBetaBinomial_fv_317;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_318> AgradDistributionsBetaBinomial_fv_318;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_319> AgradDistributionsBetaBinomial_fv_319;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_320> AgradDistributionsBetaBinomial_fv_320;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_321> AgradDistributionsBetaBinomial_fv_321;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_322> AgradDistributionsBetaBinomial_fv_322;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_323> AgradDistributionsBetaBinomial_fv_323;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_324> AgradDistributionsBetaBinomial_fv_324;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_325> AgradDistributionsBetaBinomial_fv_325;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_326> AgradDistributionsBetaBinomial_fv_326;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_327> AgradDistributionsBetaBinomial_fv_327;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_328> AgradDistributionsBetaBinomial_fv_328;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_329> AgradDistributionsBetaBinomial_fv_329;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_330> AgradDistributionsBetaBinomial_fv_330;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_331> AgradDistributionsBetaBinomial_fv_331;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_332> AgradDistributionsBetaBinomial_fv_332;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_333> AgradDistributionsBetaBinomial_fv_333;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_334> AgradDistributionsBetaBinomial_fv_334;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_335> AgradDistributionsBetaBinomial_fv_335;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_336> AgradDistributionsBetaBinomial_fv_336;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_337> AgradDistributionsBetaBinomial_fv_337;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_338> AgradDistributionsBetaBinomial_fv_338;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_339> AgradDistributionsBetaBinomial_fv_339;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_340> AgradDistributionsBetaBinomial_fv_340;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_341> AgradDistributionsBetaBinomial_fv_341;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_342> AgradDistributionsBetaBinomial_fv_342;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_343> AgradDistributionsBetaBinomial_fv_343;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_344> AgradDistributionsBetaBinomial_fv_344;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_345> AgradDistributionsBetaBinomial_fv_345;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_346> AgradDistributionsBetaBinomial_fv_346;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_347> AgradDistributionsBetaBinomial_fv_347;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_348> AgradDistributionsBetaBinomial_fv_348;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_349> AgradDistributionsBetaBinomial_fv_349;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_350> AgradDistributionsBetaBinomial_fv_350;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_351> AgradDistributionsBetaBinomial_fv_351;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_352> AgradDistributionsBetaBinomial_fv_352;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_353> AgradDistributionsBetaBinomial_fv_353;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_354> AgradDistributionsBetaBinomial_fv_354;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_355> AgradDistributionsBetaBinomial_fv_355;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_356> AgradDistributionsBetaBinomial_fv_356;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_357> AgradDistributionsBetaBinomial_fv_357;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_358> AgradDistributionsBetaBinomial_fv_358;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_359> AgradDistributionsBetaBinomial_fv_359;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_360> AgradDistributionsBetaBinomial_fv_360;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_361> AgradDistributionsBetaBinomial_fv_361;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_362> AgradDistributionsBetaBinomial_fv_362;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_363> AgradDistributionsBetaBinomial_fv_363;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_364> AgradDistributionsBetaBinomial_fv_364;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_365> AgradDistributionsBetaBinomial_fv_365;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_366> AgradDistributionsBetaBinomial_fv_366;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_367> AgradDistributionsBetaBinomial_fv_367;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_368> AgradDistributionsBetaBinomial_fv_368;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_369> AgradDistributionsBetaBinomial_fv_369;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_370> AgradDistributionsBetaBinomial_fv_370;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_371> AgradDistributionsBetaBinomial_fv_371;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_372> AgradDistributionsBetaBinomial_fv_372;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_373> AgradDistributionsBetaBinomial_fv_373;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_374> AgradDistributionsBetaBinomial_fv_374;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_375> AgradDistributionsBetaBinomial_fv_375;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_376> AgradDistributionsBetaBinomial_fv_376;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_377> AgradDistributionsBetaBinomial_fv_377;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_378> AgradDistributionsBetaBinomial_fv_378;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_379> AgradDistributionsBetaBinomial_fv_379;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_380> AgradDistributionsBetaBinomial_fv_380;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_381> AgradDistributionsBetaBinomial_fv_381;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_382> AgradDistributionsBetaBinomial_fv_382;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_383> AgradDistributionsBetaBinomial_fv_383;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_384> AgradDistributionsBetaBinomial_fv_384;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_385> AgradDistributionsBetaBinomial_fv_385;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_386> AgradDistributionsBetaBinomial_fv_386;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_387> AgradDistributionsBetaBinomial_fv_387;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_388> AgradDistributionsBetaBinomial_fv_388;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_389> AgradDistributionsBetaBinomial_fv_389;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_390> AgradDistributionsBetaBinomial_fv_390;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_391> AgradDistributionsBetaBinomial_fv_391;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_392> AgradDistributionsBetaBinomial_fv_392;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_393> AgradDistributionsBetaBinomial_fv_393;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_394> AgradDistributionsBetaBinomial_fv_394;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_395> AgradDistributionsBetaBinomial_fv_395;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_396> AgradDistributionsBetaBinomial_fv_396;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_397> AgradDistributionsBetaBinomial_fv_397;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_398> AgradDistributionsBetaBinomial_fv_398;
typedef boost::mpl::vector<AgradDistributionsBetaBinomial, type_fv_399> AgradDistributionsBetaBinomial_fv_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_200, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_201, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_202, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_203, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_204, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_205, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_206, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_207, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_208, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_209, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_210, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_211, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_212, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_213, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_214, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_215, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_216, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_217, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_218, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_219, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_220, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_221, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_222, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_223, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_224, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_225, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_226, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_227, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_228, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_229, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_230, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_231, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_232, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_233, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_234, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_235, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_236, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_237, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_238, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_239, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_240, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_241, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_242, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_243, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_244, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_245, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_246, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_247, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_248, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_249, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_250, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_251, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_252, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_253, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_254, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_255, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_256, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_257, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_258, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_259, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_260, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_261, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_262, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_263, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_264, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_265, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_266, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_267, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_268, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_269, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_270, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_271, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_272, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_273, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_274, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_275, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_276, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_277, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_278, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_279, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_280, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_281, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_282, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_283, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_284, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_285, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_286, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_287, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_288, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_289, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_290, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_291, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_292, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_293, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_294, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_295, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_296, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_297, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_298, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_299, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_300, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_301, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_302, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_303, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_304, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_305, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_306, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_307, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_308, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_309, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_310, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_311, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_312, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_313, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_314, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_315, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_316, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_317, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_318, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_319, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_320, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_321, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_322, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_323, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_324, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_325, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_326, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_327, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_328, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_329, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_330, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_331, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_332, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_333, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_334, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_335, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_336, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_337, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_338, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_339, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_340, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_341, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_342, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_343, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_344, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_345, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_346, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_347, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_348, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_349, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_350, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_351, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_352, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_353, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_354, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_355, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_356, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_357, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_358, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_359, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_360, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_361, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_362, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_363, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_364, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_365, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_366, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_367, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_368, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_369, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_370, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_371, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_372, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_373, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_374, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_375, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_376, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_377, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_378, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_379, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_380, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_381, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_382, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_383, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_384, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_385, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_386, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_387, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_388, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_389, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_390, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_391, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_392, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_393, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_394, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_395, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_396, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_397, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_398, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBetaBinomial_fv_399, AgradDistributionTestFixture, AgradDistributionsBetaBinomial_fv_399);

