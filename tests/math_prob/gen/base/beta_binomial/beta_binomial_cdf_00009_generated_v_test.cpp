#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta_binomial/beta_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty> type_v_900;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty> type_v_901;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_902;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_903;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty> type_v_904;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty> type_v_905;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_906;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_907;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty> type_v_908;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty> type_v_909;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_910;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_911;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_912;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_913;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_914;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_915;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_916;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_917;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_918;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_919;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_920;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_921;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_922;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_923;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_924;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_925;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_926;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_927;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty> type_v_928;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty> type_v_929;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_930;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_931;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty> type_v_932;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty> type_v_933;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_934;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_935;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty> type_v_936;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty> type_v_937;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_938;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_939;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty> type_v_940;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty> type_v_941;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_942;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_943;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty> type_v_944;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_945;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_946;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_947;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty> type_v_948;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_949;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_950;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_951;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty> type_v_952;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_953;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_954;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_955;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty> type_v_956;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_957;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_958;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_959;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty> type_v_960;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty> type_v_961;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_962;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_963;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty> type_v_964;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty> type_v_965;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_966;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_967;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty> type_v_968;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty> type_v_969;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_970;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_971;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty> type_v_972;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty> type_v_973;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_974;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_975;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty> type_v_976;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty> type_v_977;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_978;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_979;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty> type_v_980;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty> type_v_981;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_982;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_983;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty> type_v_984;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty> type_v_985;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_986;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_987;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty> type_v_988;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty> type_v_989;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_990;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_991;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, double, empty, empty> type_v_992;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty> type_v_993;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty> type_v_994;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty> type_v_995;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, var, empty, empty> type_v_996;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty> type_v_997;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty> type_v_998;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty> type_v_999;

typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_900> AgradCdfBetaBinomial_v_900;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_901> AgradCdfBetaBinomial_v_901;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_902> AgradCdfBetaBinomial_v_902;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_903> AgradCdfBetaBinomial_v_903;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_904> AgradCdfBetaBinomial_v_904;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_905> AgradCdfBetaBinomial_v_905;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_906> AgradCdfBetaBinomial_v_906;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_907> AgradCdfBetaBinomial_v_907;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_908> AgradCdfBetaBinomial_v_908;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_909> AgradCdfBetaBinomial_v_909;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_910> AgradCdfBetaBinomial_v_910;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_911> AgradCdfBetaBinomial_v_911;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_912> AgradCdfBetaBinomial_v_912;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_913> AgradCdfBetaBinomial_v_913;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_914> AgradCdfBetaBinomial_v_914;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_915> AgradCdfBetaBinomial_v_915;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_916> AgradCdfBetaBinomial_v_916;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_917> AgradCdfBetaBinomial_v_917;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_918> AgradCdfBetaBinomial_v_918;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_919> AgradCdfBetaBinomial_v_919;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_920> AgradCdfBetaBinomial_v_920;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_921> AgradCdfBetaBinomial_v_921;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_922> AgradCdfBetaBinomial_v_922;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_923> AgradCdfBetaBinomial_v_923;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_924> AgradCdfBetaBinomial_v_924;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_925> AgradCdfBetaBinomial_v_925;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_926> AgradCdfBetaBinomial_v_926;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_927> AgradCdfBetaBinomial_v_927;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_928> AgradCdfBetaBinomial_v_928;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_929> AgradCdfBetaBinomial_v_929;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_930> AgradCdfBetaBinomial_v_930;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_931> AgradCdfBetaBinomial_v_931;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_932> AgradCdfBetaBinomial_v_932;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_933> AgradCdfBetaBinomial_v_933;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_934> AgradCdfBetaBinomial_v_934;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_935> AgradCdfBetaBinomial_v_935;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_936> AgradCdfBetaBinomial_v_936;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_937> AgradCdfBetaBinomial_v_937;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_938> AgradCdfBetaBinomial_v_938;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_939> AgradCdfBetaBinomial_v_939;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_940> AgradCdfBetaBinomial_v_940;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_941> AgradCdfBetaBinomial_v_941;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_942> AgradCdfBetaBinomial_v_942;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_943> AgradCdfBetaBinomial_v_943;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_944> AgradCdfBetaBinomial_v_944;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_945> AgradCdfBetaBinomial_v_945;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_946> AgradCdfBetaBinomial_v_946;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_947> AgradCdfBetaBinomial_v_947;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_948> AgradCdfBetaBinomial_v_948;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_949> AgradCdfBetaBinomial_v_949;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_950> AgradCdfBetaBinomial_v_950;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_951> AgradCdfBetaBinomial_v_951;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_952> AgradCdfBetaBinomial_v_952;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_953> AgradCdfBetaBinomial_v_953;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_954> AgradCdfBetaBinomial_v_954;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_955> AgradCdfBetaBinomial_v_955;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_956> AgradCdfBetaBinomial_v_956;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_957> AgradCdfBetaBinomial_v_957;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_958> AgradCdfBetaBinomial_v_958;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_959> AgradCdfBetaBinomial_v_959;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_960> AgradCdfBetaBinomial_v_960;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_961> AgradCdfBetaBinomial_v_961;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_962> AgradCdfBetaBinomial_v_962;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_963> AgradCdfBetaBinomial_v_963;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_964> AgradCdfBetaBinomial_v_964;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_965> AgradCdfBetaBinomial_v_965;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_966> AgradCdfBetaBinomial_v_966;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_967> AgradCdfBetaBinomial_v_967;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_968> AgradCdfBetaBinomial_v_968;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_969> AgradCdfBetaBinomial_v_969;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_970> AgradCdfBetaBinomial_v_970;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_971> AgradCdfBetaBinomial_v_971;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_972> AgradCdfBetaBinomial_v_972;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_973> AgradCdfBetaBinomial_v_973;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_974> AgradCdfBetaBinomial_v_974;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_975> AgradCdfBetaBinomial_v_975;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_976> AgradCdfBetaBinomial_v_976;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_977> AgradCdfBetaBinomial_v_977;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_978> AgradCdfBetaBinomial_v_978;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_979> AgradCdfBetaBinomial_v_979;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_980> AgradCdfBetaBinomial_v_980;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_981> AgradCdfBetaBinomial_v_981;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_982> AgradCdfBetaBinomial_v_982;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_983> AgradCdfBetaBinomial_v_983;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_984> AgradCdfBetaBinomial_v_984;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_985> AgradCdfBetaBinomial_v_985;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_986> AgradCdfBetaBinomial_v_986;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_987> AgradCdfBetaBinomial_v_987;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_988> AgradCdfBetaBinomial_v_988;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_989> AgradCdfBetaBinomial_v_989;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_990> AgradCdfBetaBinomial_v_990;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_991> AgradCdfBetaBinomial_v_991;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_992> AgradCdfBetaBinomial_v_992;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_993> AgradCdfBetaBinomial_v_993;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_994> AgradCdfBetaBinomial_v_994;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_995> AgradCdfBetaBinomial_v_995;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_996> AgradCdfBetaBinomial_v_996;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_997> AgradCdfBetaBinomial_v_997;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_998> AgradCdfBetaBinomial_v_998;
typedef boost::mpl::vector<AgradCdfBetaBinomial, type_v_999> AgradCdfBetaBinomial_v_999;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_900, AgradCdfTestFixture, AgradCdfBetaBinomial_v_900);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_901, AgradCdfTestFixture, AgradCdfBetaBinomial_v_901);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_902, AgradCdfTestFixture, AgradCdfBetaBinomial_v_902);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_903, AgradCdfTestFixture, AgradCdfBetaBinomial_v_903);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_904, AgradCdfTestFixture, AgradCdfBetaBinomial_v_904);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_905, AgradCdfTestFixture, AgradCdfBetaBinomial_v_905);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_906, AgradCdfTestFixture, AgradCdfBetaBinomial_v_906);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_907, AgradCdfTestFixture, AgradCdfBetaBinomial_v_907);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_908, AgradCdfTestFixture, AgradCdfBetaBinomial_v_908);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_909, AgradCdfTestFixture, AgradCdfBetaBinomial_v_909);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_910, AgradCdfTestFixture, AgradCdfBetaBinomial_v_910);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_911, AgradCdfTestFixture, AgradCdfBetaBinomial_v_911);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_912, AgradCdfTestFixture, AgradCdfBetaBinomial_v_912);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_913, AgradCdfTestFixture, AgradCdfBetaBinomial_v_913);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_914, AgradCdfTestFixture, AgradCdfBetaBinomial_v_914);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_915, AgradCdfTestFixture, AgradCdfBetaBinomial_v_915);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_916, AgradCdfTestFixture, AgradCdfBetaBinomial_v_916);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_917, AgradCdfTestFixture, AgradCdfBetaBinomial_v_917);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_918, AgradCdfTestFixture, AgradCdfBetaBinomial_v_918);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_919, AgradCdfTestFixture, AgradCdfBetaBinomial_v_919);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_920, AgradCdfTestFixture, AgradCdfBetaBinomial_v_920);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_921, AgradCdfTestFixture, AgradCdfBetaBinomial_v_921);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_922, AgradCdfTestFixture, AgradCdfBetaBinomial_v_922);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_923, AgradCdfTestFixture, AgradCdfBetaBinomial_v_923);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_924, AgradCdfTestFixture, AgradCdfBetaBinomial_v_924);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_925, AgradCdfTestFixture, AgradCdfBetaBinomial_v_925);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_926, AgradCdfTestFixture, AgradCdfBetaBinomial_v_926);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_927, AgradCdfTestFixture, AgradCdfBetaBinomial_v_927);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_928, AgradCdfTestFixture, AgradCdfBetaBinomial_v_928);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_929, AgradCdfTestFixture, AgradCdfBetaBinomial_v_929);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_930, AgradCdfTestFixture, AgradCdfBetaBinomial_v_930);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_931, AgradCdfTestFixture, AgradCdfBetaBinomial_v_931);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_932, AgradCdfTestFixture, AgradCdfBetaBinomial_v_932);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_933, AgradCdfTestFixture, AgradCdfBetaBinomial_v_933);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_934, AgradCdfTestFixture, AgradCdfBetaBinomial_v_934);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_935, AgradCdfTestFixture, AgradCdfBetaBinomial_v_935);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_936, AgradCdfTestFixture, AgradCdfBetaBinomial_v_936);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_937, AgradCdfTestFixture, AgradCdfBetaBinomial_v_937);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_938, AgradCdfTestFixture, AgradCdfBetaBinomial_v_938);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_939, AgradCdfTestFixture, AgradCdfBetaBinomial_v_939);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_940, AgradCdfTestFixture, AgradCdfBetaBinomial_v_940);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_941, AgradCdfTestFixture, AgradCdfBetaBinomial_v_941);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_942, AgradCdfTestFixture, AgradCdfBetaBinomial_v_942);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_943, AgradCdfTestFixture, AgradCdfBetaBinomial_v_943);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_944, AgradCdfTestFixture, AgradCdfBetaBinomial_v_944);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_945, AgradCdfTestFixture, AgradCdfBetaBinomial_v_945);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_946, AgradCdfTestFixture, AgradCdfBetaBinomial_v_946);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_947, AgradCdfTestFixture, AgradCdfBetaBinomial_v_947);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_948, AgradCdfTestFixture, AgradCdfBetaBinomial_v_948);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_949, AgradCdfTestFixture, AgradCdfBetaBinomial_v_949);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_950, AgradCdfTestFixture, AgradCdfBetaBinomial_v_950);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_951, AgradCdfTestFixture, AgradCdfBetaBinomial_v_951);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_952, AgradCdfTestFixture, AgradCdfBetaBinomial_v_952);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_953, AgradCdfTestFixture, AgradCdfBetaBinomial_v_953);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_954, AgradCdfTestFixture, AgradCdfBetaBinomial_v_954);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_955, AgradCdfTestFixture, AgradCdfBetaBinomial_v_955);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_956, AgradCdfTestFixture, AgradCdfBetaBinomial_v_956);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_957, AgradCdfTestFixture, AgradCdfBetaBinomial_v_957);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_958, AgradCdfTestFixture, AgradCdfBetaBinomial_v_958);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_959, AgradCdfTestFixture, AgradCdfBetaBinomial_v_959);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_960, AgradCdfTestFixture, AgradCdfBetaBinomial_v_960);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_961, AgradCdfTestFixture, AgradCdfBetaBinomial_v_961);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_962, AgradCdfTestFixture, AgradCdfBetaBinomial_v_962);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_963, AgradCdfTestFixture, AgradCdfBetaBinomial_v_963);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_964, AgradCdfTestFixture, AgradCdfBetaBinomial_v_964);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_965, AgradCdfTestFixture, AgradCdfBetaBinomial_v_965);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_966, AgradCdfTestFixture, AgradCdfBetaBinomial_v_966);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_967, AgradCdfTestFixture, AgradCdfBetaBinomial_v_967);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_968, AgradCdfTestFixture, AgradCdfBetaBinomial_v_968);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_969, AgradCdfTestFixture, AgradCdfBetaBinomial_v_969);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_970, AgradCdfTestFixture, AgradCdfBetaBinomial_v_970);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_971, AgradCdfTestFixture, AgradCdfBetaBinomial_v_971);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_972, AgradCdfTestFixture, AgradCdfBetaBinomial_v_972);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_973, AgradCdfTestFixture, AgradCdfBetaBinomial_v_973);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_974, AgradCdfTestFixture, AgradCdfBetaBinomial_v_974);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_975, AgradCdfTestFixture, AgradCdfBetaBinomial_v_975);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_976, AgradCdfTestFixture, AgradCdfBetaBinomial_v_976);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_977, AgradCdfTestFixture, AgradCdfBetaBinomial_v_977);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_978, AgradCdfTestFixture, AgradCdfBetaBinomial_v_978);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_979, AgradCdfTestFixture, AgradCdfBetaBinomial_v_979);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_980, AgradCdfTestFixture, AgradCdfBetaBinomial_v_980);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_981, AgradCdfTestFixture, AgradCdfBetaBinomial_v_981);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_982, AgradCdfTestFixture, AgradCdfBetaBinomial_v_982);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_983, AgradCdfTestFixture, AgradCdfBetaBinomial_v_983);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_984, AgradCdfTestFixture, AgradCdfBetaBinomial_v_984);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_985, AgradCdfTestFixture, AgradCdfBetaBinomial_v_985);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_986, AgradCdfTestFixture, AgradCdfBetaBinomial_v_986);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_987, AgradCdfTestFixture, AgradCdfBetaBinomial_v_987);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_988, AgradCdfTestFixture, AgradCdfBetaBinomial_v_988);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_989, AgradCdfTestFixture, AgradCdfBetaBinomial_v_989);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_990, AgradCdfTestFixture, AgradCdfBetaBinomial_v_990);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_991, AgradCdfTestFixture, AgradCdfBetaBinomial_v_991);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_992, AgradCdfTestFixture, AgradCdfBetaBinomial_v_992);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_993, AgradCdfTestFixture, AgradCdfBetaBinomial_v_993);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_994, AgradCdfTestFixture, AgradCdfBetaBinomial_v_994);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_995, AgradCdfTestFixture, AgradCdfBetaBinomial_v_995);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_996, AgradCdfTestFixture, AgradCdfBetaBinomial_v_996);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_997, AgradCdfTestFixture, AgradCdfBetaBinomial_v_997);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_998, AgradCdfTestFixture, AgradCdfBetaBinomial_v_998);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBetaBinomial_v_999, AgradCdfTestFixture, AgradCdfBetaBinomial_v_999);

