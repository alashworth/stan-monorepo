#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial_2/neg_binomial_2_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_191;

typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_100> AgradCdfNegBinomial2_ffd_100;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_101> AgradCdfNegBinomial2_ffd_101;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_102> AgradCdfNegBinomial2_ffd_102;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_103> AgradCdfNegBinomial2_ffd_103;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_104> AgradCdfNegBinomial2_ffd_104;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_105> AgradCdfNegBinomial2_ffd_105;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_106> AgradCdfNegBinomial2_ffd_106;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_107> AgradCdfNegBinomial2_ffd_107;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_108> AgradCdfNegBinomial2_ffd_108;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_109> AgradCdfNegBinomial2_ffd_109;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_110> AgradCdfNegBinomial2_ffd_110;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_111> AgradCdfNegBinomial2_ffd_111;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_112> AgradCdfNegBinomial2_ffd_112;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_113> AgradCdfNegBinomial2_ffd_113;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_114> AgradCdfNegBinomial2_ffd_114;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_115> AgradCdfNegBinomial2_ffd_115;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_116> AgradCdfNegBinomial2_ffd_116;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_117> AgradCdfNegBinomial2_ffd_117;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_118> AgradCdfNegBinomial2_ffd_118;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_119> AgradCdfNegBinomial2_ffd_119;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_120> AgradCdfNegBinomial2_ffd_120;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_121> AgradCdfNegBinomial2_ffd_121;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_122> AgradCdfNegBinomial2_ffd_122;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_123> AgradCdfNegBinomial2_ffd_123;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_124> AgradCdfNegBinomial2_ffd_124;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_125> AgradCdfNegBinomial2_ffd_125;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_126> AgradCdfNegBinomial2_ffd_126;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_127> AgradCdfNegBinomial2_ffd_127;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_128> AgradCdfNegBinomial2_ffd_128;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_129> AgradCdfNegBinomial2_ffd_129;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_130> AgradCdfNegBinomial2_ffd_130;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_131> AgradCdfNegBinomial2_ffd_131;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_132> AgradCdfNegBinomial2_ffd_132;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_133> AgradCdfNegBinomial2_ffd_133;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_134> AgradCdfNegBinomial2_ffd_134;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_135> AgradCdfNegBinomial2_ffd_135;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_136> AgradCdfNegBinomial2_ffd_136;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_137> AgradCdfNegBinomial2_ffd_137;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_138> AgradCdfNegBinomial2_ffd_138;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_139> AgradCdfNegBinomial2_ffd_139;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_140> AgradCdfNegBinomial2_ffd_140;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_141> AgradCdfNegBinomial2_ffd_141;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_142> AgradCdfNegBinomial2_ffd_142;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_143> AgradCdfNegBinomial2_ffd_143;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_144> AgradCdfNegBinomial2_ffd_144;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_145> AgradCdfNegBinomial2_ffd_145;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_146> AgradCdfNegBinomial2_ffd_146;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_147> AgradCdfNegBinomial2_ffd_147;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_148> AgradCdfNegBinomial2_ffd_148;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_149> AgradCdfNegBinomial2_ffd_149;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_150> AgradCdfNegBinomial2_ffd_150;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_151> AgradCdfNegBinomial2_ffd_151;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_152> AgradCdfNegBinomial2_ffd_152;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_153> AgradCdfNegBinomial2_ffd_153;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_154> AgradCdfNegBinomial2_ffd_154;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_155> AgradCdfNegBinomial2_ffd_155;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_156> AgradCdfNegBinomial2_ffd_156;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_157> AgradCdfNegBinomial2_ffd_157;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_158> AgradCdfNegBinomial2_ffd_158;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_159> AgradCdfNegBinomial2_ffd_159;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_160> AgradCdfNegBinomial2_ffd_160;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_161> AgradCdfNegBinomial2_ffd_161;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_162> AgradCdfNegBinomial2_ffd_162;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_163> AgradCdfNegBinomial2_ffd_163;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_164> AgradCdfNegBinomial2_ffd_164;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_165> AgradCdfNegBinomial2_ffd_165;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_166> AgradCdfNegBinomial2_ffd_166;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_167> AgradCdfNegBinomial2_ffd_167;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_168> AgradCdfNegBinomial2_ffd_168;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_169> AgradCdfNegBinomial2_ffd_169;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_170> AgradCdfNegBinomial2_ffd_170;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_171> AgradCdfNegBinomial2_ffd_171;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_172> AgradCdfNegBinomial2_ffd_172;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_173> AgradCdfNegBinomial2_ffd_173;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_174> AgradCdfNegBinomial2_ffd_174;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_175> AgradCdfNegBinomial2_ffd_175;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_176> AgradCdfNegBinomial2_ffd_176;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_177> AgradCdfNegBinomial2_ffd_177;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_178> AgradCdfNegBinomial2_ffd_178;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_179> AgradCdfNegBinomial2_ffd_179;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_180> AgradCdfNegBinomial2_ffd_180;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_181> AgradCdfNegBinomial2_ffd_181;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_182> AgradCdfNegBinomial2_ffd_182;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_183> AgradCdfNegBinomial2_ffd_183;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_184> AgradCdfNegBinomial2_ffd_184;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_185> AgradCdfNegBinomial2_ffd_185;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_186> AgradCdfNegBinomial2_ffd_186;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_187> AgradCdfNegBinomial2_ffd_187;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_188> AgradCdfNegBinomial2_ffd_188;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_189> AgradCdfNegBinomial2_ffd_189;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_190> AgradCdfNegBinomial2_ffd_190;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffd_191> AgradCdfNegBinomial2_ffd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_100, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_101, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_102, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_103, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_104, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_105, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_106, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_107, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_108, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_109, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_110, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_111, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_112, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_113, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_114, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_115, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_116, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_117, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_118, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_119, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_120, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_121, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_122, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_123, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_124, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_125, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_126, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_127, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_128, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_129, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_130, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_131, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_132, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_133, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_134, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_135, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_136, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_137, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_138, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_139, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_140, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_141, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_142, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_143, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_144, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_145, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_146, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_147, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_148, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_149, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_150, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_151, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_152, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_153, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_154, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_155, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_156, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_157, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_158, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_159, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_160, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_161, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_162, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_163, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_164, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_165, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_166, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_167, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_168, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_169, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_170, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_171, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_172, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_173, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_174, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_175, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_176, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_177, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_178, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_179, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_180, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_181, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_182, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_183, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_184, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_185, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_186, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_187, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_188, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_189, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_190, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffd_191, AgradCdfTestFixture, AgradCdfNegBinomial2_ffd_191);

