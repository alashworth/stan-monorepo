#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial_2/neg_binomial_2_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;

typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_100> AgradCdfNegBinomial2_ffv_100;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_101> AgradCdfNegBinomial2_ffv_101;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_102> AgradCdfNegBinomial2_ffv_102;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_103> AgradCdfNegBinomial2_ffv_103;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_104> AgradCdfNegBinomial2_ffv_104;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_105> AgradCdfNegBinomial2_ffv_105;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_106> AgradCdfNegBinomial2_ffv_106;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_107> AgradCdfNegBinomial2_ffv_107;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_108> AgradCdfNegBinomial2_ffv_108;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_109> AgradCdfNegBinomial2_ffv_109;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_110> AgradCdfNegBinomial2_ffv_110;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_111> AgradCdfNegBinomial2_ffv_111;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_112> AgradCdfNegBinomial2_ffv_112;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_113> AgradCdfNegBinomial2_ffv_113;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_114> AgradCdfNegBinomial2_ffv_114;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_115> AgradCdfNegBinomial2_ffv_115;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_116> AgradCdfNegBinomial2_ffv_116;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_117> AgradCdfNegBinomial2_ffv_117;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_118> AgradCdfNegBinomial2_ffv_118;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_119> AgradCdfNegBinomial2_ffv_119;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_120> AgradCdfNegBinomial2_ffv_120;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_121> AgradCdfNegBinomial2_ffv_121;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_122> AgradCdfNegBinomial2_ffv_122;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_123> AgradCdfNegBinomial2_ffv_123;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_124> AgradCdfNegBinomial2_ffv_124;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_125> AgradCdfNegBinomial2_ffv_125;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_126> AgradCdfNegBinomial2_ffv_126;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_127> AgradCdfNegBinomial2_ffv_127;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_128> AgradCdfNegBinomial2_ffv_128;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_129> AgradCdfNegBinomial2_ffv_129;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_130> AgradCdfNegBinomial2_ffv_130;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_131> AgradCdfNegBinomial2_ffv_131;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_132> AgradCdfNegBinomial2_ffv_132;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_133> AgradCdfNegBinomial2_ffv_133;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_134> AgradCdfNegBinomial2_ffv_134;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_135> AgradCdfNegBinomial2_ffv_135;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_136> AgradCdfNegBinomial2_ffv_136;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_137> AgradCdfNegBinomial2_ffv_137;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_138> AgradCdfNegBinomial2_ffv_138;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_139> AgradCdfNegBinomial2_ffv_139;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_140> AgradCdfNegBinomial2_ffv_140;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_141> AgradCdfNegBinomial2_ffv_141;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_142> AgradCdfNegBinomial2_ffv_142;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_143> AgradCdfNegBinomial2_ffv_143;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_144> AgradCdfNegBinomial2_ffv_144;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_145> AgradCdfNegBinomial2_ffv_145;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_146> AgradCdfNegBinomial2_ffv_146;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_147> AgradCdfNegBinomial2_ffv_147;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_148> AgradCdfNegBinomial2_ffv_148;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_149> AgradCdfNegBinomial2_ffv_149;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_150> AgradCdfNegBinomial2_ffv_150;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_151> AgradCdfNegBinomial2_ffv_151;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_152> AgradCdfNegBinomial2_ffv_152;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_153> AgradCdfNegBinomial2_ffv_153;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_154> AgradCdfNegBinomial2_ffv_154;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_155> AgradCdfNegBinomial2_ffv_155;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_156> AgradCdfNegBinomial2_ffv_156;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_157> AgradCdfNegBinomial2_ffv_157;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_158> AgradCdfNegBinomial2_ffv_158;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_159> AgradCdfNegBinomial2_ffv_159;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_160> AgradCdfNegBinomial2_ffv_160;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_161> AgradCdfNegBinomial2_ffv_161;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_162> AgradCdfNegBinomial2_ffv_162;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_163> AgradCdfNegBinomial2_ffv_163;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_164> AgradCdfNegBinomial2_ffv_164;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_165> AgradCdfNegBinomial2_ffv_165;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_166> AgradCdfNegBinomial2_ffv_166;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_167> AgradCdfNegBinomial2_ffv_167;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_168> AgradCdfNegBinomial2_ffv_168;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_169> AgradCdfNegBinomial2_ffv_169;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_170> AgradCdfNegBinomial2_ffv_170;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_171> AgradCdfNegBinomial2_ffv_171;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_172> AgradCdfNegBinomial2_ffv_172;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_173> AgradCdfNegBinomial2_ffv_173;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_174> AgradCdfNegBinomial2_ffv_174;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_175> AgradCdfNegBinomial2_ffv_175;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_176> AgradCdfNegBinomial2_ffv_176;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_177> AgradCdfNegBinomial2_ffv_177;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_178> AgradCdfNegBinomial2_ffv_178;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_179> AgradCdfNegBinomial2_ffv_179;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_180> AgradCdfNegBinomial2_ffv_180;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_181> AgradCdfNegBinomial2_ffv_181;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_182> AgradCdfNegBinomial2_ffv_182;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_183> AgradCdfNegBinomial2_ffv_183;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_184> AgradCdfNegBinomial2_ffv_184;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_185> AgradCdfNegBinomial2_ffv_185;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_186> AgradCdfNegBinomial2_ffv_186;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_187> AgradCdfNegBinomial2_ffv_187;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_188> AgradCdfNegBinomial2_ffv_188;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_189> AgradCdfNegBinomial2_ffv_189;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_190> AgradCdfNegBinomial2_ffv_190;
typedef boost::mpl::vector<AgradCdfNegBinomial2, type_ffv_191> AgradCdfNegBinomial2_ffv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_100, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_101, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_102, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_103, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_104, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_105, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_106, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_107, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_108, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_109, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_110, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_111, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_112, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_113, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_114, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_115, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_116, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_117, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_118, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_119, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_120, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_121, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_122, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_123, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_124, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_125, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_126, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_127, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_128, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_129, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_130, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_131, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_132, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_133, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_134, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_135, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_136, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_137, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_138, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_139, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_140, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_141, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_142, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_143, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_144, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_145, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_146, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_147, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_148, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_149, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_150, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_151, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_152, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_153, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_154, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_155, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_156, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_157, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_158, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_159, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_160, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_161, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_162, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_163, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_164, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_165, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_166, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_167, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_168, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_169, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_170, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_171, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_172, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_173, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_174, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_175, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_176, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_177, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_178, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_179, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_180, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_181, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_182, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_183, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_184, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_185, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_186, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_187, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_188, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_189, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_190, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial2_ffv_191, AgradCdfTestFixture, AgradCdfNegBinomial2_ffv_191);

