#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial_2/neg_binomial_2_cdf_log_test.hpp>

typedef boost::mpl::vector<int, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<int, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<int, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<int, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<int, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<int, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<int, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<int>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_0> AgradCdfLogNegBinomial2_ffv_0;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_1> AgradCdfLogNegBinomial2_ffv_1;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_2> AgradCdfLogNegBinomial2_ffv_2;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_3> AgradCdfLogNegBinomial2_ffv_3;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_4> AgradCdfLogNegBinomial2_ffv_4;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_5> AgradCdfLogNegBinomial2_ffv_5;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_6> AgradCdfLogNegBinomial2_ffv_6;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_7> AgradCdfLogNegBinomial2_ffv_7;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_8> AgradCdfLogNegBinomial2_ffv_8;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_9> AgradCdfLogNegBinomial2_ffv_9;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_10> AgradCdfLogNegBinomial2_ffv_10;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_11> AgradCdfLogNegBinomial2_ffv_11;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_12> AgradCdfLogNegBinomial2_ffv_12;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_13> AgradCdfLogNegBinomial2_ffv_13;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_14> AgradCdfLogNegBinomial2_ffv_14;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_15> AgradCdfLogNegBinomial2_ffv_15;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_16> AgradCdfLogNegBinomial2_ffv_16;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_17> AgradCdfLogNegBinomial2_ffv_17;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_18> AgradCdfLogNegBinomial2_ffv_18;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_19> AgradCdfLogNegBinomial2_ffv_19;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_20> AgradCdfLogNegBinomial2_ffv_20;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_21> AgradCdfLogNegBinomial2_ffv_21;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_22> AgradCdfLogNegBinomial2_ffv_22;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_23> AgradCdfLogNegBinomial2_ffv_23;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_24> AgradCdfLogNegBinomial2_ffv_24;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_25> AgradCdfLogNegBinomial2_ffv_25;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_26> AgradCdfLogNegBinomial2_ffv_26;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_27> AgradCdfLogNegBinomial2_ffv_27;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_28> AgradCdfLogNegBinomial2_ffv_28;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_29> AgradCdfLogNegBinomial2_ffv_29;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_30> AgradCdfLogNegBinomial2_ffv_30;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_31> AgradCdfLogNegBinomial2_ffv_31;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_32> AgradCdfLogNegBinomial2_ffv_32;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_33> AgradCdfLogNegBinomial2_ffv_33;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_34> AgradCdfLogNegBinomial2_ffv_34;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_35> AgradCdfLogNegBinomial2_ffv_35;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_36> AgradCdfLogNegBinomial2_ffv_36;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_37> AgradCdfLogNegBinomial2_ffv_37;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_38> AgradCdfLogNegBinomial2_ffv_38;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_39> AgradCdfLogNegBinomial2_ffv_39;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_40> AgradCdfLogNegBinomial2_ffv_40;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_41> AgradCdfLogNegBinomial2_ffv_41;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_42> AgradCdfLogNegBinomial2_ffv_42;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_43> AgradCdfLogNegBinomial2_ffv_43;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_44> AgradCdfLogNegBinomial2_ffv_44;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_45> AgradCdfLogNegBinomial2_ffv_45;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_46> AgradCdfLogNegBinomial2_ffv_46;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_47> AgradCdfLogNegBinomial2_ffv_47;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_48> AgradCdfLogNegBinomial2_ffv_48;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_49> AgradCdfLogNegBinomial2_ffv_49;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_50> AgradCdfLogNegBinomial2_ffv_50;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_51> AgradCdfLogNegBinomial2_ffv_51;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_52> AgradCdfLogNegBinomial2_ffv_52;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_53> AgradCdfLogNegBinomial2_ffv_53;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_54> AgradCdfLogNegBinomial2_ffv_54;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_55> AgradCdfLogNegBinomial2_ffv_55;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_56> AgradCdfLogNegBinomial2_ffv_56;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_57> AgradCdfLogNegBinomial2_ffv_57;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_58> AgradCdfLogNegBinomial2_ffv_58;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_59> AgradCdfLogNegBinomial2_ffv_59;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_60> AgradCdfLogNegBinomial2_ffv_60;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_61> AgradCdfLogNegBinomial2_ffv_61;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_62> AgradCdfLogNegBinomial2_ffv_62;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_63> AgradCdfLogNegBinomial2_ffv_63;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_64> AgradCdfLogNegBinomial2_ffv_64;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_65> AgradCdfLogNegBinomial2_ffv_65;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_66> AgradCdfLogNegBinomial2_ffv_66;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_67> AgradCdfLogNegBinomial2_ffv_67;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_68> AgradCdfLogNegBinomial2_ffv_68;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_69> AgradCdfLogNegBinomial2_ffv_69;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_70> AgradCdfLogNegBinomial2_ffv_70;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_71> AgradCdfLogNegBinomial2_ffv_71;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_72> AgradCdfLogNegBinomial2_ffv_72;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_73> AgradCdfLogNegBinomial2_ffv_73;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_74> AgradCdfLogNegBinomial2_ffv_74;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_75> AgradCdfLogNegBinomial2_ffv_75;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_76> AgradCdfLogNegBinomial2_ffv_76;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_77> AgradCdfLogNegBinomial2_ffv_77;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_78> AgradCdfLogNegBinomial2_ffv_78;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_79> AgradCdfLogNegBinomial2_ffv_79;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_80> AgradCdfLogNegBinomial2_ffv_80;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_81> AgradCdfLogNegBinomial2_ffv_81;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_82> AgradCdfLogNegBinomial2_ffv_82;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_83> AgradCdfLogNegBinomial2_ffv_83;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_84> AgradCdfLogNegBinomial2_ffv_84;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_85> AgradCdfLogNegBinomial2_ffv_85;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_86> AgradCdfLogNegBinomial2_ffv_86;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_87> AgradCdfLogNegBinomial2_ffv_87;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_88> AgradCdfLogNegBinomial2_ffv_88;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_89> AgradCdfLogNegBinomial2_ffv_89;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_90> AgradCdfLogNegBinomial2_ffv_90;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_91> AgradCdfLogNegBinomial2_ffv_91;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_92> AgradCdfLogNegBinomial2_ffv_92;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_93> AgradCdfLogNegBinomial2_ffv_93;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_94> AgradCdfLogNegBinomial2_ffv_94;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_95> AgradCdfLogNegBinomial2_ffv_95;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_96> AgradCdfLogNegBinomial2_ffv_96;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_97> AgradCdfLogNegBinomial2_ffv_97;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_98> AgradCdfLogNegBinomial2_ffv_98;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_99> AgradCdfLogNegBinomial2_ffv_99;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_100> AgradCdfLogNegBinomial2_ffv_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_101> AgradCdfLogNegBinomial2_ffv_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_102> AgradCdfLogNegBinomial2_ffv_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_103> AgradCdfLogNegBinomial2_ffv_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_104> AgradCdfLogNegBinomial2_ffv_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_105> AgradCdfLogNegBinomial2_ffv_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_106> AgradCdfLogNegBinomial2_ffv_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_107> AgradCdfLogNegBinomial2_ffv_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_108> AgradCdfLogNegBinomial2_ffv_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_109> AgradCdfLogNegBinomial2_ffv_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_110> AgradCdfLogNegBinomial2_ffv_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_111> AgradCdfLogNegBinomial2_ffv_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_112> AgradCdfLogNegBinomial2_ffv_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_113> AgradCdfLogNegBinomial2_ffv_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_114> AgradCdfLogNegBinomial2_ffv_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_115> AgradCdfLogNegBinomial2_ffv_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_116> AgradCdfLogNegBinomial2_ffv_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_117> AgradCdfLogNegBinomial2_ffv_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_118> AgradCdfLogNegBinomial2_ffv_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_119> AgradCdfLogNegBinomial2_ffv_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_120> AgradCdfLogNegBinomial2_ffv_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_121> AgradCdfLogNegBinomial2_ffv_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_122> AgradCdfLogNegBinomial2_ffv_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_123> AgradCdfLogNegBinomial2_ffv_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_124> AgradCdfLogNegBinomial2_ffv_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_125> AgradCdfLogNegBinomial2_ffv_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_126> AgradCdfLogNegBinomial2_ffv_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_127> AgradCdfLogNegBinomial2_ffv_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_128> AgradCdfLogNegBinomial2_ffv_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_129> AgradCdfLogNegBinomial2_ffv_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_130> AgradCdfLogNegBinomial2_ffv_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_131> AgradCdfLogNegBinomial2_ffv_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_132> AgradCdfLogNegBinomial2_ffv_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_133> AgradCdfLogNegBinomial2_ffv_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_134> AgradCdfLogNegBinomial2_ffv_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_135> AgradCdfLogNegBinomial2_ffv_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_136> AgradCdfLogNegBinomial2_ffv_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_137> AgradCdfLogNegBinomial2_ffv_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_138> AgradCdfLogNegBinomial2_ffv_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_139> AgradCdfLogNegBinomial2_ffv_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_140> AgradCdfLogNegBinomial2_ffv_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_141> AgradCdfLogNegBinomial2_ffv_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_142> AgradCdfLogNegBinomial2_ffv_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_143> AgradCdfLogNegBinomial2_ffv_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_144> AgradCdfLogNegBinomial2_ffv_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_145> AgradCdfLogNegBinomial2_ffv_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_146> AgradCdfLogNegBinomial2_ffv_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_147> AgradCdfLogNegBinomial2_ffv_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_148> AgradCdfLogNegBinomial2_ffv_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_149> AgradCdfLogNegBinomial2_ffv_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_150> AgradCdfLogNegBinomial2_ffv_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_151> AgradCdfLogNegBinomial2_ffv_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_152> AgradCdfLogNegBinomial2_ffv_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_153> AgradCdfLogNegBinomial2_ffv_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_154> AgradCdfLogNegBinomial2_ffv_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_155> AgradCdfLogNegBinomial2_ffv_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_156> AgradCdfLogNegBinomial2_ffv_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_157> AgradCdfLogNegBinomial2_ffv_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_158> AgradCdfLogNegBinomial2_ffv_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_159> AgradCdfLogNegBinomial2_ffv_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_160> AgradCdfLogNegBinomial2_ffv_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_161> AgradCdfLogNegBinomial2_ffv_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_162> AgradCdfLogNegBinomial2_ffv_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_163> AgradCdfLogNegBinomial2_ffv_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_164> AgradCdfLogNegBinomial2_ffv_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_165> AgradCdfLogNegBinomial2_ffv_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_166> AgradCdfLogNegBinomial2_ffv_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_167> AgradCdfLogNegBinomial2_ffv_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_168> AgradCdfLogNegBinomial2_ffv_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_169> AgradCdfLogNegBinomial2_ffv_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_170> AgradCdfLogNegBinomial2_ffv_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_171> AgradCdfLogNegBinomial2_ffv_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_172> AgradCdfLogNegBinomial2_ffv_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_173> AgradCdfLogNegBinomial2_ffv_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_174> AgradCdfLogNegBinomial2_ffv_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_175> AgradCdfLogNegBinomial2_ffv_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_176> AgradCdfLogNegBinomial2_ffv_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_177> AgradCdfLogNegBinomial2_ffv_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_178> AgradCdfLogNegBinomial2_ffv_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_179> AgradCdfLogNegBinomial2_ffv_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_180> AgradCdfLogNegBinomial2_ffv_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_181> AgradCdfLogNegBinomial2_ffv_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_182> AgradCdfLogNegBinomial2_ffv_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_183> AgradCdfLogNegBinomial2_ffv_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_184> AgradCdfLogNegBinomial2_ffv_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_185> AgradCdfLogNegBinomial2_ffv_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_186> AgradCdfLogNegBinomial2_ffv_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_187> AgradCdfLogNegBinomial2_ffv_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_188> AgradCdfLogNegBinomial2_ffv_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_189> AgradCdfLogNegBinomial2_ffv_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_190> AgradCdfLogNegBinomial2_ffv_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_191> AgradCdfLogNegBinomial2_ffv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_0, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_1, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_2, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_3, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_4, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_5, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_6, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_7, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_8, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_9, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_10, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_11, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_12, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_13, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_14, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_15, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_16, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_17, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_18, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_19, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_20, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_21, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_22, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_23, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_24, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_25, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_26, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_27, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_28, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_29, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_30, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_31, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_32, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_33, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_34, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_35, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_36, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_37, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_38, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_39, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_40, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_41, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_42, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_43, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_44, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_45, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_46, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_47, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_48, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_49, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_50, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_51, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_52, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_53, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_54, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_55, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_56, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_57, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_58, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_59, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_60, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_61, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_62, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_63, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_64, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_65, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_66, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_67, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_68, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_69, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_70, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_71, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_72, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_73, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_74, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_75, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_76, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_77, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_78, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_79, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_80, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_81, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_82, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_83, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_84, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_85, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_86, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_87, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_88, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_89, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_90, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_91, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_92, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_93, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_94, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_95, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_96, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_97, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_98, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_99, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_191);

