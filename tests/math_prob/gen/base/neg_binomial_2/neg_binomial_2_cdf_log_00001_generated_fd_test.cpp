#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial_2/neg_binomial_2_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty, empty> type_fd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty, empty> type_fd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty, empty> type_fd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_100> AgradCdfLogNegBinomial2_fd_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_101> AgradCdfLogNegBinomial2_fd_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_102> AgradCdfLogNegBinomial2_fd_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_103> AgradCdfLogNegBinomial2_fd_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_104> AgradCdfLogNegBinomial2_fd_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_105> AgradCdfLogNegBinomial2_fd_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_106> AgradCdfLogNegBinomial2_fd_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_107> AgradCdfLogNegBinomial2_fd_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_108> AgradCdfLogNegBinomial2_fd_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_109> AgradCdfLogNegBinomial2_fd_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_110> AgradCdfLogNegBinomial2_fd_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_111> AgradCdfLogNegBinomial2_fd_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_112> AgradCdfLogNegBinomial2_fd_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_113> AgradCdfLogNegBinomial2_fd_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_114> AgradCdfLogNegBinomial2_fd_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_115> AgradCdfLogNegBinomial2_fd_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_116> AgradCdfLogNegBinomial2_fd_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_117> AgradCdfLogNegBinomial2_fd_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_118> AgradCdfLogNegBinomial2_fd_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_119> AgradCdfLogNegBinomial2_fd_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_120> AgradCdfLogNegBinomial2_fd_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_121> AgradCdfLogNegBinomial2_fd_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_122> AgradCdfLogNegBinomial2_fd_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_123> AgradCdfLogNegBinomial2_fd_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_124> AgradCdfLogNegBinomial2_fd_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_125> AgradCdfLogNegBinomial2_fd_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_126> AgradCdfLogNegBinomial2_fd_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_127> AgradCdfLogNegBinomial2_fd_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_128> AgradCdfLogNegBinomial2_fd_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_129> AgradCdfLogNegBinomial2_fd_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_130> AgradCdfLogNegBinomial2_fd_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_131> AgradCdfLogNegBinomial2_fd_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_132> AgradCdfLogNegBinomial2_fd_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_133> AgradCdfLogNegBinomial2_fd_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_134> AgradCdfLogNegBinomial2_fd_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_135> AgradCdfLogNegBinomial2_fd_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_136> AgradCdfLogNegBinomial2_fd_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_137> AgradCdfLogNegBinomial2_fd_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_138> AgradCdfLogNegBinomial2_fd_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_139> AgradCdfLogNegBinomial2_fd_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_140> AgradCdfLogNegBinomial2_fd_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_141> AgradCdfLogNegBinomial2_fd_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_142> AgradCdfLogNegBinomial2_fd_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_143> AgradCdfLogNegBinomial2_fd_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_144> AgradCdfLogNegBinomial2_fd_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_145> AgradCdfLogNegBinomial2_fd_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_146> AgradCdfLogNegBinomial2_fd_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_147> AgradCdfLogNegBinomial2_fd_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_148> AgradCdfLogNegBinomial2_fd_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_149> AgradCdfLogNegBinomial2_fd_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_150> AgradCdfLogNegBinomial2_fd_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_151> AgradCdfLogNegBinomial2_fd_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_152> AgradCdfLogNegBinomial2_fd_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_153> AgradCdfLogNegBinomial2_fd_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_154> AgradCdfLogNegBinomial2_fd_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_155> AgradCdfLogNegBinomial2_fd_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_156> AgradCdfLogNegBinomial2_fd_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_157> AgradCdfLogNegBinomial2_fd_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_158> AgradCdfLogNegBinomial2_fd_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_159> AgradCdfLogNegBinomial2_fd_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_160> AgradCdfLogNegBinomial2_fd_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_161> AgradCdfLogNegBinomial2_fd_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_162> AgradCdfLogNegBinomial2_fd_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_163> AgradCdfLogNegBinomial2_fd_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_164> AgradCdfLogNegBinomial2_fd_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_165> AgradCdfLogNegBinomial2_fd_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_166> AgradCdfLogNegBinomial2_fd_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_167> AgradCdfLogNegBinomial2_fd_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_168> AgradCdfLogNegBinomial2_fd_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_169> AgradCdfLogNegBinomial2_fd_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_170> AgradCdfLogNegBinomial2_fd_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_171> AgradCdfLogNegBinomial2_fd_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_172> AgradCdfLogNegBinomial2_fd_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_173> AgradCdfLogNegBinomial2_fd_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_174> AgradCdfLogNegBinomial2_fd_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_175> AgradCdfLogNegBinomial2_fd_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_176> AgradCdfLogNegBinomial2_fd_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_177> AgradCdfLogNegBinomial2_fd_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_178> AgradCdfLogNegBinomial2_fd_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_179> AgradCdfLogNegBinomial2_fd_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_180> AgradCdfLogNegBinomial2_fd_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_181> AgradCdfLogNegBinomial2_fd_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_182> AgradCdfLogNegBinomial2_fd_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_183> AgradCdfLogNegBinomial2_fd_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_184> AgradCdfLogNegBinomial2_fd_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_185> AgradCdfLogNegBinomial2_fd_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_186> AgradCdfLogNegBinomial2_fd_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_187> AgradCdfLogNegBinomial2_fd_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_188> AgradCdfLogNegBinomial2_fd_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_189> AgradCdfLogNegBinomial2_fd_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_190> AgradCdfLogNegBinomial2_fd_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_fd_191> AgradCdfLogNegBinomial2_fd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_fd_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial2_fd_191);

