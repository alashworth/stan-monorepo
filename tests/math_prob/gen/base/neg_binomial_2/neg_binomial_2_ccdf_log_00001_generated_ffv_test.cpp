#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial_2/neg_binomial_2_ccdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_100> AgradCdfLogNegBinomial2_ffv_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_101> AgradCdfLogNegBinomial2_ffv_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_102> AgradCdfLogNegBinomial2_ffv_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_103> AgradCdfLogNegBinomial2_ffv_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_104> AgradCdfLogNegBinomial2_ffv_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_105> AgradCdfLogNegBinomial2_ffv_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_106> AgradCdfLogNegBinomial2_ffv_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_107> AgradCdfLogNegBinomial2_ffv_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_108> AgradCdfLogNegBinomial2_ffv_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_109> AgradCdfLogNegBinomial2_ffv_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_110> AgradCdfLogNegBinomial2_ffv_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_111> AgradCdfLogNegBinomial2_ffv_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_112> AgradCdfLogNegBinomial2_ffv_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_113> AgradCdfLogNegBinomial2_ffv_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_114> AgradCdfLogNegBinomial2_ffv_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_115> AgradCdfLogNegBinomial2_ffv_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_116> AgradCdfLogNegBinomial2_ffv_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_117> AgradCdfLogNegBinomial2_ffv_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_118> AgradCdfLogNegBinomial2_ffv_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_119> AgradCdfLogNegBinomial2_ffv_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_120> AgradCdfLogNegBinomial2_ffv_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_121> AgradCdfLogNegBinomial2_ffv_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_122> AgradCdfLogNegBinomial2_ffv_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_123> AgradCdfLogNegBinomial2_ffv_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_124> AgradCdfLogNegBinomial2_ffv_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_125> AgradCdfLogNegBinomial2_ffv_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_126> AgradCdfLogNegBinomial2_ffv_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_127> AgradCdfLogNegBinomial2_ffv_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_128> AgradCdfLogNegBinomial2_ffv_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_129> AgradCdfLogNegBinomial2_ffv_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_130> AgradCdfLogNegBinomial2_ffv_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_131> AgradCdfLogNegBinomial2_ffv_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_132> AgradCdfLogNegBinomial2_ffv_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_133> AgradCdfLogNegBinomial2_ffv_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_134> AgradCdfLogNegBinomial2_ffv_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_135> AgradCdfLogNegBinomial2_ffv_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_136> AgradCdfLogNegBinomial2_ffv_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_137> AgradCdfLogNegBinomial2_ffv_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_138> AgradCdfLogNegBinomial2_ffv_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_139> AgradCdfLogNegBinomial2_ffv_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_140> AgradCdfLogNegBinomial2_ffv_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_141> AgradCdfLogNegBinomial2_ffv_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_142> AgradCdfLogNegBinomial2_ffv_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_143> AgradCdfLogNegBinomial2_ffv_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_144> AgradCdfLogNegBinomial2_ffv_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_145> AgradCdfLogNegBinomial2_ffv_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_146> AgradCdfLogNegBinomial2_ffv_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_147> AgradCdfLogNegBinomial2_ffv_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_148> AgradCdfLogNegBinomial2_ffv_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_149> AgradCdfLogNegBinomial2_ffv_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_150> AgradCdfLogNegBinomial2_ffv_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_151> AgradCdfLogNegBinomial2_ffv_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_152> AgradCdfLogNegBinomial2_ffv_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_153> AgradCdfLogNegBinomial2_ffv_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_154> AgradCdfLogNegBinomial2_ffv_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_155> AgradCdfLogNegBinomial2_ffv_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_156> AgradCdfLogNegBinomial2_ffv_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_157> AgradCdfLogNegBinomial2_ffv_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_158> AgradCdfLogNegBinomial2_ffv_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_159> AgradCdfLogNegBinomial2_ffv_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_160> AgradCdfLogNegBinomial2_ffv_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_161> AgradCdfLogNegBinomial2_ffv_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_162> AgradCdfLogNegBinomial2_ffv_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_163> AgradCdfLogNegBinomial2_ffv_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_164> AgradCdfLogNegBinomial2_ffv_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_165> AgradCdfLogNegBinomial2_ffv_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_166> AgradCdfLogNegBinomial2_ffv_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_167> AgradCdfLogNegBinomial2_ffv_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_168> AgradCdfLogNegBinomial2_ffv_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_169> AgradCdfLogNegBinomial2_ffv_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_170> AgradCdfLogNegBinomial2_ffv_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_171> AgradCdfLogNegBinomial2_ffv_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_172> AgradCdfLogNegBinomial2_ffv_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_173> AgradCdfLogNegBinomial2_ffv_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_174> AgradCdfLogNegBinomial2_ffv_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_175> AgradCdfLogNegBinomial2_ffv_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_176> AgradCdfLogNegBinomial2_ffv_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_177> AgradCdfLogNegBinomial2_ffv_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_178> AgradCdfLogNegBinomial2_ffv_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_179> AgradCdfLogNegBinomial2_ffv_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_180> AgradCdfLogNegBinomial2_ffv_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_181> AgradCdfLogNegBinomial2_ffv_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_182> AgradCdfLogNegBinomial2_ffv_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_183> AgradCdfLogNegBinomial2_ffv_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_184> AgradCdfLogNegBinomial2_ffv_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_185> AgradCdfLogNegBinomial2_ffv_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_186> AgradCdfLogNegBinomial2_ffv_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_187> AgradCdfLogNegBinomial2_ffv_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_188> AgradCdfLogNegBinomial2_ffv_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_189> AgradCdfLogNegBinomial2_ffv_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_190> AgradCdfLogNegBinomial2_ffv_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial2, type_ffv_191> AgradCdfLogNegBinomial2_ffv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_100, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_101, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_102, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_103, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_104, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_105, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_106, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_107, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_108, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_109, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_110, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_111, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_112, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_113, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_114, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_115, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_116, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_117, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_118, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_119, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_120, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_121, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_122, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_123, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_124, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_125, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_126, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_127, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_128, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_129, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_130, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_131, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_132, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_133, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_134, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_135, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_136, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_137, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_138, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_139, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_140, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_141, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_142, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_143, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_144, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_145, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_146, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_147, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_148, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_149, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_150, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_151, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_152, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_153, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_154, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_155, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_156, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_157, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_158, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_159, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_160, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_161, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_162, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_163, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_164, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_165, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_166, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_167, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_168, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_169, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_170, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_171, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_172, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_173, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_174, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_175, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_176, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_177, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_178, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_179, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_180, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_181, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_182, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_183, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_184, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_185, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_186, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_187, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_188, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_189, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_190, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial2_ffv_191, AgradCcdfLogTestFixture, AgradCdfLogNegBinomial2_ffv_191);

