#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <scaled_inv_chi_square/scaled_inv_chi_square_ccdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_447;

typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_400> AgradCcdfLogScaledInvChiSquare_ffd_400;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_401> AgradCcdfLogScaledInvChiSquare_ffd_401;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_402> AgradCcdfLogScaledInvChiSquare_ffd_402;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_403> AgradCcdfLogScaledInvChiSquare_ffd_403;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_404> AgradCcdfLogScaledInvChiSquare_ffd_404;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_405> AgradCcdfLogScaledInvChiSquare_ffd_405;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_406> AgradCcdfLogScaledInvChiSquare_ffd_406;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_407> AgradCcdfLogScaledInvChiSquare_ffd_407;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_408> AgradCcdfLogScaledInvChiSquare_ffd_408;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_409> AgradCcdfLogScaledInvChiSquare_ffd_409;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_410> AgradCcdfLogScaledInvChiSquare_ffd_410;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_411> AgradCcdfLogScaledInvChiSquare_ffd_411;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_412> AgradCcdfLogScaledInvChiSquare_ffd_412;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_413> AgradCcdfLogScaledInvChiSquare_ffd_413;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_414> AgradCcdfLogScaledInvChiSquare_ffd_414;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_415> AgradCcdfLogScaledInvChiSquare_ffd_415;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_416> AgradCcdfLogScaledInvChiSquare_ffd_416;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_417> AgradCcdfLogScaledInvChiSquare_ffd_417;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_418> AgradCcdfLogScaledInvChiSquare_ffd_418;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_419> AgradCcdfLogScaledInvChiSquare_ffd_419;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_420> AgradCcdfLogScaledInvChiSquare_ffd_420;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_421> AgradCcdfLogScaledInvChiSquare_ffd_421;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_422> AgradCcdfLogScaledInvChiSquare_ffd_422;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_423> AgradCcdfLogScaledInvChiSquare_ffd_423;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_424> AgradCcdfLogScaledInvChiSquare_ffd_424;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_425> AgradCcdfLogScaledInvChiSquare_ffd_425;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_426> AgradCcdfLogScaledInvChiSquare_ffd_426;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_427> AgradCcdfLogScaledInvChiSquare_ffd_427;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_428> AgradCcdfLogScaledInvChiSquare_ffd_428;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_429> AgradCcdfLogScaledInvChiSquare_ffd_429;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_430> AgradCcdfLogScaledInvChiSquare_ffd_430;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_431> AgradCcdfLogScaledInvChiSquare_ffd_431;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_432> AgradCcdfLogScaledInvChiSquare_ffd_432;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_433> AgradCcdfLogScaledInvChiSquare_ffd_433;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_434> AgradCcdfLogScaledInvChiSquare_ffd_434;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_435> AgradCcdfLogScaledInvChiSquare_ffd_435;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_436> AgradCcdfLogScaledInvChiSquare_ffd_436;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_437> AgradCcdfLogScaledInvChiSquare_ffd_437;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_438> AgradCcdfLogScaledInvChiSquare_ffd_438;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_439> AgradCcdfLogScaledInvChiSquare_ffd_439;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_440> AgradCcdfLogScaledInvChiSquare_ffd_440;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_441> AgradCcdfLogScaledInvChiSquare_ffd_441;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_442> AgradCcdfLogScaledInvChiSquare_ffd_442;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_443> AgradCcdfLogScaledInvChiSquare_ffd_443;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_444> AgradCcdfLogScaledInvChiSquare_ffd_444;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_445> AgradCcdfLogScaledInvChiSquare_ffd_445;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_446> AgradCcdfLogScaledInvChiSquare_ffd_446;
typedef boost::mpl::vector<AgradCcdfLogScaledInvChiSquare, type_ffd_447> AgradCcdfLogScaledInvChiSquare_ffd_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_400, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_401, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_402, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_403, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_404, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_405, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_406, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_407, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_408, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_409, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_410, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_411, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_412, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_413, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_414, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_415, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_416, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_417, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_418, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_419, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_420, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_421, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_422, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_423, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_424, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_425, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_426, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_427, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_428, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_429, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_430, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_431, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_432, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_433, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_434, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_435, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_436, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_437, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_438, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_439, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_440, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_441, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_442, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_443, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_444, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_445, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_446, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogScaledInvChiSquare_ffd_447, AgradCcdfLogTestFixture, AgradCcdfLogScaledInvChiSquare_ffd_447);

