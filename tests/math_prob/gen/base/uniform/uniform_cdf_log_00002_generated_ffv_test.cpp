#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <uniform/uniform_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_447;

typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_400> AgradCdfLogUniform_ffv_400;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_401> AgradCdfLogUniform_ffv_401;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_402> AgradCdfLogUniform_ffv_402;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_403> AgradCdfLogUniform_ffv_403;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_404> AgradCdfLogUniform_ffv_404;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_405> AgradCdfLogUniform_ffv_405;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_406> AgradCdfLogUniform_ffv_406;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_407> AgradCdfLogUniform_ffv_407;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_408> AgradCdfLogUniform_ffv_408;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_409> AgradCdfLogUniform_ffv_409;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_410> AgradCdfLogUniform_ffv_410;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_411> AgradCdfLogUniform_ffv_411;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_412> AgradCdfLogUniform_ffv_412;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_413> AgradCdfLogUniform_ffv_413;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_414> AgradCdfLogUniform_ffv_414;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_415> AgradCdfLogUniform_ffv_415;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_416> AgradCdfLogUniform_ffv_416;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_417> AgradCdfLogUniform_ffv_417;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_418> AgradCdfLogUniform_ffv_418;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_419> AgradCdfLogUniform_ffv_419;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_420> AgradCdfLogUniform_ffv_420;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_421> AgradCdfLogUniform_ffv_421;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_422> AgradCdfLogUniform_ffv_422;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_423> AgradCdfLogUniform_ffv_423;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_424> AgradCdfLogUniform_ffv_424;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_425> AgradCdfLogUniform_ffv_425;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_426> AgradCdfLogUniform_ffv_426;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_427> AgradCdfLogUniform_ffv_427;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_428> AgradCdfLogUniform_ffv_428;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_429> AgradCdfLogUniform_ffv_429;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_430> AgradCdfLogUniform_ffv_430;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_431> AgradCdfLogUniform_ffv_431;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_432> AgradCdfLogUniform_ffv_432;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_433> AgradCdfLogUniform_ffv_433;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_434> AgradCdfLogUniform_ffv_434;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_435> AgradCdfLogUniform_ffv_435;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_436> AgradCdfLogUniform_ffv_436;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_437> AgradCdfLogUniform_ffv_437;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_438> AgradCdfLogUniform_ffv_438;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_439> AgradCdfLogUniform_ffv_439;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_440> AgradCdfLogUniform_ffv_440;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_441> AgradCdfLogUniform_ffv_441;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_442> AgradCdfLogUniform_ffv_442;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_443> AgradCdfLogUniform_ffv_443;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_444> AgradCdfLogUniform_ffv_444;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_445> AgradCdfLogUniform_ffv_445;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_446> AgradCdfLogUniform_ffv_446;
typedef boost::mpl::vector<AgradCdfLogUniform, type_ffv_447> AgradCdfLogUniform_ffv_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_400, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_401, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_402, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_403, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_404, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_405, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_406, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_407, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_408, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_409, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_410, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_411, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_412, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_413, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_414, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_415, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_416, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_417, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_418, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_419, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_420, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_421, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_422, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_423, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_424, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_425, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_426, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_427, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_428, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_429, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_430, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_431, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_432, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_433, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_434, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_435, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_436, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_437, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_438, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_439, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_440, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_441, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_442, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_443, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_444, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_445, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_446, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogUniform_ffv_447, AgradCdfLogTestFixture, AgradCdfLogUniform_ffv_447);

