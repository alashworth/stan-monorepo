#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/inv_gamma/inv_gamma_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_447;

typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_400> AgradCdfInvGamma_ffv_400;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_401> AgradCdfInvGamma_ffv_401;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_402> AgradCdfInvGamma_ffv_402;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_403> AgradCdfInvGamma_ffv_403;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_404> AgradCdfInvGamma_ffv_404;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_405> AgradCdfInvGamma_ffv_405;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_406> AgradCdfInvGamma_ffv_406;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_407> AgradCdfInvGamma_ffv_407;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_408> AgradCdfInvGamma_ffv_408;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_409> AgradCdfInvGamma_ffv_409;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_410> AgradCdfInvGamma_ffv_410;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_411> AgradCdfInvGamma_ffv_411;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_412> AgradCdfInvGamma_ffv_412;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_413> AgradCdfInvGamma_ffv_413;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_414> AgradCdfInvGamma_ffv_414;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_415> AgradCdfInvGamma_ffv_415;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_416> AgradCdfInvGamma_ffv_416;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_417> AgradCdfInvGamma_ffv_417;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_418> AgradCdfInvGamma_ffv_418;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_419> AgradCdfInvGamma_ffv_419;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_420> AgradCdfInvGamma_ffv_420;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_421> AgradCdfInvGamma_ffv_421;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_422> AgradCdfInvGamma_ffv_422;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_423> AgradCdfInvGamma_ffv_423;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_424> AgradCdfInvGamma_ffv_424;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_425> AgradCdfInvGamma_ffv_425;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_426> AgradCdfInvGamma_ffv_426;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_427> AgradCdfInvGamma_ffv_427;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_428> AgradCdfInvGamma_ffv_428;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_429> AgradCdfInvGamma_ffv_429;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_430> AgradCdfInvGamma_ffv_430;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_431> AgradCdfInvGamma_ffv_431;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_432> AgradCdfInvGamma_ffv_432;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_433> AgradCdfInvGamma_ffv_433;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_434> AgradCdfInvGamma_ffv_434;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_435> AgradCdfInvGamma_ffv_435;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_436> AgradCdfInvGamma_ffv_436;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_437> AgradCdfInvGamma_ffv_437;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_438> AgradCdfInvGamma_ffv_438;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_439> AgradCdfInvGamma_ffv_439;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_440> AgradCdfInvGamma_ffv_440;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_441> AgradCdfInvGamma_ffv_441;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_442> AgradCdfInvGamma_ffv_442;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_443> AgradCdfInvGamma_ffv_443;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_444> AgradCdfInvGamma_ffv_444;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_445> AgradCdfInvGamma_ffv_445;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_446> AgradCdfInvGamma_ffv_446;
typedef boost::mpl::vector<AgradCdfInvGamma, type_ffv_447> AgradCdfInvGamma_ffv_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_400, AgradCdfTestFixture, AgradCdfInvGamma_ffv_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_401, AgradCdfTestFixture, AgradCdfInvGamma_ffv_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_402, AgradCdfTestFixture, AgradCdfInvGamma_ffv_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_403, AgradCdfTestFixture, AgradCdfInvGamma_ffv_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_404, AgradCdfTestFixture, AgradCdfInvGamma_ffv_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_405, AgradCdfTestFixture, AgradCdfInvGamma_ffv_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_406, AgradCdfTestFixture, AgradCdfInvGamma_ffv_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_407, AgradCdfTestFixture, AgradCdfInvGamma_ffv_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_408, AgradCdfTestFixture, AgradCdfInvGamma_ffv_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_409, AgradCdfTestFixture, AgradCdfInvGamma_ffv_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_410, AgradCdfTestFixture, AgradCdfInvGamma_ffv_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_411, AgradCdfTestFixture, AgradCdfInvGamma_ffv_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_412, AgradCdfTestFixture, AgradCdfInvGamma_ffv_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_413, AgradCdfTestFixture, AgradCdfInvGamma_ffv_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_414, AgradCdfTestFixture, AgradCdfInvGamma_ffv_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_415, AgradCdfTestFixture, AgradCdfInvGamma_ffv_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_416, AgradCdfTestFixture, AgradCdfInvGamma_ffv_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_417, AgradCdfTestFixture, AgradCdfInvGamma_ffv_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_418, AgradCdfTestFixture, AgradCdfInvGamma_ffv_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_419, AgradCdfTestFixture, AgradCdfInvGamma_ffv_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_420, AgradCdfTestFixture, AgradCdfInvGamma_ffv_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_421, AgradCdfTestFixture, AgradCdfInvGamma_ffv_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_422, AgradCdfTestFixture, AgradCdfInvGamma_ffv_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_423, AgradCdfTestFixture, AgradCdfInvGamma_ffv_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_424, AgradCdfTestFixture, AgradCdfInvGamma_ffv_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_425, AgradCdfTestFixture, AgradCdfInvGamma_ffv_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_426, AgradCdfTestFixture, AgradCdfInvGamma_ffv_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_427, AgradCdfTestFixture, AgradCdfInvGamma_ffv_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_428, AgradCdfTestFixture, AgradCdfInvGamma_ffv_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_429, AgradCdfTestFixture, AgradCdfInvGamma_ffv_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_430, AgradCdfTestFixture, AgradCdfInvGamma_ffv_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_431, AgradCdfTestFixture, AgradCdfInvGamma_ffv_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_432, AgradCdfTestFixture, AgradCdfInvGamma_ffv_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_433, AgradCdfTestFixture, AgradCdfInvGamma_ffv_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_434, AgradCdfTestFixture, AgradCdfInvGamma_ffv_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_435, AgradCdfTestFixture, AgradCdfInvGamma_ffv_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_436, AgradCdfTestFixture, AgradCdfInvGamma_ffv_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_437, AgradCdfTestFixture, AgradCdfInvGamma_ffv_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_438, AgradCdfTestFixture, AgradCdfInvGamma_ffv_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_439, AgradCdfTestFixture, AgradCdfInvGamma_ffv_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_440, AgradCdfTestFixture, AgradCdfInvGamma_ffv_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_441, AgradCdfTestFixture, AgradCdfInvGamma_ffv_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_442, AgradCdfTestFixture, AgradCdfInvGamma_ffv_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_443, AgradCdfTestFixture, AgradCdfInvGamma_ffv_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_444, AgradCdfTestFixture, AgradCdfInvGamma_ffv_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_445, AgradCdfTestFixture, AgradCdfInvGamma_ffv_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_446, AgradCdfTestFixture, AgradCdfInvGamma_ffv_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfInvGamma_ffv_447, AgradCdfTestFixture, AgradCdfInvGamma_ffv_447);

