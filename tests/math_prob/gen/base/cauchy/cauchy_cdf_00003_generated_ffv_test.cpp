#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/cauchy/cauchy_cdf_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffv_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffv_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffv_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffv_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffv_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffv_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_399;

typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_300> AgradCdfCauchy_ffv_300;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_301> AgradCdfCauchy_ffv_301;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_302> AgradCdfCauchy_ffv_302;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_303> AgradCdfCauchy_ffv_303;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_304> AgradCdfCauchy_ffv_304;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_305> AgradCdfCauchy_ffv_305;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_306> AgradCdfCauchy_ffv_306;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_307> AgradCdfCauchy_ffv_307;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_308> AgradCdfCauchy_ffv_308;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_309> AgradCdfCauchy_ffv_309;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_310> AgradCdfCauchy_ffv_310;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_311> AgradCdfCauchy_ffv_311;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_312> AgradCdfCauchy_ffv_312;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_313> AgradCdfCauchy_ffv_313;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_314> AgradCdfCauchy_ffv_314;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_315> AgradCdfCauchy_ffv_315;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_316> AgradCdfCauchy_ffv_316;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_317> AgradCdfCauchy_ffv_317;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_318> AgradCdfCauchy_ffv_318;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_319> AgradCdfCauchy_ffv_319;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_320> AgradCdfCauchy_ffv_320;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_321> AgradCdfCauchy_ffv_321;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_322> AgradCdfCauchy_ffv_322;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_323> AgradCdfCauchy_ffv_323;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_324> AgradCdfCauchy_ffv_324;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_325> AgradCdfCauchy_ffv_325;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_326> AgradCdfCauchy_ffv_326;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_327> AgradCdfCauchy_ffv_327;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_328> AgradCdfCauchy_ffv_328;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_329> AgradCdfCauchy_ffv_329;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_330> AgradCdfCauchy_ffv_330;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_331> AgradCdfCauchy_ffv_331;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_332> AgradCdfCauchy_ffv_332;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_333> AgradCdfCauchy_ffv_333;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_334> AgradCdfCauchy_ffv_334;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_335> AgradCdfCauchy_ffv_335;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_336> AgradCdfCauchy_ffv_336;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_337> AgradCdfCauchy_ffv_337;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_338> AgradCdfCauchy_ffv_338;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_339> AgradCdfCauchy_ffv_339;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_340> AgradCdfCauchy_ffv_340;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_341> AgradCdfCauchy_ffv_341;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_342> AgradCdfCauchy_ffv_342;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_343> AgradCdfCauchy_ffv_343;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_344> AgradCdfCauchy_ffv_344;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_345> AgradCdfCauchy_ffv_345;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_346> AgradCdfCauchy_ffv_346;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_347> AgradCdfCauchy_ffv_347;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_348> AgradCdfCauchy_ffv_348;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_349> AgradCdfCauchy_ffv_349;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_350> AgradCdfCauchy_ffv_350;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_351> AgradCdfCauchy_ffv_351;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_352> AgradCdfCauchy_ffv_352;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_353> AgradCdfCauchy_ffv_353;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_354> AgradCdfCauchy_ffv_354;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_355> AgradCdfCauchy_ffv_355;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_356> AgradCdfCauchy_ffv_356;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_357> AgradCdfCauchy_ffv_357;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_358> AgradCdfCauchy_ffv_358;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_359> AgradCdfCauchy_ffv_359;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_360> AgradCdfCauchy_ffv_360;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_361> AgradCdfCauchy_ffv_361;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_362> AgradCdfCauchy_ffv_362;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_363> AgradCdfCauchy_ffv_363;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_364> AgradCdfCauchy_ffv_364;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_365> AgradCdfCauchy_ffv_365;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_366> AgradCdfCauchy_ffv_366;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_367> AgradCdfCauchy_ffv_367;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_368> AgradCdfCauchy_ffv_368;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_369> AgradCdfCauchy_ffv_369;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_370> AgradCdfCauchy_ffv_370;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_371> AgradCdfCauchy_ffv_371;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_372> AgradCdfCauchy_ffv_372;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_373> AgradCdfCauchy_ffv_373;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_374> AgradCdfCauchy_ffv_374;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_375> AgradCdfCauchy_ffv_375;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_376> AgradCdfCauchy_ffv_376;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_377> AgradCdfCauchy_ffv_377;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_378> AgradCdfCauchy_ffv_378;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_379> AgradCdfCauchy_ffv_379;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_380> AgradCdfCauchy_ffv_380;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_381> AgradCdfCauchy_ffv_381;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_382> AgradCdfCauchy_ffv_382;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_383> AgradCdfCauchy_ffv_383;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_384> AgradCdfCauchy_ffv_384;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_385> AgradCdfCauchy_ffv_385;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_386> AgradCdfCauchy_ffv_386;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_387> AgradCdfCauchy_ffv_387;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_388> AgradCdfCauchy_ffv_388;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_389> AgradCdfCauchy_ffv_389;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_390> AgradCdfCauchy_ffv_390;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_391> AgradCdfCauchy_ffv_391;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_392> AgradCdfCauchy_ffv_392;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_393> AgradCdfCauchy_ffv_393;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_394> AgradCdfCauchy_ffv_394;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_395> AgradCdfCauchy_ffv_395;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_396> AgradCdfCauchy_ffv_396;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_397> AgradCdfCauchy_ffv_397;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_398> AgradCdfCauchy_ffv_398;
typedef boost::mpl::vector<AgradCdfCauchy, type_ffv_399> AgradCdfCauchy_ffv_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_300, AgradCdfTestFixture, AgradCdfCauchy_ffv_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_301, AgradCdfTestFixture, AgradCdfCauchy_ffv_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_302, AgradCdfTestFixture, AgradCdfCauchy_ffv_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_303, AgradCdfTestFixture, AgradCdfCauchy_ffv_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_304, AgradCdfTestFixture, AgradCdfCauchy_ffv_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_305, AgradCdfTestFixture, AgradCdfCauchy_ffv_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_306, AgradCdfTestFixture, AgradCdfCauchy_ffv_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_307, AgradCdfTestFixture, AgradCdfCauchy_ffv_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_308, AgradCdfTestFixture, AgradCdfCauchy_ffv_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_309, AgradCdfTestFixture, AgradCdfCauchy_ffv_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_310, AgradCdfTestFixture, AgradCdfCauchy_ffv_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_311, AgradCdfTestFixture, AgradCdfCauchy_ffv_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_312, AgradCdfTestFixture, AgradCdfCauchy_ffv_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_313, AgradCdfTestFixture, AgradCdfCauchy_ffv_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_314, AgradCdfTestFixture, AgradCdfCauchy_ffv_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_315, AgradCdfTestFixture, AgradCdfCauchy_ffv_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_316, AgradCdfTestFixture, AgradCdfCauchy_ffv_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_317, AgradCdfTestFixture, AgradCdfCauchy_ffv_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_318, AgradCdfTestFixture, AgradCdfCauchy_ffv_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_319, AgradCdfTestFixture, AgradCdfCauchy_ffv_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_320, AgradCdfTestFixture, AgradCdfCauchy_ffv_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_321, AgradCdfTestFixture, AgradCdfCauchy_ffv_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_322, AgradCdfTestFixture, AgradCdfCauchy_ffv_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_323, AgradCdfTestFixture, AgradCdfCauchy_ffv_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_324, AgradCdfTestFixture, AgradCdfCauchy_ffv_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_325, AgradCdfTestFixture, AgradCdfCauchy_ffv_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_326, AgradCdfTestFixture, AgradCdfCauchy_ffv_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_327, AgradCdfTestFixture, AgradCdfCauchy_ffv_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_328, AgradCdfTestFixture, AgradCdfCauchy_ffv_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_329, AgradCdfTestFixture, AgradCdfCauchy_ffv_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_330, AgradCdfTestFixture, AgradCdfCauchy_ffv_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_331, AgradCdfTestFixture, AgradCdfCauchy_ffv_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_332, AgradCdfTestFixture, AgradCdfCauchy_ffv_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_333, AgradCdfTestFixture, AgradCdfCauchy_ffv_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_334, AgradCdfTestFixture, AgradCdfCauchy_ffv_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_335, AgradCdfTestFixture, AgradCdfCauchy_ffv_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_336, AgradCdfTestFixture, AgradCdfCauchy_ffv_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_337, AgradCdfTestFixture, AgradCdfCauchy_ffv_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_338, AgradCdfTestFixture, AgradCdfCauchy_ffv_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_339, AgradCdfTestFixture, AgradCdfCauchy_ffv_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_340, AgradCdfTestFixture, AgradCdfCauchy_ffv_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_341, AgradCdfTestFixture, AgradCdfCauchy_ffv_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_342, AgradCdfTestFixture, AgradCdfCauchy_ffv_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_343, AgradCdfTestFixture, AgradCdfCauchy_ffv_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_344, AgradCdfTestFixture, AgradCdfCauchy_ffv_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_345, AgradCdfTestFixture, AgradCdfCauchy_ffv_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_346, AgradCdfTestFixture, AgradCdfCauchy_ffv_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_347, AgradCdfTestFixture, AgradCdfCauchy_ffv_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_348, AgradCdfTestFixture, AgradCdfCauchy_ffv_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_349, AgradCdfTestFixture, AgradCdfCauchy_ffv_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_350, AgradCdfTestFixture, AgradCdfCauchy_ffv_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_351, AgradCdfTestFixture, AgradCdfCauchy_ffv_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_352, AgradCdfTestFixture, AgradCdfCauchy_ffv_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_353, AgradCdfTestFixture, AgradCdfCauchy_ffv_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_354, AgradCdfTestFixture, AgradCdfCauchy_ffv_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_355, AgradCdfTestFixture, AgradCdfCauchy_ffv_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_356, AgradCdfTestFixture, AgradCdfCauchy_ffv_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_357, AgradCdfTestFixture, AgradCdfCauchy_ffv_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_358, AgradCdfTestFixture, AgradCdfCauchy_ffv_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_359, AgradCdfTestFixture, AgradCdfCauchy_ffv_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_360, AgradCdfTestFixture, AgradCdfCauchy_ffv_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_361, AgradCdfTestFixture, AgradCdfCauchy_ffv_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_362, AgradCdfTestFixture, AgradCdfCauchy_ffv_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_363, AgradCdfTestFixture, AgradCdfCauchy_ffv_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_364, AgradCdfTestFixture, AgradCdfCauchy_ffv_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_365, AgradCdfTestFixture, AgradCdfCauchy_ffv_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_366, AgradCdfTestFixture, AgradCdfCauchy_ffv_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_367, AgradCdfTestFixture, AgradCdfCauchy_ffv_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_368, AgradCdfTestFixture, AgradCdfCauchy_ffv_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_369, AgradCdfTestFixture, AgradCdfCauchy_ffv_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_370, AgradCdfTestFixture, AgradCdfCauchy_ffv_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_371, AgradCdfTestFixture, AgradCdfCauchy_ffv_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_372, AgradCdfTestFixture, AgradCdfCauchy_ffv_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_373, AgradCdfTestFixture, AgradCdfCauchy_ffv_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_374, AgradCdfTestFixture, AgradCdfCauchy_ffv_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_375, AgradCdfTestFixture, AgradCdfCauchy_ffv_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_376, AgradCdfTestFixture, AgradCdfCauchy_ffv_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_377, AgradCdfTestFixture, AgradCdfCauchy_ffv_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_378, AgradCdfTestFixture, AgradCdfCauchy_ffv_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_379, AgradCdfTestFixture, AgradCdfCauchy_ffv_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_380, AgradCdfTestFixture, AgradCdfCauchy_ffv_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_381, AgradCdfTestFixture, AgradCdfCauchy_ffv_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_382, AgradCdfTestFixture, AgradCdfCauchy_ffv_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_383, AgradCdfTestFixture, AgradCdfCauchy_ffv_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_384, AgradCdfTestFixture, AgradCdfCauchy_ffv_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_385, AgradCdfTestFixture, AgradCdfCauchy_ffv_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_386, AgradCdfTestFixture, AgradCdfCauchy_ffv_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_387, AgradCdfTestFixture, AgradCdfCauchy_ffv_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_388, AgradCdfTestFixture, AgradCdfCauchy_ffv_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_389, AgradCdfTestFixture, AgradCdfCauchy_ffv_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_390, AgradCdfTestFixture, AgradCdfCauchy_ffv_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_391, AgradCdfTestFixture, AgradCdfCauchy_ffv_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_392, AgradCdfTestFixture, AgradCdfCauchy_ffv_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_393, AgradCdfTestFixture, AgradCdfCauchy_ffv_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_394, AgradCdfTestFixture, AgradCdfCauchy_ffv_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_395, AgradCdfTestFixture, AgradCdfCauchy_ffv_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_396, AgradCdfTestFixture, AgradCdfCauchy_ffv_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_397, AgradCdfTestFixture, AgradCdfCauchy_ffv_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_398, AgradCdfTestFixture, AgradCdfCauchy_ffv_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfCauchy_ffv_399, AgradCdfTestFixture, AgradCdfCauchy_ffv_399);

