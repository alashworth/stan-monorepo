#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/cauchy/cauchy_ccdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_300> AgradCcdfLogCauchy_ffd_300;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_301> AgradCcdfLogCauchy_ffd_301;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_302> AgradCcdfLogCauchy_ffd_302;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_303> AgradCcdfLogCauchy_ffd_303;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_304> AgradCcdfLogCauchy_ffd_304;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_305> AgradCcdfLogCauchy_ffd_305;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_306> AgradCcdfLogCauchy_ffd_306;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_307> AgradCcdfLogCauchy_ffd_307;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_308> AgradCcdfLogCauchy_ffd_308;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_309> AgradCcdfLogCauchy_ffd_309;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_310> AgradCcdfLogCauchy_ffd_310;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_311> AgradCcdfLogCauchy_ffd_311;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_312> AgradCcdfLogCauchy_ffd_312;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_313> AgradCcdfLogCauchy_ffd_313;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_314> AgradCcdfLogCauchy_ffd_314;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_315> AgradCcdfLogCauchy_ffd_315;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_316> AgradCcdfLogCauchy_ffd_316;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_317> AgradCcdfLogCauchy_ffd_317;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_318> AgradCcdfLogCauchy_ffd_318;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_319> AgradCcdfLogCauchy_ffd_319;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_320> AgradCcdfLogCauchy_ffd_320;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_321> AgradCcdfLogCauchy_ffd_321;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_322> AgradCcdfLogCauchy_ffd_322;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_323> AgradCcdfLogCauchy_ffd_323;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_324> AgradCcdfLogCauchy_ffd_324;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_325> AgradCcdfLogCauchy_ffd_325;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_326> AgradCcdfLogCauchy_ffd_326;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_327> AgradCcdfLogCauchy_ffd_327;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_328> AgradCcdfLogCauchy_ffd_328;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_329> AgradCcdfLogCauchy_ffd_329;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_330> AgradCcdfLogCauchy_ffd_330;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_331> AgradCcdfLogCauchy_ffd_331;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_332> AgradCcdfLogCauchy_ffd_332;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_333> AgradCcdfLogCauchy_ffd_333;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_334> AgradCcdfLogCauchy_ffd_334;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_335> AgradCcdfLogCauchy_ffd_335;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_336> AgradCcdfLogCauchy_ffd_336;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_337> AgradCcdfLogCauchy_ffd_337;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_338> AgradCcdfLogCauchy_ffd_338;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_339> AgradCcdfLogCauchy_ffd_339;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_340> AgradCcdfLogCauchy_ffd_340;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_341> AgradCcdfLogCauchy_ffd_341;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_342> AgradCcdfLogCauchy_ffd_342;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_343> AgradCcdfLogCauchy_ffd_343;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_344> AgradCcdfLogCauchy_ffd_344;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_345> AgradCcdfLogCauchy_ffd_345;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_346> AgradCcdfLogCauchy_ffd_346;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_347> AgradCcdfLogCauchy_ffd_347;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_348> AgradCcdfLogCauchy_ffd_348;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_349> AgradCcdfLogCauchy_ffd_349;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_350> AgradCcdfLogCauchy_ffd_350;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_351> AgradCcdfLogCauchy_ffd_351;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_352> AgradCcdfLogCauchy_ffd_352;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_353> AgradCcdfLogCauchy_ffd_353;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_354> AgradCcdfLogCauchy_ffd_354;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_355> AgradCcdfLogCauchy_ffd_355;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_356> AgradCcdfLogCauchy_ffd_356;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_357> AgradCcdfLogCauchy_ffd_357;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_358> AgradCcdfLogCauchy_ffd_358;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_359> AgradCcdfLogCauchy_ffd_359;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_360> AgradCcdfLogCauchy_ffd_360;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_361> AgradCcdfLogCauchy_ffd_361;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_362> AgradCcdfLogCauchy_ffd_362;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_363> AgradCcdfLogCauchy_ffd_363;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_364> AgradCcdfLogCauchy_ffd_364;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_365> AgradCcdfLogCauchy_ffd_365;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_366> AgradCcdfLogCauchy_ffd_366;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_367> AgradCcdfLogCauchy_ffd_367;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_368> AgradCcdfLogCauchy_ffd_368;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_369> AgradCcdfLogCauchy_ffd_369;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_370> AgradCcdfLogCauchy_ffd_370;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_371> AgradCcdfLogCauchy_ffd_371;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_372> AgradCcdfLogCauchy_ffd_372;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_373> AgradCcdfLogCauchy_ffd_373;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_374> AgradCcdfLogCauchy_ffd_374;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_375> AgradCcdfLogCauchy_ffd_375;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_376> AgradCcdfLogCauchy_ffd_376;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_377> AgradCcdfLogCauchy_ffd_377;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_378> AgradCcdfLogCauchy_ffd_378;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_379> AgradCcdfLogCauchy_ffd_379;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_380> AgradCcdfLogCauchy_ffd_380;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_381> AgradCcdfLogCauchy_ffd_381;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_382> AgradCcdfLogCauchy_ffd_382;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_383> AgradCcdfLogCauchy_ffd_383;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_384> AgradCcdfLogCauchy_ffd_384;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_385> AgradCcdfLogCauchy_ffd_385;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_386> AgradCcdfLogCauchy_ffd_386;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_387> AgradCcdfLogCauchy_ffd_387;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_388> AgradCcdfLogCauchy_ffd_388;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_389> AgradCcdfLogCauchy_ffd_389;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_390> AgradCcdfLogCauchy_ffd_390;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_391> AgradCcdfLogCauchy_ffd_391;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_392> AgradCcdfLogCauchy_ffd_392;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_393> AgradCcdfLogCauchy_ffd_393;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_394> AgradCcdfLogCauchy_ffd_394;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_395> AgradCcdfLogCauchy_ffd_395;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_396> AgradCcdfLogCauchy_ffd_396;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_397> AgradCcdfLogCauchy_ffd_397;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_398> AgradCcdfLogCauchy_ffd_398;
typedef boost::mpl::vector<AgradCcdfLogCauchy, type_ffd_399> AgradCcdfLogCauchy_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_300, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_301, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_302, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_303, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_304, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_305, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_306, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_307, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_308, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_309, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_310, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_311, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_312, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_313, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_314, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_315, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_316, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_317, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_318, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_319, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_320, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_321, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_322, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_323, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_324, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_325, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_326, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_327, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_328, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_329, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_330, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_331, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_332, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_333, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_334, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_335, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_336, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_337, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_338, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_339, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_340, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_341, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_342, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_343, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_344, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_345, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_346, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_347, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_348, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_349, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_350, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_351, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_352, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_353, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_354, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_355, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_356, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_357, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_358, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_359, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_360, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_361, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_362, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_363, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_364, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_365, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_366, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_367, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_368, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_369, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_370, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_371, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_372, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_373, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_374, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_375, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_376, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_377, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_378, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_379, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_380, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_381, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_382, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_383, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_384, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_385, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_386, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_387, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_388, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_389, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_390, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_391, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_392, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_393, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_394, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_395, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_396, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_397, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_398, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogCauchy_ffd_399, AgradCcdfLogTestFixture, AgradCcdfLogCauchy_ffd_399);

