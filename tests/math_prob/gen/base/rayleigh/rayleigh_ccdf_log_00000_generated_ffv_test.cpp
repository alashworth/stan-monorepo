#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <rayleigh/rayleigh_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<fvar<fvar<var> >, double, empty, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<fvar<fvar<var> >, std::vector<double>, empty, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, double, empty, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_47;

typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_0> AgradCcdfLogRayleigh_ffv_0;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_1> AgradCcdfLogRayleigh_ffv_1;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_2> AgradCcdfLogRayleigh_ffv_2;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_3> AgradCcdfLogRayleigh_ffv_3;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_4> AgradCcdfLogRayleigh_ffv_4;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_5> AgradCcdfLogRayleigh_ffv_5;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_6> AgradCcdfLogRayleigh_ffv_6;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_7> AgradCcdfLogRayleigh_ffv_7;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_8> AgradCcdfLogRayleigh_ffv_8;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_9> AgradCcdfLogRayleigh_ffv_9;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_10> AgradCcdfLogRayleigh_ffv_10;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_11> AgradCcdfLogRayleigh_ffv_11;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_12> AgradCcdfLogRayleigh_ffv_12;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_13> AgradCcdfLogRayleigh_ffv_13;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_14> AgradCcdfLogRayleigh_ffv_14;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_15> AgradCcdfLogRayleigh_ffv_15;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_16> AgradCcdfLogRayleigh_ffv_16;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_17> AgradCcdfLogRayleigh_ffv_17;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_18> AgradCcdfLogRayleigh_ffv_18;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_19> AgradCcdfLogRayleigh_ffv_19;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_20> AgradCcdfLogRayleigh_ffv_20;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_21> AgradCcdfLogRayleigh_ffv_21;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_22> AgradCcdfLogRayleigh_ffv_22;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_23> AgradCcdfLogRayleigh_ffv_23;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_24> AgradCcdfLogRayleigh_ffv_24;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_25> AgradCcdfLogRayleigh_ffv_25;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_26> AgradCcdfLogRayleigh_ffv_26;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_27> AgradCcdfLogRayleigh_ffv_27;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_28> AgradCcdfLogRayleigh_ffv_28;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_29> AgradCcdfLogRayleigh_ffv_29;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_30> AgradCcdfLogRayleigh_ffv_30;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_31> AgradCcdfLogRayleigh_ffv_31;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_32> AgradCcdfLogRayleigh_ffv_32;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_33> AgradCcdfLogRayleigh_ffv_33;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_34> AgradCcdfLogRayleigh_ffv_34;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_35> AgradCcdfLogRayleigh_ffv_35;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_36> AgradCcdfLogRayleigh_ffv_36;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_37> AgradCcdfLogRayleigh_ffv_37;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_38> AgradCcdfLogRayleigh_ffv_38;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_39> AgradCcdfLogRayleigh_ffv_39;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_40> AgradCcdfLogRayleigh_ffv_40;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_41> AgradCcdfLogRayleigh_ffv_41;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_42> AgradCcdfLogRayleigh_ffv_42;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_43> AgradCcdfLogRayleigh_ffv_43;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_44> AgradCcdfLogRayleigh_ffv_44;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_45> AgradCcdfLogRayleigh_ffv_45;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_46> AgradCcdfLogRayleigh_ffv_46;
typedef boost::mpl::vector<AgradCcdfLogRayleigh, type_ffv_47> AgradCcdfLogRayleigh_ffv_47;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_0, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_1, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_2, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_3, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_4, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_5, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_6, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_7, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_8, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_9, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_10, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_11, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_12, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_13, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_14, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_15, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_16, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_17, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_18, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_19, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_20, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_21, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_22, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_23, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_24, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_25, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_26, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_27, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_28, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_29, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_30, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_31, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_32, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_33, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_34, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_35, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_36, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_37, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_38, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_39, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_40, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_41, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_42, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_43, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_44, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_45, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_46, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogRayleigh_ffv_47, AgradCcdfLogTestFixture, AgradCcdfLogRayleigh_ffv_47);

