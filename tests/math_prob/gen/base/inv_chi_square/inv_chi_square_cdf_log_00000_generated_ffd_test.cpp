#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <inv_chi_square/inv_chi_square_cdf_log_test.hpp>

typedef boost::mpl::vector<double, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_0;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_1;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_2;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_3;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_4;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_5;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_6;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_7;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_8;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_9;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_10;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_11;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_12;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_13;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_14;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_15;
typedef boost::mpl::vector<fvar<fvar<double> >, double, empty, empty, empty, empty> type_ffd_16;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, empty, empty, empty, empty> type_ffd_17;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_18;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_19;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_20;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_21;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_22;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_23;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, empty, empty, empty, empty> type_ffd_24;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty, empty> type_ffd_25;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_26;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_27;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_28;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_29;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_30;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_31;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_ffd_32;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_ffd_33;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_34;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_35;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_36;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_37;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_38;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_39;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_ffd_40;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_ffd_41;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_42;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_43;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty, empty> type_ffd_44;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty, empty> type_ffd_45;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffd_46;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffd_47;

typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_0> AgradCdfLogInvChiSquare_ffd_0;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_1> AgradCdfLogInvChiSquare_ffd_1;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_2> AgradCdfLogInvChiSquare_ffd_2;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_3> AgradCdfLogInvChiSquare_ffd_3;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_4> AgradCdfLogInvChiSquare_ffd_4;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_5> AgradCdfLogInvChiSquare_ffd_5;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_6> AgradCdfLogInvChiSquare_ffd_6;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_7> AgradCdfLogInvChiSquare_ffd_7;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_8> AgradCdfLogInvChiSquare_ffd_8;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_9> AgradCdfLogInvChiSquare_ffd_9;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_10> AgradCdfLogInvChiSquare_ffd_10;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_11> AgradCdfLogInvChiSquare_ffd_11;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_12> AgradCdfLogInvChiSquare_ffd_12;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_13> AgradCdfLogInvChiSquare_ffd_13;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_14> AgradCdfLogInvChiSquare_ffd_14;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_15> AgradCdfLogInvChiSquare_ffd_15;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_16> AgradCdfLogInvChiSquare_ffd_16;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_17> AgradCdfLogInvChiSquare_ffd_17;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_18> AgradCdfLogInvChiSquare_ffd_18;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_19> AgradCdfLogInvChiSquare_ffd_19;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_20> AgradCdfLogInvChiSquare_ffd_20;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_21> AgradCdfLogInvChiSquare_ffd_21;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_22> AgradCdfLogInvChiSquare_ffd_22;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_23> AgradCdfLogInvChiSquare_ffd_23;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_24> AgradCdfLogInvChiSquare_ffd_24;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_25> AgradCdfLogInvChiSquare_ffd_25;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_26> AgradCdfLogInvChiSquare_ffd_26;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_27> AgradCdfLogInvChiSquare_ffd_27;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_28> AgradCdfLogInvChiSquare_ffd_28;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_29> AgradCdfLogInvChiSquare_ffd_29;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_30> AgradCdfLogInvChiSquare_ffd_30;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_31> AgradCdfLogInvChiSquare_ffd_31;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_32> AgradCdfLogInvChiSquare_ffd_32;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_33> AgradCdfLogInvChiSquare_ffd_33;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_34> AgradCdfLogInvChiSquare_ffd_34;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_35> AgradCdfLogInvChiSquare_ffd_35;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_36> AgradCdfLogInvChiSquare_ffd_36;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_37> AgradCdfLogInvChiSquare_ffd_37;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_38> AgradCdfLogInvChiSquare_ffd_38;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_39> AgradCdfLogInvChiSquare_ffd_39;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_40> AgradCdfLogInvChiSquare_ffd_40;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_41> AgradCdfLogInvChiSquare_ffd_41;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_42> AgradCdfLogInvChiSquare_ffd_42;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_43> AgradCdfLogInvChiSquare_ffd_43;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_44> AgradCdfLogInvChiSquare_ffd_44;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_45> AgradCdfLogInvChiSquare_ffd_45;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_46> AgradCdfLogInvChiSquare_ffd_46;
typedef boost::mpl::vector<AgradCdfLogInvChiSquare, type_ffd_47> AgradCdfLogInvChiSquare_ffd_47;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_0, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_1, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_2, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_3, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_4, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_5, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_6, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_7, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_8, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_9, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_10, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_11, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_12, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_13, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_14, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_15, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_16, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_17, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_18, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_19, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_20, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_21, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_22, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_23, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_24, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_25, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_26, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_27, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_28, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_29, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_30, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_31, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_32, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_33, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_34, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_35, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_36, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_37, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_38, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_39, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_40, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_41, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_42, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_43, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_44, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_45, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_46, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogInvChiSquare_ffd_47, AgradCdfLogTestFixture, AgradCdfLogInvChiSquare_ffd_47);

