#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <inv_chi_square/inv_chi_square_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<fvar<fvar<var> >, double, empty, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<fvar<fvar<var> >, std::vector<double>, empty, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, double, empty, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_ffv_47;

typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_0> AgradCcdfLogInvChiSquare_ffv_0;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_1> AgradCcdfLogInvChiSquare_ffv_1;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_2> AgradCcdfLogInvChiSquare_ffv_2;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_3> AgradCcdfLogInvChiSquare_ffv_3;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_4> AgradCcdfLogInvChiSquare_ffv_4;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_5> AgradCcdfLogInvChiSquare_ffv_5;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_6> AgradCcdfLogInvChiSquare_ffv_6;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_7> AgradCcdfLogInvChiSquare_ffv_7;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_8> AgradCcdfLogInvChiSquare_ffv_8;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_9> AgradCcdfLogInvChiSquare_ffv_9;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_10> AgradCcdfLogInvChiSquare_ffv_10;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_11> AgradCcdfLogInvChiSquare_ffv_11;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_12> AgradCcdfLogInvChiSquare_ffv_12;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_13> AgradCcdfLogInvChiSquare_ffv_13;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_14> AgradCcdfLogInvChiSquare_ffv_14;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_15> AgradCcdfLogInvChiSquare_ffv_15;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_16> AgradCcdfLogInvChiSquare_ffv_16;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_17> AgradCcdfLogInvChiSquare_ffv_17;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_18> AgradCcdfLogInvChiSquare_ffv_18;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_19> AgradCcdfLogInvChiSquare_ffv_19;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_20> AgradCcdfLogInvChiSquare_ffv_20;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_21> AgradCcdfLogInvChiSquare_ffv_21;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_22> AgradCcdfLogInvChiSquare_ffv_22;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_23> AgradCcdfLogInvChiSquare_ffv_23;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_24> AgradCcdfLogInvChiSquare_ffv_24;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_25> AgradCcdfLogInvChiSquare_ffv_25;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_26> AgradCcdfLogInvChiSquare_ffv_26;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_27> AgradCcdfLogInvChiSquare_ffv_27;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_28> AgradCcdfLogInvChiSquare_ffv_28;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_29> AgradCcdfLogInvChiSquare_ffv_29;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_30> AgradCcdfLogInvChiSquare_ffv_30;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_31> AgradCcdfLogInvChiSquare_ffv_31;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_32> AgradCcdfLogInvChiSquare_ffv_32;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_33> AgradCcdfLogInvChiSquare_ffv_33;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_34> AgradCcdfLogInvChiSquare_ffv_34;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_35> AgradCcdfLogInvChiSquare_ffv_35;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_36> AgradCcdfLogInvChiSquare_ffv_36;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_37> AgradCcdfLogInvChiSquare_ffv_37;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_38> AgradCcdfLogInvChiSquare_ffv_38;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_39> AgradCcdfLogInvChiSquare_ffv_39;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_40> AgradCcdfLogInvChiSquare_ffv_40;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_41> AgradCcdfLogInvChiSquare_ffv_41;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_42> AgradCcdfLogInvChiSquare_ffv_42;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_43> AgradCcdfLogInvChiSquare_ffv_43;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_44> AgradCcdfLogInvChiSquare_ffv_44;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_45> AgradCcdfLogInvChiSquare_ffv_45;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_46> AgradCcdfLogInvChiSquare_ffv_46;
typedef boost::mpl::vector<AgradCcdfLogInvChiSquare, type_ffv_47> AgradCcdfLogInvChiSquare_ffv_47;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_0, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_1, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_2, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_3, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_4, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_5, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_6, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_7, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_8, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_9, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_10, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_11, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_12, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_13, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_14, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_15, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_16, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_17, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_18, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_19, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_20, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_21, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_22, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_23, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_24, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_25, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_26, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_27, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_28, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_29, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_30, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_31, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_32, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_33, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_34, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_35, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_36, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_37, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_38, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_39, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_40, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_41, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_42, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_43, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_44, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_45, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_46, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogInvChiSquare_ffv_47, AgradCcdfLogTestFixture, AgradCcdfLogInvChiSquare_ffv_47);

