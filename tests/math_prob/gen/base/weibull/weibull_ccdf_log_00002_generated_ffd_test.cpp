#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <weibull/weibull_ccdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_400;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_401;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_402;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_403;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_404;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_405;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_406;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_407;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_408;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_409;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_410;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_411;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_412;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_413;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_414;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_415;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_416;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_417;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_418;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_419;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_420;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_421;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_422;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_423;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_424;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_425;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_426;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_427;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_428;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_429;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_430;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_431;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_432;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_433;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_434;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_435;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_436;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_437;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_438;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_439;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_440;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_441;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_442;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_443;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_444;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_445;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_446;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_447;

typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_400> AgradCcdfLogWeibull_ffd_400;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_401> AgradCcdfLogWeibull_ffd_401;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_402> AgradCcdfLogWeibull_ffd_402;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_403> AgradCcdfLogWeibull_ffd_403;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_404> AgradCcdfLogWeibull_ffd_404;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_405> AgradCcdfLogWeibull_ffd_405;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_406> AgradCcdfLogWeibull_ffd_406;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_407> AgradCcdfLogWeibull_ffd_407;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_408> AgradCcdfLogWeibull_ffd_408;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_409> AgradCcdfLogWeibull_ffd_409;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_410> AgradCcdfLogWeibull_ffd_410;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_411> AgradCcdfLogWeibull_ffd_411;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_412> AgradCcdfLogWeibull_ffd_412;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_413> AgradCcdfLogWeibull_ffd_413;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_414> AgradCcdfLogWeibull_ffd_414;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_415> AgradCcdfLogWeibull_ffd_415;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_416> AgradCcdfLogWeibull_ffd_416;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_417> AgradCcdfLogWeibull_ffd_417;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_418> AgradCcdfLogWeibull_ffd_418;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_419> AgradCcdfLogWeibull_ffd_419;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_420> AgradCcdfLogWeibull_ffd_420;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_421> AgradCcdfLogWeibull_ffd_421;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_422> AgradCcdfLogWeibull_ffd_422;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_423> AgradCcdfLogWeibull_ffd_423;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_424> AgradCcdfLogWeibull_ffd_424;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_425> AgradCcdfLogWeibull_ffd_425;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_426> AgradCcdfLogWeibull_ffd_426;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_427> AgradCcdfLogWeibull_ffd_427;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_428> AgradCcdfLogWeibull_ffd_428;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_429> AgradCcdfLogWeibull_ffd_429;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_430> AgradCcdfLogWeibull_ffd_430;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_431> AgradCcdfLogWeibull_ffd_431;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_432> AgradCcdfLogWeibull_ffd_432;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_433> AgradCcdfLogWeibull_ffd_433;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_434> AgradCcdfLogWeibull_ffd_434;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_435> AgradCcdfLogWeibull_ffd_435;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_436> AgradCcdfLogWeibull_ffd_436;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_437> AgradCcdfLogWeibull_ffd_437;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_438> AgradCcdfLogWeibull_ffd_438;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_439> AgradCcdfLogWeibull_ffd_439;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_440> AgradCcdfLogWeibull_ffd_440;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_441> AgradCcdfLogWeibull_ffd_441;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_442> AgradCcdfLogWeibull_ffd_442;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_443> AgradCcdfLogWeibull_ffd_443;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_444> AgradCcdfLogWeibull_ffd_444;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_445> AgradCcdfLogWeibull_ffd_445;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_446> AgradCcdfLogWeibull_ffd_446;
typedef boost::mpl::vector<AgradCcdfLogWeibull, type_ffd_447> AgradCcdfLogWeibull_ffd_447;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_400, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_401, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_402, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_403, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_404, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_405, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_406, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_407, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_408, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_409, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_410, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_411, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_412, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_413, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_414, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_415, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_416, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_417, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_418, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_419, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_420, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_421, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_422, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_423, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_424, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_425, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_426, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_427, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_428, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_429, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_430, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_431, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_432, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_433, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_434, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_435, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_436, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_437, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_438, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_439, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_440, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_441, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_442, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_443, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_444, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_445, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_446, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogWeibull_ffd_447, AgradCcdfLogTestFixture, AgradCcdfLogWeibull_ffd_447);

