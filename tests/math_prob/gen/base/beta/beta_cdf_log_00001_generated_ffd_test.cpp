#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta/beta_cdf_log_test.hpp>

typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, double, empty, empty, empty> type_ffd_200;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_201;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_202;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_203;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_204;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_205;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_206;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_207;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_208;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_209;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_210;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_211;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_212;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_213;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_214;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_215;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_216;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_217;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_218;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_219;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_220;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_221;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_222;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_223;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_224;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_225;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_226;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_227;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_228;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_229;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_230;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_231;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_232;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_233;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_234;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_235;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_236;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_237;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_238;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_239;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_240;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_241;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_242;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_243;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_244;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_245;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_246;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_247;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_248;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_249;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_250;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_251;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_252;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_253;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_254;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_255;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, double, empty, empty, empty> type_ffd_256;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<double>, empty, empty, empty> type_ffd_257;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_258;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_259;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_260;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_261;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_262;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_263;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, double, empty, empty, empty> type_ffd_264;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_265;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_266;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_267;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_268;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_269;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_270;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_271;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_272;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_273;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_274;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_275;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_276;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_277;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_278;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_279;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_280;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_281;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_282;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_283;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_284;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_285;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_286;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_287;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_288;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_289;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_290;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_291;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_292;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_293;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_294;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_295;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_296;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_297;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_298;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_299;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_200> AgradCdfLogBeta_ffd_200;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_201> AgradCdfLogBeta_ffd_201;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_202> AgradCdfLogBeta_ffd_202;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_203> AgradCdfLogBeta_ffd_203;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_204> AgradCdfLogBeta_ffd_204;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_205> AgradCdfLogBeta_ffd_205;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_206> AgradCdfLogBeta_ffd_206;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_207> AgradCdfLogBeta_ffd_207;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_208> AgradCdfLogBeta_ffd_208;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_209> AgradCdfLogBeta_ffd_209;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_210> AgradCdfLogBeta_ffd_210;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_211> AgradCdfLogBeta_ffd_211;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_212> AgradCdfLogBeta_ffd_212;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_213> AgradCdfLogBeta_ffd_213;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_214> AgradCdfLogBeta_ffd_214;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_215> AgradCdfLogBeta_ffd_215;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_216> AgradCdfLogBeta_ffd_216;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_217> AgradCdfLogBeta_ffd_217;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_218> AgradCdfLogBeta_ffd_218;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_219> AgradCdfLogBeta_ffd_219;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_220> AgradCdfLogBeta_ffd_220;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_221> AgradCdfLogBeta_ffd_221;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_222> AgradCdfLogBeta_ffd_222;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_223> AgradCdfLogBeta_ffd_223;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_224> AgradCdfLogBeta_ffd_224;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_225> AgradCdfLogBeta_ffd_225;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_226> AgradCdfLogBeta_ffd_226;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_227> AgradCdfLogBeta_ffd_227;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_228> AgradCdfLogBeta_ffd_228;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_229> AgradCdfLogBeta_ffd_229;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_230> AgradCdfLogBeta_ffd_230;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_231> AgradCdfLogBeta_ffd_231;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_232> AgradCdfLogBeta_ffd_232;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_233> AgradCdfLogBeta_ffd_233;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_234> AgradCdfLogBeta_ffd_234;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_235> AgradCdfLogBeta_ffd_235;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_236> AgradCdfLogBeta_ffd_236;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_237> AgradCdfLogBeta_ffd_237;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_238> AgradCdfLogBeta_ffd_238;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_239> AgradCdfLogBeta_ffd_239;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_240> AgradCdfLogBeta_ffd_240;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_241> AgradCdfLogBeta_ffd_241;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_242> AgradCdfLogBeta_ffd_242;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_243> AgradCdfLogBeta_ffd_243;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_244> AgradCdfLogBeta_ffd_244;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_245> AgradCdfLogBeta_ffd_245;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_246> AgradCdfLogBeta_ffd_246;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_247> AgradCdfLogBeta_ffd_247;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_248> AgradCdfLogBeta_ffd_248;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_249> AgradCdfLogBeta_ffd_249;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_250> AgradCdfLogBeta_ffd_250;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_251> AgradCdfLogBeta_ffd_251;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_252> AgradCdfLogBeta_ffd_252;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_253> AgradCdfLogBeta_ffd_253;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_254> AgradCdfLogBeta_ffd_254;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_255> AgradCdfLogBeta_ffd_255;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_256> AgradCdfLogBeta_ffd_256;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_257> AgradCdfLogBeta_ffd_257;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_258> AgradCdfLogBeta_ffd_258;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_259> AgradCdfLogBeta_ffd_259;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_260> AgradCdfLogBeta_ffd_260;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_261> AgradCdfLogBeta_ffd_261;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_262> AgradCdfLogBeta_ffd_262;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_263> AgradCdfLogBeta_ffd_263;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_264> AgradCdfLogBeta_ffd_264;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_265> AgradCdfLogBeta_ffd_265;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_266> AgradCdfLogBeta_ffd_266;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_267> AgradCdfLogBeta_ffd_267;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_268> AgradCdfLogBeta_ffd_268;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_269> AgradCdfLogBeta_ffd_269;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_270> AgradCdfLogBeta_ffd_270;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_271> AgradCdfLogBeta_ffd_271;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_272> AgradCdfLogBeta_ffd_272;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_273> AgradCdfLogBeta_ffd_273;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_274> AgradCdfLogBeta_ffd_274;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_275> AgradCdfLogBeta_ffd_275;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_276> AgradCdfLogBeta_ffd_276;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_277> AgradCdfLogBeta_ffd_277;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_278> AgradCdfLogBeta_ffd_278;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_279> AgradCdfLogBeta_ffd_279;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_280> AgradCdfLogBeta_ffd_280;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_281> AgradCdfLogBeta_ffd_281;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_282> AgradCdfLogBeta_ffd_282;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_283> AgradCdfLogBeta_ffd_283;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_284> AgradCdfLogBeta_ffd_284;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_285> AgradCdfLogBeta_ffd_285;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_286> AgradCdfLogBeta_ffd_286;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_287> AgradCdfLogBeta_ffd_287;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_288> AgradCdfLogBeta_ffd_288;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_289> AgradCdfLogBeta_ffd_289;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_290> AgradCdfLogBeta_ffd_290;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_291> AgradCdfLogBeta_ffd_291;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_292> AgradCdfLogBeta_ffd_292;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_293> AgradCdfLogBeta_ffd_293;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_294> AgradCdfLogBeta_ffd_294;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_295> AgradCdfLogBeta_ffd_295;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_296> AgradCdfLogBeta_ffd_296;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_297> AgradCdfLogBeta_ffd_297;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_298> AgradCdfLogBeta_ffd_298;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_299> AgradCdfLogBeta_ffd_299;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_300> AgradCdfLogBeta_ffd_300;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_301> AgradCdfLogBeta_ffd_301;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_302> AgradCdfLogBeta_ffd_302;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_303> AgradCdfLogBeta_ffd_303;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_304> AgradCdfLogBeta_ffd_304;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_305> AgradCdfLogBeta_ffd_305;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_306> AgradCdfLogBeta_ffd_306;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_307> AgradCdfLogBeta_ffd_307;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_308> AgradCdfLogBeta_ffd_308;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_309> AgradCdfLogBeta_ffd_309;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_310> AgradCdfLogBeta_ffd_310;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_311> AgradCdfLogBeta_ffd_311;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_312> AgradCdfLogBeta_ffd_312;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_313> AgradCdfLogBeta_ffd_313;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_314> AgradCdfLogBeta_ffd_314;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_315> AgradCdfLogBeta_ffd_315;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_316> AgradCdfLogBeta_ffd_316;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_317> AgradCdfLogBeta_ffd_317;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_318> AgradCdfLogBeta_ffd_318;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_319> AgradCdfLogBeta_ffd_319;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_320> AgradCdfLogBeta_ffd_320;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_321> AgradCdfLogBeta_ffd_321;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_322> AgradCdfLogBeta_ffd_322;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_323> AgradCdfLogBeta_ffd_323;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_324> AgradCdfLogBeta_ffd_324;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_325> AgradCdfLogBeta_ffd_325;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_326> AgradCdfLogBeta_ffd_326;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_327> AgradCdfLogBeta_ffd_327;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_328> AgradCdfLogBeta_ffd_328;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_329> AgradCdfLogBeta_ffd_329;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_330> AgradCdfLogBeta_ffd_330;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_331> AgradCdfLogBeta_ffd_331;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_332> AgradCdfLogBeta_ffd_332;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_333> AgradCdfLogBeta_ffd_333;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_334> AgradCdfLogBeta_ffd_334;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_335> AgradCdfLogBeta_ffd_335;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_336> AgradCdfLogBeta_ffd_336;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_337> AgradCdfLogBeta_ffd_337;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_338> AgradCdfLogBeta_ffd_338;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_339> AgradCdfLogBeta_ffd_339;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_340> AgradCdfLogBeta_ffd_340;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_341> AgradCdfLogBeta_ffd_341;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_342> AgradCdfLogBeta_ffd_342;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_343> AgradCdfLogBeta_ffd_343;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_344> AgradCdfLogBeta_ffd_344;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_345> AgradCdfLogBeta_ffd_345;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_346> AgradCdfLogBeta_ffd_346;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_347> AgradCdfLogBeta_ffd_347;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_348> AgradCdfLogBeta_ffd_348;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_349> AgradCdfLogBeta_ffd_349;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_350> AgradCdfLogBeta_ffd_350;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_351> AgradCdfLogBeta_ffd_351;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_352> AgradCdfLogBeta_ffd_352;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_353> AgradCdfLogBeta_ffd_353;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_354> AgradCdfLogBeta_ffd_354;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_355> AgradCdfLogBeta_ffd_355;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_356> AgradCdfLogBeta_ffd_356;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_357> AgradCdfLogBeta_ffd_357;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_358> AgradCdfLogBeta_ffd_358;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_359> AgradCdfLogBeta_ffd_359;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_360> AgradCdfLogBeta_ffd_360;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_361> AgradCdfLogBeta_ffd_361;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_362> AgradCdfLogBeta_ffd_362;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_363> AgradCdfLogBeta_ffd_363;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_364> AgradCdfLogBeta_ffd_364;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_365> AgradCdfLogBeta_ffd_365;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_366> AgradCdfLogBeta_ffd_366;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_367> AgradCdfLogBeta_ffd_367;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_368> AgradCdfLogBeta_ffd_368;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_369> AgradCdfLogBeta_ffd_369;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_370> AgradCdfLogBeta_ffd_370;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_371> AgradCdfLogBeta_ffd_371;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_372> AgradCdfLogBeta_ffd_372;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_373> AgradCdfLogBeta_ffd_373;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_374> AgradCdfLogBeta_ffd_374;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_375> AgradCdfLogBeta_ffd_375;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_376> AgradCdfLogBeta_ffd_376;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_377> AgradCdfLogBeta_ffd_377;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_378> AgradCdfLogBeta_ffd_378;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_379> AgradCdfLogBeta_ffd_379;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_380> AgradCdfLogBeta_ffd_380;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_381> AgradCdfLogBeta_ffd_381;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_382> AgradCdfLogBeta_ffd_382;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_383> AgradCdfLogBeta_ffd_383;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_384> AgradCdfLogBeta_ffd_384;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_385> AgradCdfLogBeta_ffd_385;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_386> AgradCdfLogBeta_ffd_386;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_387> AgradCdfLogBeta_ffd_387;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_388> AgradCdfLogBeta_ffd_388;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_389> AgradCdfLogBeta_ffd_389;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_390> AgradCdfLogBeta_ffd_390;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_391> AgradCdfLogBeta_ffd_391;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_392> AgradCdfLogBeta_ffd_392;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_393> AgradCdfLogBeta_ffd_393;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_394> AgradCdfLogBeta_ffd_394;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_395> AgradCdfLogBeta_ffd_395;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_396> AgradCdfLogBeta_ffd_396;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_397> AgradCdfLogBeta_ffd_397;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_398> AgradCdfLogBeta_ffd_398;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffd_399> AgradCdfLogBeta_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_200, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_201, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_202, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_203, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_204, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_205, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_206, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_207, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_208, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_209, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_210, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_211, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_212, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_213, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_214, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_215, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_216, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_217, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_218, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_219, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_220, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_221, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_222, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_223, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_224, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_225, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_226, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_227, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_228, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_229, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_230, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_231, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_232, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_233, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_234, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_235, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_236, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_237, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_238, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_239, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_240, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_241, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_242, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_243, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_244, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_245, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_246, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_247, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_248, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_249, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_250, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_251, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_252, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_253, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_254, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_255, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_256, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_257, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_258, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_259, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_260, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_261, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_262, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_263, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_264, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_265, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_266, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_267, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_268, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_269, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_270, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_271, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_272, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_273, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_274, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_275, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_276, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_277, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_278, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_279, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_280, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_281, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_282, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_283, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_284, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_285, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_286, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_287, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_288, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_289, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_290, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_291, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_292, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_293, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_294, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_295, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_296, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_297, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_298, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_299, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_300, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_301, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_302, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_303, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_304, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_305, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_306, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_307, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_308, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_309, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_310, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_311, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_312, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_313, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_314, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_315, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_316, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_317, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_318, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_319, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_320, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_321, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_322, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_323, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_324, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_325, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_326, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_327, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_328, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_329, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_330, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_331, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_332, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_333, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_334, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_335, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_336, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_337, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_338, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_339, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_340, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_341, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_342, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_343, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_344, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_345, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_346, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_347, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_348, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_349, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_350, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_351, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_352, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_353, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_354, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_355, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_356, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_357, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_358, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_359, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_360, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_361, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_362, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_363, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_364, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_365, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_366, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_367, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_368, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_369, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_370, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_371, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_372, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_373, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_374, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_375, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_376, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_377, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_378, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_379, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_380, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_381, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_382, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_383, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_384, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_385, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_386, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_387, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_388, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_389, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_390, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_391, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_392, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_393, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_394, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_395, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_396, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_397, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_398, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffd_399, AgradCdfLogTestFixture, AgradCdfLogBeta_ffd_399);

