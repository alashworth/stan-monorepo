#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/beta/beta_ccdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffv_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffv_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffv_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffv_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffv_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffv_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_399;

typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_300> AgradCcdfLogBeta_ffv_300;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_301> AgradCcdfLogBeta_ffv_301;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_302> AgradCcdfLogBeta_ffv_302;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_303> AgradCcdfLogBeta_ffv_303;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_304> AgradCcdfLogBeta_ffv_304;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_305> AgradCcdfLogBeta_ffv_305;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_306> AgradCcdfLogBeta_ffv_306;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_307> AgradCcdfLogBeta_ffv_307;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_308> AgradCcdfLogBeta_ffv_308;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_309> AgradCcdfLogBeta_ffv_309;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_310> AgradCcdfLogBeta_ffv_310;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_311> AgradCcdfLogBeta_ffv_311;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_312> AgradCcdfLogBeta_ffv_312;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_313> AgradCcdfLogBeta_ffv_313;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_314> AgradCcdfLogBeta_ffv_314;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_315> AgradCcdfLogBeta_ffv_315;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_316> AgradCcdfLogBeta_ffv_316;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_317> AgradCcdfLogBeta_ffv_317;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_318> AgradCcdfLogBeta_ffv_318;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_319> AgradCcdfLogBeta_ffv_319;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_320> AgradCcdfLogBeta_ffv_320;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_321> AgradCcdfLogBeta_ffv_321;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_322> AgradCcdfLogBeta_ffv_322;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_323> AgradCcdfLogBeta_ffv_323;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_324> AgradCcdfLogBeta_ffv_324;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_325> AgradCcdfLogBeta_ffv_325;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_326> AgradCcdfLogBeta_ffv_326;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_327> AgradCcdfLogBeta_ffv_327;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_328> AgradCcdfLogBeta_ffv_328;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_329> AgradCcdfLogBeta_ffv_329;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_330> AgradCcdfLogBeta_ffv_330;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_331> AgradCcdfLogBeta_ffv_331;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_332> AgradCcdfLogBeta_ffv_332;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_333> AgradCcdfLogBeta_ffv_333;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_334> AgradCcdfLogBeta_ffv_334;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_335> AgradCcdfLogBeta_ffv_335;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_336> AgradCcdfLogBeta_ffv_336;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_337> AgradCcdfLogBeta_ffv_337;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_338> AgradCcdfLogBeta_ffv_338;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_339> AgradCcdfLogBeta_ffv_339;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_340> AgradCcdfLogBeta_ffv_340;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_341> AgradCcdfLogBeta_ffv_341;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_342> AgradCcdfLogBeta_ffv_342;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_343> AgradCcdfLogBeta_ffv_343;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_344> AgradCcdfLogBeta_ffv_344;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_345> AgradCcdfLogBeta_ffv_345;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_346> AgradCcdfLogBeta_ffv_346;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_347> AgradCcdfLogBeta_ffv_347;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_348> AgradCcdfLogBeta_ffv_348;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_349> AgradCcdfLogBeta_ffv_349;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_350> AgradCcdfLogBeta_ffv_350;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_351> AgradCcdfLogBeta_ffv_351;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_352> AgradCcdfLogBeta_ffv_352;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_353> AgradCcdfLogBeta_ffv_353;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_354> AgradCcdfLogBeta_ffv_354;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_355> AgradCcdfLogBeta_ffv_355;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_356> AgradCcdfLogBeta_ffv_356;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_357> AgradCcdfLogBeta_ffv_357;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_358> AgradCcdfLogBeta_ffv_358;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_359> AgradCcdfLogBeta_ffv_359;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_360> AgradCcdfLogBeta_ffv_360;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_361> AgradCcdfLogBeta_ffv_361;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_362> AgradCcdfLogBeta_ffv_362;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_363> AgradCcdfLogBeta_ffv_363;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_364> AgradCcdfLogBeta_ffv_364;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_365> AgradCcdfLogBeta_ffv_365;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_366> AgradCcdfLogBeta_ffv_366;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_367> AgradCcdfLogBeta_ffv_367;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_368> AgradCcdfLogBeta_ffv_368;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_369> AgradCcdfLogBeta_ffv_369;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_370> AgradCcdfLogBeta_ffv_370;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_371> AgradCcdfLogBeta_ffv_371;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_372> AgradCcdfLogBeta_ffv_372;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_373> AgradCcdfLogBeta_ffv_373;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_374> AgradCcdfLogBeta_ffv_374;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_375> AgradCcdfLogBeta_ffv_375;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_376> AgradCcdfLogBeta_ffv_376;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_377> AgradCcdfLogBeta_ffv_377;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_378> AgradCcdfLogBeta_ffv_378;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_379> AgradCcdfLogBeta_ffv_379;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_380> AgradCcdfLogBeta_ffv_380;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_381> AgradCcdfLogBeta_ffv_381;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_382> AgradCcdfLogBeta_ffv_382;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_383> AgradCcdfLogBeta_ffv_383;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_384> AgradCcdfLogBeta_ffv_384;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_385> AgradCcdfLogBeta_ffv_385;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_386> AgradCcdfLogBeta_ffv_386;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_387> AgradCcdfLogBeta_ffv_387;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_388> AgradCcdfLogBeta_ffv_388;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_389> AgradCcdfLogBeta_ffv_389;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_390> AgradCcdfLogBeta_ffv_390;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_391> AgradCcdfLogBeta_ffv_391;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_392> AgradCcdfLogBeta_ffv_392;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_393> AgradCcdfLogBeta_ffv_393;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_394> AgradCcdfLogBeta_ffv_394;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_395> AgradCcdfLogBeta_ffv_395;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_396> AgradCcdfLogBeta_ffv_396;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_397> AgradCcdfLogBeta_ffv_397;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_398> AgradCcdfLogBeta_ffv_398;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffv_399> AgradCcdfLogBeta_ffv_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_300, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_301, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_302, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_303, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_304, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_305, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_306, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_307, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_308, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_309, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_310, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_311, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_312, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_313, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_314, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_315, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_316, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_317, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_318, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_319, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_320, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_321, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_322, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_323, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_324, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_325, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_326, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_327, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_328, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_329, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_330, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_331, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_332, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_333, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_334, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_335, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_336, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_337, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_338, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_339, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_340, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_341, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_342, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_343, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_344, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_345, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_346, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_347, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_348, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_349, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_350, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_351, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_352, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_353, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_354, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_355, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_356, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_357, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_358, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_359, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_360, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_361, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_362, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_363, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_364, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_365, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_366, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_367, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_368, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_369, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_370, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_371, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_372, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_373, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_374, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_375, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_376, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_377, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_378, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_379, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_380, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_381, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_382, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_383, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_384, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_385, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_386, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_387, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_388, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_389, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_390, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_391, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_392, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_393, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_394, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_395, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_396, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_397, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_398, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffv_399, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffv_399);

