#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta/beta_ccdf_log_test.hpp>

typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, double, empty, empty, empty> type_ffd_200;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_201;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_202;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_203;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_204;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_205;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_206;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_207;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_208;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_209;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_210;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_211;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_212;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_213;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_214;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_215;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_216;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_217;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_218;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_219;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_220;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_221;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_222;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_223;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_224;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_225;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_226;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_227;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_228;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_229;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_230;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_231;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_232;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_233;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_234;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_235;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_236;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_237;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_238;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_239;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_240;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_241;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_242;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_243;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_244;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_245;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_246;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_247;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_248;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_249;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_250;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_251;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_252;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_253;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_254;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_255;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, double, empty, empty, empty> type_ffd_256;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<double>, empty, empty, empty> type_ffd_257;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_258;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_259;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_260;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_261;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_262;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_263;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, double, empty, empty, empty> type_ffd_264;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_265;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_266;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_267;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_268;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_269;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_270;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_271;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_272;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_273;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_274;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_275;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_276;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_277;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_278;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_279;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_280;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_281;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_282;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_283;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_284;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_285;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_286;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_287;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_288;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_289;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_290;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_291;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_292;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_293;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_294;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_295;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_296;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_297;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_298;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_299;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_200> AgradCcdfLogBeta_ffd_200;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_201> AgradCcdfLogBeta_ffd_201;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_202> AgradCcdfLogBeta_ffd_202;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_203> AgradCcdfLogBeta_ffd_203;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_204> AgradCcdfLogBeta_ffd_204;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_205> AgradCcdfLogBeta_ffd_205;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_206> AgradCcdfLogBeta_ffd_206;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_207> AgradCcdfLogBeta_ffd_207;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_208> AgradCcdfLogBeta_ffd_208;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_209> AgradCcdfLogBeta_ffd_209;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_210> AgradCcdfLogBeta_ffd_210;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_211> AgradCcdfLogBeta_ffd_211;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_212> AgradCcdfLogBeta_ffd_212;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_213> AgradCcdfLogBeta_ffd_213;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_214> AgradCcdfLogBeta_ffd_214;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_215> AgradCcdfLogBeta_ffd_215;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_216> AgradCcdfLogBeta_ffd_216;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_217> AgradCcdfLogBeta_ffd_217;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_218> AgradCcdfLogBeta_ffd_218;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_219> AgradCcdfLogBeta_ffd_219;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_220> AgradCcdfLogBeta_ffd_220;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_221> AgradCcdfLogBeta_ffd_221;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_222> AgradCcdfLogBeta_ffd_222;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_223> AgradCcdfLogBeta_ffd_223;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_224> AgradCcdfLogBeta_ffd_224;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_225> AgradCcdfLogBeta_ffd_225;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_226> AgradCcdfLogBeta_ffd_226;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_227> AgradCcdfLogBeta_ffd_227;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_228> AgradCcdfLogBeta_ffd_228;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_229> AgradCcdfLogBeta_ffd_229;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_230> AgradCcdfLogBeta_ffd_230;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_231> AgradCcdfLogBeta_ffd_231;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_232> AgradCcdfLogBeta_ffd_232;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_233> AgradCcdfLogBeta_ffd_233;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_234> AgradCcdfLogBeta_ffd_234;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_235> AgradCcdfLogBeta_ffd_235;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_236> AgradCcdfLogBeta_ffd_236;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_237> AgradCcdfLogBeta_ffd_237;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_238> AgradCcdfLogBeta_ffd_238;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_239> AgradCcdfLogBeta_ffd_239;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_240> AgradCcdfLogBeta_ffd_240;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_241> AgradCcdfLogBeta_ffd_241;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_242> AgradCcdfLogBeta_ffd_242;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_243> AgradCcdfLogBeta_ffd_243;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_244> AgradCcdfLogBeta_ffd_244;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_245> AgradCcdfLogBeta_ffd_245;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_246> AgradCcdfLogBeta_ffd_246;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_247> AgradCcdfLogBeta_ffd_247;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_248> AgradCcdfLogBeta_ffd_248;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_249> AgradCcdfLogBeta_ffd_249;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_250> AgradCcdfLogBeta_ffd_250;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_251> AgradCcdfLogBeta_ffd_251;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_252> AgradCcdfLogBeta_ffd_252;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_253> AgradCcdfLogBeta_ffd_253;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_254> AgradCcdfLogBeta_ffd_254;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_255> AgradCcdfLogBeta_ffd_255;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_256> AgradCcdfLogBeta_ffd_256;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_257> AgradCcdfLogBeta_ffd_257;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_258> AgradCcdfLogBeta_ffd_258;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_259> AgradCcdfLogBeta_ffd_259;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_260> AgradCcdfLogBeta_ffd_260;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_261> AgradCcdfLogBeta_ffd_261;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_262> AgradCcdfLogBeta_ffd_262;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_263> AgradCcdfLogBeta_ffd_263;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_264> AgradCcdfLogBeta_ffd_264;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_265> AgradCcdfLogBeta_ffd_265;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_266> AgradCcdfLogBeta_ffd_266;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_267> AgradCcdfLogBeta_ffd_267;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_268> AgradCcdfLogBeta_ffd_268;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_269> AgradCcdfLogBeta_ffd_269;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_270> AgradCcdfLogBeta_ffd_270;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_271> AgradCcdfLogBeta_ffd_271;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_272> AgradCcdfLogBeta_ffd_272;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_273> AgradCcdfLogBeta_ffd_273;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_274> AgradCcdfLogBeta_ffd_274;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_275> AgradCcdfLogBeta_ffd_275;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_276> AgradCcdfLogBeta_ffd_276;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_277> AgradCcdfLogBeta_ffd_277;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_278> AgradCcdfLogBeta_ffd_278;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_279> AgradCcdfLogBeta_ffd_279;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_280> AgradCcdfLogBeta_ffd_280;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_281> AgradCcdfLogBeta_ffd_281;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_282> AgradCcdfLogBeta_ffd_282;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_283> AgradCcdfLogBeta_ffd_283;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_284> AgradCcdfLogBeta_ffd_284;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_285> AgradCcdfLogBeta_ffd_285;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_286> AgradCcdfLogBeta_ffd_286;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_287> AgradCcdfLogBeta_ffd_287;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_288> AgradCcdfLogBeta_ffd_288;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_289> AgradCcdfLogBeta_ffd_289;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_290> AgradCcdfLogBeta_ffd_290;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_291> AgradCcdfLogBeta_ffd_291;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_292> AgradCcdfLogBeta_ffd_292;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_293> AgradCcdfLogBeta_ffd_293;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_294> AgradCcdfLogBeta_ffd_294;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_295> AgradCcdfLogBeta_ffd_295;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_296> AgradCcdfLogBeta_ffd_296;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_297> AgradCcdfLogBeta_ffd_297;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_298> AgradCcdfLogBeta_ffd_298;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_299> AgradCcdfLogBeta_ffd_299;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_300> AgradCcdfLogBeta_ffd_300;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_301> AgradCcdfLogBeta_ffd_301;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_302> AgradCcdfLogBeta_ffd_302;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_303> AgradCcdfLogBeta_ffd_303;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_304> AgradCcdfLogBeta_ffd_304;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_305> AgradCcdfLogBeta_ffd_305;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_306> AgradCcdfLogBeta_ffd_306;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_307> AgradCcdfLogBeta_ffd_307;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_308> AgradCcdfLogBeta_ffd_308;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_309> AgradCcdfLogBeta_ffd_309;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_310> AgradCcdfLogBeta_ffd_310;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_311> AgradCcdfLogBeta_ffd_311;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_312> AgradCcdfLogBeta_ffd_312;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_313> AgradCcdfLogBeta_ffd_313;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_314> AgradCcdfLogBeta_ffd_314;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_315> AgradCcdfLogBeta_ffd_315;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_316> AgradCcdfLogBeta_ffd_316;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_317> AgradCcdfLogBeta_ffd_317;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_318> AgradCcdfLogBeta_ffd_318;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_319> AgradCcdfLogBeta_ffd_319;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_320> AgradCcdfLogBeta_ffd_320;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_321> AgradCcdfLogBeta_ffd_321;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_322> AgradCcdfLogBeta_ffd_322;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_323> AgradCcdfLogBeta_ffd_323;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_324> AgradCcdfLogBeta_ffd_324;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_325> AgradCcdfLogBeta_ffd_325;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_326> AgradCcdfLogBeta_ffd_326;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_327> AgradCcdfLogBeta_ffd_327;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_328> AgradCcdfLogBeta_ffd_328;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_329> AgradCcdfLogBeta_ffd_329;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_330> AgradCcdfLogBeta_ffd_330;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_331> AgradCcdfLogBeta_ffd_331;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_332> AgradCcdfLogBeta_ffd_332;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_333> AgradCcdfLogBeta_ffd_333;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_334> AgradCcdfLogBeta_ffd_334;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_335> AgradCcdfLogBeta_ffd_335;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_336> AgradCcdfLogBeta_ffd_336;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_337> AgradCcdfLogBeta_ffd_337;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_338> AgradCcdfLogBeta_ffd_338;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_339> AgradCcdfLogBeta_ffd_339;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_340> AgradCcdfLogBeta_ffd_340;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_341> AgradCcdfLogBeta_ffd_341;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_342> AgradCcdfLogBeta_ffd_342;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_343> AgradCcdfLogBeta_ffd_343;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_344> AgradCcdfLogBeta_ffd_344;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_345> AgradCcdfLogBeta_ffd_345;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_346> AgradCcdfLogBeta_ffd_346;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_347> AgradCcdfLogBeta_ffd_347;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_348> AgradCcdfLogBeta_ffd_348;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_349> AgradCcdfLogBeta_ffd_349;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_350> AgradCcdfLogBeta_ffd_350;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_351> AgradCcdfLogBeta_ffd_351;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_352> AgradCcdfLogBeta_ffd_352;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_353> AgradCcdfLogBeta_ffd_353;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_354> AgradCcdfLogBeta_ffd_354;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_355> AgradCcdfLogBeta_ffd_355;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_356> AgradCcdfLogBeta_ffd_356;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_357> AgradCcdfLogBeta_ffd_357;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_358> AgradCcdfLogBeta_ffd_358;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_359> AgradCcdfLogBeta_ffd_359;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_360> AgradCcdfLogBeta_ffd_360;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_361> AgradCcdfLogBeta_ffd_361;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_362> AgradCcdfLogBeta_ffd_362;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_363> AgradCcdfLogBeta_ffd_363;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_364> AgradCcdfLogBeta_ffd_364;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_365> AgradCcdfLogBeta_ffd_365;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_366> AgradCcdfLogBeta_ffd_366;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_367> AgradCcdfLogBeta_ffd_367;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_368> AgradCcdfLogBeta_ffd_368;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_369> AgradCcdfLogBeta_ffd_369;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_370> AgradCcdfLogBeta_ffd_370;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_371> AgradCcdfLogBeta_ffd_371;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_372> AgradCcdfLogBeta_ffd_372;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_373> AgradCcdfLogBeta_ffd_373;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_374> AgradCcdfLogBeta_ffd_374;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_375> AgradCcdfLogBeta_ffd_375;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_376> AgradCcdfLogBeta_ffd_376;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_377> AgradCcdfLogBeta_ffd_377;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_378> AgradCcdfLogBeta_ffd_378;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_379> AgradCcdfLogBeta_ffd_379;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_380> AgradCcdfLogBeta_ffd_380;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_381> AgradCcdfLogBeta_ffd_381;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_382> AgradCcdfLogBeta_ffd_382;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_383> AgradCcdfLogBeta_ffd_383;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_384> AgradCcdfLogBeta_ffd_384;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_385> AgradCcdfLogBeta_ffd_385;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_386> AgradCcdfLogBeta_ffd_386;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_387> AgradCcdfLogBeta_ffd_387;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_388> AgradCcdfLogBeta_ffd_388;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_389> AgradCcdfLogBeta_ffd_389;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_390> AgradCcdfLogBeta_ffd_390;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_391> AgradCcdfLogBeta_ffd_391;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_392> AgradCcdfLogBeta_ffd_392;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_393> AgradCcdfLogBeta_ffd_393;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_394> AgradCcdfLogBeta_ffd_394;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_395> AgradCcdfLogBeta_ffd_395;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_396> AgradCcdfLogBeta_ffd_396;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_397> AgradCcdfLogBeta_ffd_397;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_398> AgradCcdfLogBeta_ffd_398;
typedef boost::mpl::vector<AgradCcdfLogBeta, type_ffd_399> AgradCcdfLogBeta_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_200, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_201, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_202, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_203, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_204, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_205, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_206, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_207, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_208, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_209, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_210, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_211, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_212, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_213, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_214, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_215, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_216, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_217, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_218, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_219, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_220, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_221, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_222, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_223, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_224, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_225, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_226, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_227, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_228, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_229, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_230, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_231, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_232, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_233, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_234, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_235, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_236, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_237, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_238, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_239, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_240, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_241, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_242, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_243, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_244, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_245, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_246, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_247, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_248, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_249, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_250, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_251, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_252, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_253, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_254, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_255, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_256, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_257, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_258, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_259, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_260, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_261, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_262, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_263, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_264, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_265, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_266, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_267, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_268, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_269, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_270, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_271, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_272, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_273, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_274, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_275, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_276, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_277, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_278, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_279, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_280, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_281, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_282, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_283, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_284, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_285, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_286, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_287, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_288, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_289, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_290, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_291, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_292, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_293, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_294, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_295, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_296, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_297, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_298, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_299, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_300, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_301, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_302, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_303, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_304, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_305, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_306, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_307, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_308, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_309, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_310, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_311, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_312, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_313, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_314, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_315, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_316, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_317, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_318, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_319, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_320, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_321, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_322, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_323, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_324, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_325, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_326, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_327, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_328, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_329, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_330, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_331, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_332, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_333, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_334, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_335, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_336, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_337, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_338, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_339, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_340, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_341, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_342, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_343, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_344, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_345, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_346, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_347, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_348, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_349, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_350, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_351, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_352, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_353, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_354, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_355, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_356, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_357, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_358, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_359, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_360, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_361, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_362, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_363, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_364, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_365, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_366, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_367, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_368, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_369, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_370, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_371, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_372, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_373, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_374, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_375, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_376, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_377, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_378, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_379, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_380, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_381, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_382, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_383, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_384, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_385, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_386, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_387, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_388, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_389, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_390, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_391, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_392, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_393, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_394, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_395, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_396, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_397, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_398, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogBeta_ffd_399, AgradCcdfLogTestFixture, AgradCcdfLogBeta_ffd_399);

