#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <beta/beta_cdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<double, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<double, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;
typedef boost::mpl::vector<fvar<fvar<var> >, double, double, empty, empty, empty> type_ffv_192;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<double>, empty, empty, empty> type_ffv_193;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_194;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_195;
typedef boost::mpl::vector<fvar<fvar<var> >, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_196;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_197;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_198;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_199;

typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_0> AgradCdfLogBeta_ffv_0;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_1> AgradCdfLogBeta_ffv_1;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_2> AgradCdfLogBeta_ffv_2;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_3> AgradCdfLogBeta_ffv_3;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_4> AgradCdfLogBeta_ffv_4;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_5> AgradCdfLogBeta_ffv_5;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_6> AgradCdfLogBeta_ffv_6;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_7> AgradCdfLogBeta_ffv_7;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_8> AgradCdfLogBeta_ffv_8;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_9> AgradCdfLogBeta_ffv_9;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_10> AgradCdfLogBeta_ffv_10;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_11> AgradCdfLogBeta_ffv_11;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_12> AgradCdfLogBeta_ffv_12;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_13> AgradCdfLogBeta_ffv_13;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_14> AgradCdfLogBeta_ffv_14;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_15> AgradCdfLogBeta_ffv_15;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_16> AgradCdfLogBeta_ffv_16;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_17> AgradCdfLogBeta_ffv_17;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_18> AgradCdfLogBeta_ffv_18;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_19> AgradCdfLogBeta_ffv_19;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_20> AgradCdfLogBeta_ffv_20;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_21> AgradCdfLogBeta_ffv_21;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_22> AgradCdfLogBeta_ffv_22;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_23> AgradCdfLogBeta_ffv_23;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_24> AgradCdfLogBeta_ffv_24;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_25> AgradCdfLogBeta_ffv_25;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_26> AgradCdfLogBeta_ffv_26;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_27> AgradCdfLogBeta_ffv_27;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_28> AgradCdfLogBeta_ffv_28;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_29> AgradCdfLogBeta_ffv_29;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_30> AgradCdfLogBeta_ffv_30;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_31> AgradCdfLogBeta_ffv_31;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_32> AgradCdfLogBeta_ffv_32;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_33> AgradCdfLogBeta_ffv_33;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_34> AgradCdfLogBeta_ffv_34;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_35> AgradCdfLogBeta_ffv_35;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_36> AgradCdfLogBeta_ffv_36;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_37> AgradCdfLogBeta_ffv_37;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_38> AgradCdfLogBeta_ffv_38;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_39> AgradCdfLogBeta_ffv_39;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_40> AgradCdfLogBeta_ffv_40;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_41> AgradCdfLogBeta_ffv_41;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_42> AgradCdfLogBeta_ffv_42;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_43> AgradCdfLogBeta_ffv_43;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_44> AgradCdfLogBeta_ffv_44;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_45> AgradCdfLogBeta_ffv_45;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_46> AgradCdfLogBeta_ffv_46;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_47> AgradCdfLogBeta_ffv_47;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_48> AgradCdfLogBeta_ffv_48;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_49> AgradCdfLogBeta_ffv_49;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_50> AgradCdfLogBeta_ffv_50;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_51> AgradCdfLogBeta_ffv_51;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_52> AgradCdfLogBeta_ffv_52;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_53> AgradCdfLogBeta_ffv_53;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_54> AgradCdfLogBeta_ffv_54;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_55> AgradCdfLogBeta_ffv_55;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_56> AgradCdfLogBeta_ffv_56;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_57> AgradCdfLogBeta_ffv_57;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_58> AgradCdfLogBeta_ffv_58;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_59> AgradCdfLogBeta_ffv_59;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_60> AgradCdfLogBeta_ffv_60;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_61> AgradCdfLogBeta_ffv_61;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_62> AgradCdfLogBeta_ffv_62;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_63> AgradCdfLogBeta_ffv_63;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_64> AgradCdfLogBeta_ffv_64;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_65> AgradCdfLogBeta_ffv_65;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_66> AgradCdfLogBeta_ffv_66;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_67> AgradCdfLogBeta_ffv_67;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_68> AgradCdfLogBeta_ffv_68;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_69> AgradCdfLogBeta_ffv_69;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_70> AgradCdfLogBeta_ffv_70;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_71> AgradCdfLogBeta_ffv_71;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_72> AgradCdfLogBeta_ffv_72;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_73> AgradCdfLogBeta_ffv_73;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_74> AgradCdfLogBeta_ffv_74;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_75> AgradCdfLogBeta_ffv_75;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_76> AgradCdfLogBeta_ffv_76;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_77> AgradCdfLogBeta_ffv_77;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_78> AgradCdfLogBeta_ffv_78;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_79> AgradCdfLogBeta_ffv_79;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_80> AgradCdfLogBeta_ffv_80;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_81> AgradCdfLogBeta_ffv_81;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_82> AgradCdfLogBeta_ffv_82;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_83> AgradCdfLogBeta_ffv_83;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_84> AgradCdfLogBeta_ffv_84;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_85> AgradCdfLogBeta_ffv_85;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_86> AgradCdfLogBeta_ffv_86;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_87> AgradCdfLogBeta_ffv_87;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_88> AgradCdfLogBeta_ffv_88;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_89> AgradCdfLogBeta_ffv_89;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_90> AgradCdfLogBeta_ffv_90;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_91> AgradCdfLogBeta_ffv_91;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_92> AgradCdfLogBeta_ffv_92;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_93> AgradCdfLogBeta_ffv_93;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_94> AgradCdfLogBeta_ffv_94;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_95> AgradCdfLogBeta_ffv_95;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_96> AgradCdfLogBeta_ffv_96;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_97> AgradCdfLogBeta_ffv_97;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_98> AgradCdfLogBeta_ffv_98;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_99> AgradCdfLogBeta_ffv_99;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_100> AgradCdfLogBeta_ffv_100;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_101> AgradCdfLogBeta_ffv_101;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_102> AgradCdfLogBeta_ffv_102;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_103> AgradCdfLogBeta_ffv_103;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_104> AgradCdfLogBeta_ffv_104;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_105> AgradCdfLogBeta_ffv_105;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_106> AgradCdfLogBeta_ffv_106;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_107> AgradCdfLogBeta_ffv_107;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_108> AgradCdfLogBeta_ffv_108;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_109> AgradCdfLogBeta_ffv_109;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_110> AgradCdfLogBeta_ffv_110;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_111> AgradCdfLogBeta_ffv_111;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_112> AgradCdfLogBeta_ffv_112;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_113> AgradCdfLogBeta_ffv_113;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_114> AgradCdfLogBeta_ffv_114;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_115> AgradCdfLogBeta_ffv_115;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_116> AgradCdfLogBeta_ffv_116;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_117> AgradCdfLogBeta_ffv_117;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_118> AgradCdfLogBeta_ffv_118;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_119> AgradCdfLogBeta_ffv_119;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_120> AgradCdfLogBeta_ffv_120;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_121> AgradCdfLogBeta_ffv_121;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_122> AgradCdfLogBeta_ffv_122;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_123> AgradCdfLogBeta_ffv_123;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_124> AgradCdfLogBeta_ffv_124;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_125> AgradCdfLogBeta_ffv_125;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_126> AgradCdfLogBeta_ffv_126;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_127> AgradCdfLogBeta_ffv_127;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_128> AgradCdfLogBeta_ffv_128;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_129> AgradCdfLogBeta_ffv_129;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_130> AgradCdfLogBeta_ffv_130;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_131> AgradCdfLogBeta_ffv_131;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_132> AgradCdfLogBeta_ffv_132;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_133> AgradCdfLogBeta_ffv_133;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_134> AgradCdfLogBeta_ffv_134;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_135> AgradCdfLogBeta_ffv_135;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_136> AgradCdfLogBeta_ffv_136;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_137> AgradCdfLogBeta_ffv_137;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_138> AgradCdfLogBeta_ffv_138;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_139> AgradCdfLogBeta_ffv_139;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_140> AgradCdfLogBeta_ffv_140;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_141> AgradCdfLogBeta_ffv_141;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_142> AgradCdfLogBeta_ffv_142;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_143> AgradCdfLogBeta_ffv_143;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_144> AgradCdfLogBeta_ffv_144;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_145> AgradCdfLogBeta_ffv_145;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_146> AgradCdfLogBeta_ffv_146;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_147> AgradCdfLogBeta_ffv_147;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_148> AgradCdfLogBeta_ffv_148;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_149> AgradCdfLogBeta_ffv_149;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_150> AgradCdfLogBeta_ffv_150;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_151> AgradCdfLogBeta_ffv_151;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_152> AgradCdfLogBeta_ffv_152;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_153> AgradCdfLogBeta_ffv_153;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_154> AgradCdfLogBeta_ffv_154;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_155> AgradCdfLogBeta_ffv_155;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_156> AgradCdfLogBeta_ffv_156;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_157> AgradCdfLogBeta_ffv_157;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_158> AgradCdfLogBeta_ffv_158;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_159> AgradCdfLogBeta_ffv_159;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_160> AgradCdfLogBeta_ffv_160;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_161> AgradCdfLogBeta_ffv_161;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_162> AgradCdfLogBeta_ffv_162;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_163> AgradCdfLogBeta_ffv_163;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_164> AgradCdfLogBeta_ffv_164;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_165> AgradCdfLogBeta_ffv_165;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_166> AgradCdfLogBeta_ffv_166;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_167> AgradCdfLogBeta_ffv_167;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_168> AgradCdfLogBeta_ffv_168;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_169> AgradCdfLogBeta_ffv_169;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_170> AgradCdfLogBeta_ffv_170;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_171> AgradCdfLogBeta_ffv_171;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_172> AgradCdfLogBeta_ffv_172;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_173> AgradCdfLogBeta_ffv_173;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_174> AgradCdfLogBeta_ffv_174;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_175> AgradCdfLogBeta_ffv_175;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_176> AgradCdfLogBeta_ffv_176;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_177> AgradCdfLogBeta_ffv_177;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_178> AgradCdfLogBeta_ffv_178;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_179> AgradCdfLogBeta_ffv_179;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_180> AgradCdfLogBeta_ffv_180;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_181> AgradCdfLogBeta_ffv_181;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_182> AgradCdfLogBeta_ffv_182;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_183> AgradCdfLogBeta_ffv_183;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_184> AgradCdfLogBeta_ffv_184;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_185> AgradCdfLogBeta_ffv_185;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_186> AgradCdfLogBeta_ffv_186;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_187> AgradCdfLogBeta_ffv_187;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_188> AgradCdfLogBeta_ffv_188;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_189> AgradCdfLogBeta_ffv_189;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_190> AgradCdfLogBeta_ffv_190;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_191> AgradCdfLogBeta_ffv_191;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_192> AgradCdfLogBeta_ffv_192;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_193> AgradCdfLogBeta_ffv_193;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_194> AgradCdfLogBeta_ffv_194;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_195> AgradCdfLogBeta_ffv_195;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_196> AgradCdfLogBeta_ffv_196;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_197> AgradCdfLogBeta_ffv_197;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_198> AgradCdfLogBeta_ffv_198;
typedef boost::mpl::vector<AgradCdfLogBeta, type_ffv_199> AgradCdfLogBeta_ffv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_0, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_1, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_2, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_3, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_4, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_5, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_6, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_7, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_8, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_9, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_10, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_11, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_12, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_13, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_14, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_15, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_16, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_17, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_18, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_19, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_20, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_21, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_22, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_23, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_24, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_25, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_26, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_27, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_28, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_29, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_30, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_31, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_32, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_33, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_34, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_35, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_36, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_37, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_38, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_39, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_40, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_41, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_42, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_43, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_44, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_45, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_46, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_47, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_48, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_49, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_50, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_51, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_52, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_53, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_54, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_55, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_56, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_57, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_58, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_59, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_60, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_61, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_62, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_63, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_64, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_65, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_66, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_67, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_68, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_69, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_70, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_71, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_72, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_73, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_74, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_75, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_76, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_77, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_78, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_79, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_80, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_81, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_82, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_83, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_84, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_85, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_86, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_87, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_88, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_89, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_90, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_91, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_92, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_93, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_94, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_95, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_96, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_97, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_98, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_99, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_100, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_101, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_102, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_103, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_104, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_105, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_106, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_107, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_108, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_109, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_110, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_111, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_112, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_113, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_114, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_115, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_116, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_117, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_118, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_119, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_120, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_121, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_122, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_123, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_124, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_125, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_126, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_127, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_128, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_129, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_130, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_131, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_132, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_133, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_134, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_135, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_136, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_137, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_138, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_139, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_140, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_141, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_142, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_143, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_144, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_145, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_146, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_147, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_148, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_149, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_150, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_151, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_152, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_153, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_154, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_155, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_156, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_157, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_158, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_159, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_160, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_161, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_162, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_163, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_164, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_165, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_166, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_167, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_168, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_169, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_170, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_171, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_172, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_173, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_174, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_175, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_176, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_177, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_178, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_179, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_180, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_181, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_182, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_183, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_184, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_185, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_186, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_187, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_188, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_189, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_190, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_191, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_192, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_193, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_194, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_195, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_196, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_197, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_198, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogBeta_ffv_199, AgradCdfLogTestFixture, AgradCdfLogBeta_ffv_199);

