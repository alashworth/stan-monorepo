#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <chi_square/chi_square_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, fvar<double>, empty, empty, empty, empty> type_fd_0;
typedef boost::mpl::vector<double, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_1;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_2;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_3;
typedef boost::mpl::vector<std::vector<double>, fvar<double>, empty, empty, empty, empty> type_fd_4;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_5;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_6;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_7;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty, empty> type_fd_8;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_9;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_10;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_11;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty, empty> type_fd_12;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_13;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_14;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_15;
typedef boost::mpl::vector<fvar<double>, double, empty, empty, empty, empty> type_fd_16;
typedef boost::mpl::vector<fvar<double>, std::vector<double>, empty, empty, empty, empty> type_fd_17;
typedef boost::mpl::vector<fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_18;
typedef boost::mpl::vector<fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_19;
typedef boost::mpl::vector<fvar<double>, fvar<double>, empty, empty, empty, empty> type_fd_20;
typedef boost::mpl::vector<fvar<double>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_21;
typedef boost::mpl::vector<fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_22;
typedef boost::mpl::vector<fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_23;
typedef boost::mpl::vector<std::vector<fvar<double>>, double, empty, empty, empty, empty> type_fd_24;
typedef boost::mpl::vector<std::vector<fvar<double>>, std::vector<double>, empty, empty, empty, empty> type_fd_25;
typedef boost::mpl::vector<std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_26;
typedef boost::mpl::vector<std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_27;
typedef boost::mpl::vector<std::vector<fvar<double>>, fvar<double>, empty, empty, empty, empty> type_fd_28;
typedef boost::mpl::vector<std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_29;
typedef boost::mpl::vector<std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_30;
typedef boost::mpl::vector<std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_31;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty, empty> type_fd_32;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty, empty> type_fd_33;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_34;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_35;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty, empty> type_fd_36;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_37;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_38;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_39;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty, empty> type_fd_40;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty, empty> type_fd_41;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_42;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_43;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty, empty> type_fd_44;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty, empty> type_fd_45;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty, empty> type_fd_46;
typedef boost::mpl::vector<Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty, empty> type_fd_47;

typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_0> AgradCcdfLogChiSquare_fd_0;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_1> AgradCcdfLogChiSquare_fd_1;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_2> AgradCcdfLogChiSquare_fd_2;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_3> AgradCcdfLogChiSquare_fd_3;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_4> AgradCcdfLogChiSquare_fd_4;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_5> AgradCcdfLogChiSquare_fd_5;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_6> AgradCcdfLogChiSquare_fd_6;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_7> AgradCcdfLogChiSquare_fd_7;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_8> AgradCcdfLogChiSquare_fd_8;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_9> AgradCcdfLogChiSquare_fd_9;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_10> AgradCcdfLogChiSquare_fd_10;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_11> AgradCcdfLogChiSquare_fd_11;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_12> AgradCcdfLogChiSquare_fd_12;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_13> AgradCcdfLogChiSquare_fd_13;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_14> AgradCcdfLogChiSquare_fd_14;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_15> AgradCcdfLogChiSquare_fd_15;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_16> AgradCcdfLogChiSquare_fd_16;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_17> AgradCcdfLogChiSquare_fd_17;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_18> AgradCcdfLogChiSquare_fd_18;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_19> AgradCcdfLogChiSquare_fd_19;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_20> AgradCcdfLogChiSquare_fd_20;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_21> AgradCcdfLogChiSquare_fd_21;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_22> AgradCcdfLogChiSquare_fd_22;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_23> AgradCcdfLogChiSquare_fd_23;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_24> AgradCcdfLogChiSquare_fd_24;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_25> AgradCcdfLogChiSquare_fd_25;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_26> AgradCcdfLogChiSquare_fd_26;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_27> AgradCcdfLogChiSquare_fd_27;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_28> AgradCcdfLogChiSquare_fd_28;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_29> AgradCcdfLogChiSquare_fd_29;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_30> AgradCcdfLogChiSquare_fd_30;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_31> AgradCcdfLogChiSquare_fd_31;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_32> AgradCcdfLogChiSquare_fd_32;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_33> AgradCcdfLogChiSquare_fd_33;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_34> AgradCcdfLogChiSquare_fd_34;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_35> AgradCcdfLogChiSquare_fd_35;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_36> AgradCcdfLogChiSquare_fd_36;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_37> AgradCcdfLogChiSquare_fd_37;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_38> AgradCcdfLogChiSquare_fd_38;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_39> AgradCcdfLogChiSquare_fd_39;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_40> AgradCcdfLogChiSquare_fd_40;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_41> AgradCcdfLogChiSquare_fd_41;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_42> AgradCcdfLogChiSquare_fd_42;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_43> AgradCcdfLogChiSquare_fd_43;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_44> AgradCcdfLogChiSquare_fd_44;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_45> AgradCcdfLogChiSquare_fd_45;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_46> AgradCcdfLogChiSquare_fd_46;
typedef boost::mpl::vector<AgradCcdfLogChiSquare, type_fd_47> AgradCcdfLogChiSquare_fd_47;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_0, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_1, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_2, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_3, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_4, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_5, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_6, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_7, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_8, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_9, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_10, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_11, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_12, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_13, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_14, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_15, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_16, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_17, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_18, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_19, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_20, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_21, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_22, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_23, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_24, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_25, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_26, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_27, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_28, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_29, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_30, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_31, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_32, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_33, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_34, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_35, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_36, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_37, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_38, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_39, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_40, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_41, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_42, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_43, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_44, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_45, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_46, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogChiSquare_fd_47, AgradCcdfLogTestFixture, AgradCcdfLogChiSquare_fd_47);

