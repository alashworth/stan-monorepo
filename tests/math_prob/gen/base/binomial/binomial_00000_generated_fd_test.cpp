#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <binomial/binomial_test.hpp>

typedef boost::mpl::vector<int, int, fvar<double>, empty, empty, empty> type_fd_0;
typedef boost::mpl::vector<int, int, std::vector<fvar<double>>, empty, empty, empty> type_fd_1;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_2;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_3;
typedef boost::mpl::vector<int, std::vector<int>, fvar<double>, empty, empty, empty> type_fd_4;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<double>>, empty, empty, empty> type_fd_5;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_6;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_7;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_8;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_9;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_10;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_11;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_12;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_13;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_14;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_15;
typedef boost::mpl::vector<std::vector<int>, int, fvar<double>, empty, empty, empty> type_fd_16;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<double>>, empty, empty, empty> type_fd_17;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_18;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_19;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<double>, empty, empty, empty> type_fd_20;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<double>>, empty, empty, empty> type_fd_21;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_22;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_23;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_24;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_25;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_26;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_27;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_28;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_29;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_30;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_31;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<double>, empty, empty, empty> type_fd_32;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<double>>, empty, empty, empty> type_fd_33;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_34;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_35;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<double>, empty, empty, empty> type_fd_36;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<double>>, empty, empty, empty> type_fd_37;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_38;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_39;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_40;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_41;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_42;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_43;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_44;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_45;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_46;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_47;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<double>, empty, empty, empty> type_fd_48;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<double>>, empty, empty, empty> type_fd_49;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_50;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_51;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<double>, empty, empty, empty> type_fd_52;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<double>>, empty, empty, empty> type_fd_53;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_54;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_55;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_56;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_57;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_58;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_59;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_60;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_61;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_62;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_63;

typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_0> AgradDistributionsBinomial_fd_0;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_1> AgradDistributionsBinomial_fd_1;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_2> AgradDistributionsBinomial_fd_2;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_3> AgradDistributionsBinomial_fd_3;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_4> AgradDistributionsBinomial_fd_4;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_5> AgradDistributionsBinomial_fd_5;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_6> AgradDistributionsBinomial_fd_6;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_7> AgradDistributionsBinomial_fd_7;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_8> AgradDistributionsBinomial_fd_8;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_9> AgradDistributionsBinomial_fd_9;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_10> AgradDistributionsBinomial_fd_10;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_11> AgradDistributionsBinomial_fd_11;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_12> AgradDistributionsBinomial_fd_12;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_13> AgradDistributionsBinomial_fd_13;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_14> AgradDistributionsBinomial_fd_14;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_15> AgradDistributionsBinomial_fd_15;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_16> AgradDistributionsBinomial_fd_16;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_17> AgradDistributionsBinomial_fd_17;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_18> AgradDistributionsBinomial_fd_18;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_19> AgradDistributionsBinomial_fd_19;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_20> AgradDistributionsBinomial_fd_20;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_21> AgradDistributionsBinomial_fd_21;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_22> AgradDistributionsBinomial_fd_22;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_23> AgradDistributionsBinomial_fd_23;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_24> AgradDistributionsBinomial_fd_24;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_25> AgradDistributionsBinomial_fd_25;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_26> AgradDistributionsBinomial_fd_26;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_27> AgradDistributionsBinomial_fd_27;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_28> AgradDistributionsBinomial_fd_28;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_29> AgradDistributionsBinomial_fd_29;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_30> AgradDistributionsBinomial_fd_30;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_31> AgradDistributionsBinomial_fd_31;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_32> AgradDistributionsBinomial_fd_32;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_33> AgradDistributionsBinomial_fd_33;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_34> AgradDistributionsBinomial_fd_34;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_35> AgradDistributionsBinomial_fd_35;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_36> AgradDistributionsBinomial_fd_36;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_37> AgradDistributionsBinomial_fd_37;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_38> AgradDistributionsBinomial_fd_38;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_39> AgradDistributionsBinomial_fd_39;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_40> AgradDistributionsBinomial_fd_40;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_41> AgradDistributionsBinomial_fd_41;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_42> AgradDistributionsBinomial_fd_42;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_43> AgradDistributionsBinomial_fd_43;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_44> AgradDistributionsBinomial_fd_44;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_45> AgradDistributionsBinomial_fd_45;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_46> AgradDistributionsBinomial_fd_46;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_47> AgradDistributionsBinomial_fd_47;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_48> AgradDistributionsBinomial_fd_48;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_49> AgradDistributionsBinomial_fd_49;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_50> AgradDistributionsBinomial_fd_50;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_51> AgradDistributionsBinomial_fd_51;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_52> AgradDistributionsBinomial_fd_52;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_53> AgradDistributionsBinomial_fd_53;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_54> AgradDistributionsBinomial_fd_54;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_55> AgradDistributionsBinomial_fd_55;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_56> AgradDistributionsBinomial_fd_56;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_57> AgradDistributionsBinomial_fd_57;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_58> AgradDistributionsBinomial_fd_58;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_59> AgradDistributionsBinomial_fd_59;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_60> AgradDistributionsBinomial_fd_60;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_61> AgradDistributionsBinomial_fd_61;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_62> AgradDistributionsBinomial_fd_62;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fd_63> AgradDistributionsBinomial_fd_63;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_0, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_1, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_2, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_3, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_4, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_5, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_6, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_7, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_8, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_9, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_10, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_11, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_12, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_13, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_14, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_15, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_16, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_17, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_18, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_19, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_20, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_21, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_22, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_23, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_24, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_25, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_26, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_27, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_28, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_29, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_30, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_31, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_32, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_33, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_34, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_35, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_36, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_37, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_38, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_39, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_40, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_41, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_42, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_43, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_44, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_45, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_46, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_47, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_48, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_49, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_50, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_51, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_52, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_53, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_54, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_55, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_56, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_57, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_58, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_59, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_60, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_61, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_62, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fd_63, AgradDistributionTestFixture, AgradDistributionsBinomial_fd_63);

