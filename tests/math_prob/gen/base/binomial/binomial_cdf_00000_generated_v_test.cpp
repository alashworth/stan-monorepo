#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <binomial/binomial_cdf_test.hpp>

typedef boost::mpl::vector<int, int, double, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<int, int, std::vector<double>, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<int, int, var, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<int, int, std::vector<var>, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<int, std::vector<int>, double, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<int, std::vector<int>, var, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<std::vector<int>, int, double, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<std::vector<int>, int, var, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<var>, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, var, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_63;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, empty, empty, empty> type_v_64;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, empty, empty, empty> type_v_65;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_66;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_67;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, empty, empty, empty> type_v_68;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, empty, empty, empty> type_v_69;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_70;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_71;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, empty, empty, empty> type_v_72;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_73;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_74;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_75;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, empty, empty, empty> type_v_76;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_77;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_78;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_79;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_80;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_81;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_82;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_83;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_84;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_85;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_86;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_87;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_88;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_89;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_90;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_91;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_92;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_93;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_94;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_95;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, empty, empty, empty> type_v_96;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, empty, empty, empty> type_v_97;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_98;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_99;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, empty, empty, empty> type_v_100;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, empty, empty, empty> type_v_101;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_102;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_103;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, empty, empty, empty> type_v_104;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_105;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_106;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_107;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, empty, empty, empty> type_v_108;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_109;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_110;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_111;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_112;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_113;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_114;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_115;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_116;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_117;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_118;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_119;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_120;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_121;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_122;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_123;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_124;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_125;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_126;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_127;

typedef boost::mpl::vector<AgradCdfBinomial, type_v_0> AgradCdfBinomial_v_0;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_1> AgradCdfBinomial_v_1;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_2> AgradCdfBinomial_v_2;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_3> AgradCdfBinomial_v_3;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_4> AgradCdfBinomial_v_4;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_5> AgradCdfBinomial_v_5;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_6> AgradCdfBinomial_v_6;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_7> AgradCdfBinomial_v_7;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_8> AgradCdfBinomial_v_8;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_9> AgradCdfBinomial_v_9;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_10> AgradCdfBinomial_v_10;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_11> AgradCdfBinomial_v_11;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_12> AgradCdfBinomial_v_12;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_13> AgradCdfBinomial_v_13;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_14> AgradCdfBinomial_v_14;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_15> AgradCdfBinomial_v_15;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_16> AgradCdfBinomial_v_16;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_17> AgradCdfBinomial_v_17;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_18> AgradCdfBinomial_v_18;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_19> AgradCdfBinomial_v_19;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_20> AgradCdfBinomial_v_20;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_21> AgradCdfBinomial_v_21;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_22> AgradCdfBinomial_v_22;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_23> AgradCdfBinomial_v_23;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_24> AgradCdfBinomial_v_24;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_25> AgradCdfBinomial_v_25;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_26> AgradCdfBinomial_v_26;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_27> AgradCdfBinomial_v_27;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_28> AgradCdfBinomial_v_28;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_29> AgradCdfBinomial_v_29;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_30> AgradCdfBinomial_v_30;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_31> AgradCdfBinomial_v_31;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_32> AgradCdfBinomial_v_32;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_33> AgradCdfBinomial_v_33;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_34> AgradCdfBinomial_v_34;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_35> AgradCdfBinomial_v_35;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_36> AgradCdfBinomial_v_36;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_37> AgradCdfBinomial_v_37;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_38> AgradCdfBinomial_v_38;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_39> AgradCdfBinomial_v_39;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_40> AgradCdfBinomial_v_40;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_41> AgradCdfBinomial_v_41;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_42> AgradCdfBinomial_v_42;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_43> AgradCdfBinomial_v_43;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_44> AgradCdfBinomial_v_44;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_45> AgradCdfBinomial_v_45;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_46> AgradCdfBinomial_v_46;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_47> AgradCdfBinomial_v_47;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_48> AgradCdfBinomial_v_48;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_49> AgradCdfBinomial_v_49;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_50> AgradCdfBinomial_v_50;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_51> AgradCdfBinomial_v_51;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_52> AgradCdfBinomial_v_52;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_53> AgradCdfBinomial_v_53;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_54> AgradCdfBinomial_v_54;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_55> AgradCdfBinomial_v_55;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_56> AgradCdfBinomial_v_56;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_57> AgradCdfBinomial_v_57;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_58> AgradCdfBinomial_v_58;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_59> AgradCdfBinomial_v_59;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_60> AgradCdfBinomial_v_60;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_61> AgradCdfBinomial_v_61;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_62> AgradCdfBinomial_v_62;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_63> AgradCdfBinomial_v_63;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_64> AgradCdfBinomial_v_64;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_65> AgradCdfBinomial_v_65;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_66> AgradCdfBinomial_v_66;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_67> AgradCdfBinomial_v_67;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_68> AgradCdfBinomial_v_68;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_69> AgradCdfBinomial_v_69;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_70> AgradCdfBinomial_v_70;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_71> AgradCdfBinomial_v_71;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_72> AgradCdfBinomial_v_72;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_73> AgradCdfBinomial_v_73;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_74> AgradCdfBinomial_v_74;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_75> AgradCdfBinomial_v_75;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_76> AgradCdfBinomial_v_76;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_77> AgradCdfBinomial_v_77;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_78> AgradCdfBinomial_v_78;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_79> AgradCdfBinomial_v_79;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_80> AgradCdfBinomial_v_80;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_81> AgradCdfBinomial_v_81;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_82> AgradCdfBinomial_v_82;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_83> AgradCdfBinomial_v_83;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_84> AgradCdfBinomial_v_84;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_85> AgradCdfBinomial_v_85;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_86> AgradCdfBinomial_v_86;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_87> AgradCdfBinomial_v_87;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_88> AgradCdfBinomial_v_88;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_89> AgradCdfBinomial_v_89;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_90> AgradCdfBinomial_v_90;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_91> AgradCdfBinomial_v_91;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_92> AgradCdfBinomial_v_92;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_93> AgradCdfBinomial_v_93;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_94> AgradCdfBinomial_v_94;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_95> AgradCdfBinomial_v_95;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_96> AgradCdfBinomial_v_96;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_97> AgradCdfBinomial_v_97;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_98> AgradCdfBinomial_v_98;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_99> AgradCdfBinomial_v_99;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_100> AgradCdfBinomial_v_100;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_101> AgradCdfBinomial_v_101;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_102> AgradCdfBinomial_v_102;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_103> AgradCdfBinomial_v_103;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_104> AgradCdfBinomial_v_104;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_105> AgradCdfBinomial_v_105;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_106> AgradCdfBinomial_v_106;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_107> AgradCdfBinomial_v_107;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_108> AgradCdfBinomial_v_108;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_109> AgradCdfBinomial_v_109;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_110> AgradCdfBinomial_v_110;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_111> AgradCdfBinomial_v_111;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_112> AgradCdfBinomial_v_112;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_113> AgradCdfBinomial_v_113;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_114> AgradCdfBinomial_v_114;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_115> AgradCdfBinomial_v_115;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_116> AgradCdfBinomial_v_116;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_117> AgradCdfBinomial_v_117;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_118> AgradCdfBinomial_v_118;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_119> AgradCdfBinomial_v_119;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_120> AgradCdfBinomial_v_120;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_121> AgradCdfBinomial_v_121;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_122> AgradCdfBinomial_v_122;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_123> AgradCdfBinomial_v_123;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_124> AgradCdfBinomial_v_124;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_125> AgradCdfBinomial_v_125;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_126> AgradCdfBinomial_v_126;
typedef boost::mpl::vector<AgradCdfBinomial, type_v_127> AgradCdfBinomial_v_127;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_0, AgradCdfTestFixture, AgradCdfBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_1, AgradCdfTestFixture, AgradCdfBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_2, AgradCdfTestFixture, AgradCdfBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_3, AgradCdfTestFixture, AgradCdfBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_4, AgradCdfTestFixture, AgradCdfBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_5, AgradCdfTestFixture, AgradCdfBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_6, AgradCdfTestFixture, AgradCdfBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_7, AgradCdfTestFixture, AgradCdfBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_8, AgradCdfTestFixture, AgradCdfBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_9, AgradCdfTestFixture, AgradCdfBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_10, AgradCdfTestFixture, AgradCdfBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_11, AgradCdfTestFixture, AgradCdfBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_12, AgradCdfTestFixture, AgradCdfBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_13, AgradCdfTestFixture, AgradCdfBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_14, AgradCdfTestFixture, AgradCdfBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_15, AgradCdfTestFixture, AgradCdfBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_16, AgradCdfTestFixture, AgradCdfBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_17, AgradCdfTestFixture, AgradCdfBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_18, AgradCdfTestFixture, AgradCdfBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_19, AgradCdfTestFixture, AgradCdfBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_20, AgradCdfTestFixture, AgradCdfBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_21, AgradCdfTestFixture, AgradCdfBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_22, AgradCdfTestFixture, AgradCdfBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_23, AgradCdfTestFixture, AgradCdfBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_24, AgradCdfTestFixture, AgradCdfBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_25, AgradCdfTestFixture, AgradCdfBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_26, AgradCdfTestFixture, AgradCdfBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_27, AgradCdfTestFixture, AgradCdfBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_28, AgradCdfTestFixture, AgradCdfBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_29, AgradCdfTestFixture, AgradCdfBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_30, AgradCdfTestFixture, AgradCdfBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_31, AgradCdfTestFixture, AgradCdfBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_32, AgradCdfTestFixture, AgradCdfBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_33, AgradCdfTestFixture, AgradCdfBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_34, AgradCdfTestFixture, AgradCdfBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_35, AgradCdfTestFixture, AgradCdfBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_36, AgradCdfTestFixture, AgradCdfBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_37, AgradCdfTestFixture, AgradCdfBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_38, AgradCdfTestFixture, AgradCdfBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_39, AgradCdfTestFixture, AgradCdfBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_40, AgradCdfTestFixture, AgradCdfBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_41, AgradCdfTestFixture, AgradCdfBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_42, AgradCdfTestFixture, AgradCdfBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_43, AgradCdfTestFixture, AgradCdfBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_44, AgradCdfTestFixture, AgradCdfBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_45, AgradCdfTestFixture, AgradCdfBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_46, AgradCdfTestFixture, AgradCdfBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_47, AgradCdfTestFixture, AgradCdfBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_48, AgradCdfTestFixture, AgradCdfBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_49, AgradCdfTestFixture, AgradCdfBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_50, AgradCdfTestFixture, AgradCdfBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_51, AgradCdfTestFixture, AgradCdfBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_52, AgradCdfTestFixture, AgradCdfBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_53, AgradCdfTestFixture, AgradCdfBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_54, AgradCdfTestFixture, AgradCdfBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_55, AgradCdfTestFixture, AgradCdfBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_56, AgradCdfTestFixture, AgradCdfBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_57, AgradCdfTestFixture, AgradCdfBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_58, AgradCdfTestFixture, AgradCdfBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_59, AgradCdfTestFixture, AgradCdfBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_60, AgradCdfTestFixture, AgradCdfBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_61, AgradCdfTestFixture, AgradCdfBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_62, AgradCdfTestFixture, AgradCdfBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_63, AgradCdfTestFixture, AgradCdfBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_64, AgradCdfTestFixture, AgradCdfBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_65, AgradCdfTestFixture, AgradCdfBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_66, AgradCdfTestFixture, AgradCdfBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_67, AgradCdfTestFixture, AgradCdfBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_68, AgradCdfTestFixture, AgradCdfBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_69, AgradCdfTestFixture, AgradCdfBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_70, AgradCdfTestFixture, AgradCdfBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_71, AgradCdfTestFixture, AgradCdfBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_72, AgradCdfTestFixture, AgradCdfBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_73, AgradCdfTestFixture, AgradCdfBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_74, AgradCdfTestFixture, AgradCdfBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_75, AgradCdfTestFixture, AgradCdfBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_76, AgradCdfTestFixture, AgradCdfBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_77, AgradCdfTestFixture, AgradCdfBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_78, AgradCdfTestFixture, AgradCdfBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_79, AgradCdfTestFixture, AgradCdfBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_80, AgradCdfTestFixture, AgradCdfBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_81, AgradCdfTestFixture, AgradCdfBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_82, AgradCdfTestFixture, AgradCdfBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_83, AgradCdfTestFixture, AgradCdfBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_84, AgradCdfTestFixture, AgradCdfBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_85, AgradCdfTestFixture, AgradCdfBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_86, AgradCdfTestFixture, AgradCdfBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_87, AgradCdfTestFixture, AgradCdfBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_88, AgradCdfTestFixture, AgradCdfBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_89, AgradCdfTestFixture, AgradCdfBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_90, AgradCdfTestFixture, AgradCdfBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_91, AgradCdfTestFixture, AgradCdfBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_92, AgradCdfTestFixture, AgradCdfBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_93, AgradCdfTestFixture, AgradCdfBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_94, AgradCdfTestFixture, AgradCdfBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_95, AgradCdfTestFixture, AgradCdfBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_96, AgradCdfTestFixture, AgradCdfBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_97, AgradCdfTestFixture, AgradCdfBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_98, AgradCdfTestFixture, AgradCdfBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_99, AgradCdfTestFixture, AgradCdfBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_100, AgradCdfTestFixture, AgradCdfBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_101, AgradCdfTestFixture, AgradCdfBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_102, AgradCdfTestFixture, AgradCdfBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_103, AgradCdfTestFixture, AgradCdfBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_104, AgradCdfTestFixture, AgradCdfBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_105, AgradCdfTestFixture, AgradCdfBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_106, AgradCdfTestFixture, AgradCdfBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_107, AgradCdfTestFixture, AgradCdfBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_108, AgradCdfTestFixture, AgradCdfBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_109, AgradCdfTestFixture, AgradCdfBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_110, AgradCdfTestFixture, AgradCdfBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_111, AgradCdfTestFixture, AgradCdfBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_112, AgradCdfTestFixture, AgradCdfBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_113, AgradCdfTestFixture, AgradCdfBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_114, AgradCdfTestFixture, AgradCdfBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_115, AgradCdfTestFixture, AgradCdfBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_116, AgradCdfTestFixture, AgradCdfBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_117, AgradCdfTestFixture, AgradCdfBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_118, AgradCdfTestFixture, AgradCdfBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_119, AgradCdfTestFixture, AgradCdfBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_120, AgradCdfTestFixture, AgradCdfBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_121, AgradCdfTestFixture, AgradCdfBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_122, AgradCdfTestFixture, AgradCdfBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_123, AgradCdfTestFixture, AgradCdfBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_124, AgradCdfTestFixture, AgradCdfBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_125, AgradCdfTestFixture, AgradCdfBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_126, AgradCdfTestFixture, AgradCdfBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfBinomial_v_127, AgradCdfTestFixture, AgradCdfBinomial_v_127);

