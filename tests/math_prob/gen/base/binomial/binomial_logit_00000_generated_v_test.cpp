#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <binomial/binomial_logit_test.hpp>

typedef boost::mpl::vector<int, int, double, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<int, int, std::vector<double>, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<int, int, var, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<int, int, std::vector<var>, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<int, std::vector<int>, double, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<int, std::vector<int>, var, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<std::vector<int>, int, double, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<std::vector<int>, int, var, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<var>, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, var, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_63;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, empty, empty, empty> type_v_64;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, empty, empty, empty> type_v_65;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_66;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_67;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, empty, empty, empty> type_v_68;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, empty, empty, empty> type_v_69;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_70;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_71;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, empty, empty, empty> type_v_72;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_73;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_74;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_75;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, empty, empty, empty> type_v_76;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_77;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_78;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_79;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_80;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_81;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_82;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_83;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_84;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_85;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_86;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_87;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_88;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_89;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_90;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_91;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_92;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_93;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_94;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_95;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, empty, empty, empty> type_v_96;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, empty, empty, empty> type_v_97;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_98;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_99;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, empty, empty, empty> type_v_100;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, empty, empty, empty> type_v_101;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_102;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_103;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, empty, empty, empty> type_v_104;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_105;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_106;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_107;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, empty, empty, empty> type_v_108;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_109;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_110;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_111;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_112;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_113;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_114;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_115;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_116;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_117;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_118;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_119;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_120;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_121;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_122;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_123;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_124;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_125;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_126;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_127;

typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_0> AgradDistributionsBinomialLogit_v_0;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_1> AgradDistributionsBinomialLogit_v_1;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_2> AgradDistributionsBinomialLogit_v_2;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_3> AgradDistributionsBinomialLogit_v_3;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_4> AgradDistributionsBinomialLogit_v_4;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_5> AgradDistributionsBinomialLogit_v_5;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_6> AgradDistributionsBinomialLogit_v_6;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_7> AgradDistributionsBinomialLogit_v_7;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_8> AgradDistributionsBinomialLogit_v_8;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_9> AgradDistributionsBinomialLogit_v_9;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_10> AgradDistributionsBinomialLogit_v_10;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_11> AgradDistributionsBinomialLogit_v_11;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_12> AgradDistributionsBinomialLogit_v_12;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_13> AgradDistributionsBinomialLogit_v_13;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_14> AgradDistributionsBinomialLogit_v_14;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_15> AgradDistributionsBinomialLogit_v_15;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_16> AgradDistributionsBinomialLogit_v_16;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_17> AgradDistributionsBinomialLogit_v_17;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_18> AgradDistributionsBinomialLogit_v_18;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_19> AgradDistributionsBinomialLogit_v_19;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_20> AgradDistributionsBinomialLogit_v_20;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_21> AgradDistributionsBinomialLogit_v_21;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_22> AgradDistributionsBinomialLogit_v_22;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_23> AgradDistributionsBinomialLogit_v_23;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_24> AgradDistributionsBinomialLogit_v_24;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_25> AgradDistributionsBinomialLogit_v_25;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_26> AgradDistributionsBinomialLogit_v_26;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_27> AgradDistributionsBinomialLogit_v_27;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_28> AgradDistributionsBinomialLogit_v_28;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_29> AgradDistributionsBinomialLogit_v_29;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_30> AgradDistributionsBinomialLogit_v_30;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_31> AgradDistributionsBinomialLogit_v_31;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_32> AgradDistributionsBinomialLogit_v_32;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_33> AgradDistributionsBinomialLogit_v_33;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_34> AgradDistributionsBinomialLogit_v_34;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_35> AgradDistributionsBinomialLogit_v_35;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_36> AgradDistributionsBinomialLogit_v_36;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_37> AgradDistributionsBinomialLogit_v_37;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_38> AgradDistributionsBinomialLogit_v_38;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_39> AgradDistributionsBinomialLogit_v_39;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_40> AgradDistributionsBinomialLogit_v_40;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_41> AgradDistributionsBinomialLogit_v_41;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_42> AgradDistributionsBinomialLogit_v_42;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_43> AgradDistributionsBinomialLogit_v_43;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_44> AgradDistributionsBinomialLogit_v_44;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_45> AgradDistributionsBinomialLogit_v_45;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_46> AgradDistributionsBinomialLogit_v_46;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_47> AgradDistributionsBinomialLogit_v_47;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_48> AgradDistributionsBinomialLogit_v_48;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_49> AgradDistributionsBinomialLogit_v_49;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_50> AgradDistributionsBinomialLogit_v_50;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_51> AgradDistributionsBinomialLogit_v_51;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_52> AgradDistributionsBinomialLogit_v_52;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_53> AgradDistributionsBinomialLogit_v_53;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_54> AgradDistributionsBinomialLogit_v_54;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_55> AgradDistributionsBinomialLogit_v_55;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_56> AgradDistributionsBinomialLogit_v_56;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_57> AgradDistributionsBinomialLogit_v_57;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_58> AgradDistributionsBinomialLogit_v_58;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_59> AgradDistributionsBinomialLogit_v_59;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_60> AgradDistributionsBinomialLogit_v_60;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_61> AgradDistributionsBinomialLogit_v_61;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_62> AgradDistributionsBinomialLogit_v_62;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_63> AgradDistributionsBinomialLogit_v_63;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_64> AgradDistributionsBinomialLogit_v_64;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_65> AgradDistributionsBinomialLogit_v_65;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_66> AgradDistributionsBinomialLogit_v_66;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_67> AgradDistributionsBinomialLogit_v_67;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_68> AgradDistributionsBinomialLogit_v_68;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_69> AgradDistributionsBinomialLogit_v_69;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_70> AgradDistributionsBinomialLogit_v_70;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_71> AgradDistributionsBinomialLogit_v_71;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_72> AgradDistributionsBinomialLogit_v_72;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_73> AgradDistributionsBinomialLogit_v_73;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_74> AgradDistributionsBinomialLogit_v_74;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_75> AgradDistributionsBinomialLogit_v_75;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_76> AgradDistributionsBinomialLogit_v_76;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_77> AgradDistributionsBinomialLogit_v_77;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_78> AgradDistributionsBinomialLogit_v_78;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_79> AgradDistributionsBinomialLogit_v_79;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_80> AgradDistributionsBinomialLogit_v_80;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_81> AgradDistributionsBinomialLogit_v_81;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_82> AgradDistributionsBinomialLogit_v_82;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_83> AgradDistributionsBinomialLogit_v_83;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_84> AgradDistributionsBinomialLogit_v_84;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_85> AgradDistributionsBinomialLogit_v_85;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_86> AgradDistributionsBinomialLogit_v_86;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_87> AgradDistributionsBinomialLogit_v_87;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_88> AgradDistributionsBinomialLogit_v_88;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_89> AgradDistributionsBinomialLogit_v_89;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_90> AgradDistributionsBinomialLogit_v_90;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_91> AgradDistributionsBinomialLogit_v_91;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_92> AgradDistributionsBinomialLogit_v_92;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_93> AgradDistributionsBinomialLogit_v_93;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_94> AgradDistributionsBinomialLogit_v_94;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_95> AgradDistributionsBinomialLogit_v_95;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_96> AgradDistributionsBinomialLogit_v_96;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_97> AgradDistributionsBinomialLogit_v_97;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_98> AgradDistributionsBinomialLogit_v_98;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_99> AgradDistributionsBinomialLogit_v_99;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_100> AgradDistributionsBinomialLogit_v_100;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_101> AgradDistributionsBinomialLogit_v_101;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_102> AgradDistributionsBinomialLogit_v_102;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_103> AgradDistributionsBinomialLogit_v_103;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_104> AgradDistributionsBinomialLogit_v_104;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_105> AgradDistributionsBinomialLogit_v_105;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_106> AgradDistributionsBinomialLogit_v_106;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_107> AgradDistributionsBinomialLogit_v_107;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_108> AgradDistributionsBinomialLogit_v_108;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_109> AgradDistributionsBinomialLogit_v_109;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_110> AgradDistributionsBinomialLogit_v_110;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_111> AgradDistributionsBinomialLogit_v_111;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_112> AgradDistributionsBinomialLogit_v_112;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_113> AgradDistributionsBinomialLogit_v_113;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_114> AgradDistributionsBinomialLogit_v_114;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_115> AgradDistributionsBinomialLogit_v_115;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_116> AgradDistributionsBinomialLogit_v_116;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_117> AgradDistributionsBinomialLogit_v_117;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_118> AgradDistributionsBinomialLogit_v_118;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_119> AgradDistributionsBinomialLogit_v_119;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_120> AgradDistributionsBinomialLogit_v_120;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_121> AgradDistributionsBinomialLogit_v_121;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_122> AgradDistributionsBinomialLogit_v_122;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_123> AgradDistributionsBinomialLogit_v_123;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_124> AgradDistributionsBinomialLogit_v_124;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_125> AgradDistributionsBinomialLogit_v_125;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_126> AgradDistributionsBinomialLogit_v_126;
typedef boost::mpl::vector<AgradDistributionsBinomialLogit, type_v_127> AgradDistributionsBinomialLogit_v_127;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_0, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_1, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_2, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_3, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_4, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_5, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_6, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_7, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_8, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_9, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_10, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_11, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_12, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_13, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_14, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_15, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_16, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_17, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_18, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_19, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_20, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_21, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_22, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_23, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_24, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_25, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_26, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_27, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_28, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_29, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_30, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_31, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_32, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_33, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_34, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_35, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_36, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_37, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_38, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_39, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_40, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_41, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_42, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_43, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_44, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_45, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_46, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_47, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_48, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_49, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_50, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_51, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_52, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_53, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_54, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_55, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_56, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_57, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_58, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_59, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_60, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_61, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_62, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_63, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_64, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_65, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_66, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_67, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_68, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_69, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_70, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_71, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_72, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_73, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_74, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_75, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_76, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_77, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_78, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_79, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_80, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_81, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_82, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_83, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_84, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_85, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_86, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_87, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_88, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_89, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_90, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_91, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_92, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_93, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_94, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_95, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_96, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_97, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_98, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_99, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_100, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_101, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_102, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_103, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_104, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_105, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_106, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_107, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_108, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_109, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_110, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_111, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_112, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_113, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_114, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_115, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_116, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_117, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_118, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_119, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_120, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_121, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_122, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_123, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_124, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_125, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_126, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomialLogit_v_127, AgradDistributionTestFixture, AgradDistributionsBinomialLogit_v_127);

