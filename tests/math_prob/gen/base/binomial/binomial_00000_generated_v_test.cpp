#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <binomial/binomial_test.hpp>

typedef boost::mpl::vector<int, int, double, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<int, int, std::vector<double>, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<int, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<int, int, var, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<int, int, std::vector<var>, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<int, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<int, std::vector<int>, double, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<int, std::vector<int>, var, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<std::vector<int>, int, double, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<double>, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<std::vector<int>, int, var, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<var>, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, double, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, var, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_63;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, double, empty, empty, empty> type_v_64;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<double>, empty, empty, empty> type_v_65;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_66;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_67;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, var, empty, empty, empty> type_v_68;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<var>, empty, empty, empty> type_v_69;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_70;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_71;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, double, empty, empty, empty> type_v_72;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_73;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_74;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_75;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, var, empty, empty, empty> type_v_76;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_77;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_78;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_79;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_80;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_81;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_82;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_83;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_84;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_85;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_86;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_87;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_88;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_89;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_90;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_91;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_92;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_93;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_94;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_95;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, double, empty, empty, empty> type_v_96;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<double>, empty, empty, empty> type_v_97;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_98;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_99;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, var, empty, empty, empty> type_v_100;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<var>, empty, empty, empty> type_v_101;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_102;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_103;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, double, empty, empty, empty> type_v_104;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<double>, empty, empty, empty> type_v_105;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_106;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_107;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, var, empty, empty, empty> type_v_108;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<var>, empty, empty, empty> type_v_109;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_110;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_111;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_112;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_113;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_114;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_115;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_116;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_117;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_118;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_119;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_120;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_121;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_122;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_123;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_124;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_125;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_126;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_127;

typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_0> AgradDistributionsBinomial_v_0;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_1> AgradDistributionsBinomial_v_1;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_2> AgradDistributionsBinomial_v_2;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_3> AgradDistributionsBinomial_v_3;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_4> AgradDistributionsBinomial_v_4;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_5> AgradDistributionsBinomial_v_5;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_6> AgradDistributionsBinomial_v_6;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_7> AgradDistributionsBinomial_v_7;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_8> AgradDistributionsBinomial_v_8;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_9> AgradDistributionsBinomial_v_9;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_10> AgradDistributionsBinomial_v_10;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_11> AgradDistributionsBinomial_v_11;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_12> AgradDistributionsBinomial_v_12;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_13> AgradDistributionsBinomial_v_13;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_14> AgradDistributionsBinomial_v_14;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_15> AgradDistributionsBinomial_v_15;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_16> AgradDistributionsBinomial_v_16;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_17> AgradDistributionsBinomial_v_17;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_18> AgradDistributionsBinomial_v_18;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_19> AgradDistributionsBinomial_v_19;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_20> AgradDistributionsBinomial_v_20;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_21> AgradDistributionsBinomial_v_21;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_22> AgradDistributionsBinomial_v_22;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_23> AgradDistributionsBinomial_v_23;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_24> AgradDistributionsBinomial_v_24;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_25> AgradDistributionsBinomial_v_25;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_26> AgradDistributionsBinomial_v_26;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_27> AgradDistributionsBinomial_v_27;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_28> AgradDistributionsBinomial_v_28;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_29> AgradDistributionsBinomial_v_29;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_30> AgradDistributionsBinomial_v_30;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_31> AgradDistributionsBinomial_v_31;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_32> AgradDistributionsBinomial_v_32;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_33> AgradDistributionsBinomial_v_33;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_34> AgradDistributionsBinomial_v_34;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_35> AgradDistributionsBinomial_v_35;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_36> AgradDistributionsBinomial_v_36;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_37> AgradDistributionsBinomial_v_37;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_38> AgradDistributionsBinomial_v_38;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_39> AgradDistributionsBinomial_v_39;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_40> AgradDistributionsBinomial_v_40;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_41> AgradDistributionsBinomial_v_41;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_42> AgradDistributionsBinomial_v_42;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_43> AgradDistributionsBinomial_v_43;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_44> AgradDistributionsBinomial_v_44;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_45> AgradDistributionsBinomial_v_45;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_46> AgradDistributionsBinomial_v_46;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_47> AgradDistributionsBinomial_v_47;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_48> AgradDistributionsBinomial_v_48;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_49> AgradDistributionsBinomial_v_49;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_50> AgradDistributionsBinomial_v_50;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_51> AgradDistributionsBinomial_v_51;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_52> AgradDistributionsBinomial_v_52;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_53> AgradDistributionsBinomial_v_53;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_54> AgradDistributionsBinomial_v_54;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_55> AgradDistributionsBinomial_v_55;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_56> AgradDistributionsBinomial_v_56;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_57> AgradDistributionsBinomial_v_57;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_58> AgradDistributionsBinomial_v_58;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_59> AgradDistributionsBinomial_v_59;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_60> AgradDistributionsBinomial_v_60;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_61> AgradDistributionsBinomial_v_61;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_62> AgradDistributionsBinomial_v_62;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_63> AgradDistributionsBinomial_v_63;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_64> AgradDistributionsBinomial_v_64;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_65> AgradDistributionsBinomial_v_65;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_66> AgradDistributionsBinomial_v_66;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_67> AgradDistributionsBinomial_v_67;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_68> AgradDistributionsBinomial_v_68;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_69> AgradDistributionsBinomial_v_69;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_70> AgradDistributionsBinomial_v_70;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_71> AgradDistributionsBinomial_v_71;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_72> AgradDistributionsBinomial_v_72;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_73> AgradDistributionsBinomial_v_73;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_74> AgradDistributionsBinomial_v_74;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_75> AgradDistributionsBinomial_v_75;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_76> AgradDistributionsBinomial_v_76;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_77> AgradDistributionsBinomial_v_77;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_78> AgradDistributionsBinomial_v_78;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_79> AgradDistributionsBinomial_v_79;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_80> AgradDistributionsBinomial_v_80;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_81> AgradDistributionsBinomial_v_81;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_82> AgradDistributionsBinomial_v_82;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_83> AgradDistributionsBinomial_v_83;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_84> AgradDistributionsBinomial_v_84;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_85> AgradDistributionsBinomial_v_85;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_86> AgradDistributionsBinomial_v_86;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_87> AgradDistributionsBinomial_v_87;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_88> AgradDistributionsBinomial_v_88;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_89> AgradDistributionsBinomial_v_89;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_90> AgradDistributionsBinomial_v_90;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_91> AgradDistributionsBinomial_v_91;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_92> AgradDistributionsBinomial_v_92;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_93> AgradDistributionsBinomial_v_93;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_94> AgradDistributionsBinomial_v_94;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_95> AgradDistributionsBinomial_v_95;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_96> AgradDistributionsBinomial_v_96;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_97> AgradDistributionsBinomial_v_97;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_98> AgradDistributionsBinomial_v_98;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_99> AgradDistributionsBinomial_v_99;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_100> AgradDistributionsBinomial_v_100;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_101> AgradDistributionsBinomial_v_101;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_102> AgradDistributionsBinomial_v_102;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_103> AgradDistributionsBinomial_v_103;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_104> AgradDistributionsBinomial_v_104;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_105> AgradDistributionsBinomial_v_105;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_106> AgradDistributionsBinomial_v_106;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_107> AgradDistributionsBinomial_v_107;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_108> AgradDistributionsBinomial_v_108;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_109> AgradDistributionsBinomial_v_109;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_110> AgradDistributionsBinomial_v_110;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_111> AgradDistributionsBinomial_v_111;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_112> AgradDistributionsBinomial_v_112;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_113> AgradDistributionsBinomial_v_113;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_114> AgradDistributionsBinomial_v_114;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_115> AgradDistributionsBinomial_v_115;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_116> AgradDistributionsBinomial_v_116;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_117> AgradDistributionsBinomial_v_117;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_118> AgradDistributionsBinomial_v_118;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_119> AgradDistributionsBinomial_v_119;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_120> AgradDistributionsBinomial_v_120;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_121> AgradDistributionsBinomial_v_121;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_122> AgradDistributionsBinomial_v_122;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_123> AgradDistributionsBinomial_v_123;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_124> AgradDistributionsBinomial_v_124;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_125> AgradDistributionsBinomial_v_125;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_126> AgradDistributionsBinomial_v_126;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_v_127> AgradDistributionsBinomial_v_127;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_0, AgradDistributionTestFixture, AgradDistributionsBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_1, AgradDistributionTestFixture, AgradDistributionsBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_2, AgradDistributionTestFixture, AgradDistributionsBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_3, AgradDistributionTestFixture, AgradDistributionsBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_4, AgradDistributionTestFixture, AgradDistributionsBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_5, AgradDistributionTestFixture, AgradDistributionsBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_6, AgradDistributionTestFixture, AgradDistributionsBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_7, AgradDistributionTestFixture, AgradDistributionsBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_8, AgradDistributionTestFixture, AgradDistributionsBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_9, AgradDistributionTestFixture, AgradDistributionsBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_10, AgradDistributionTestFixture, AgradDistributionsBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_11, AgradDistributionTestFixture, AgradDistributionsBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_12, AgradDistributionTestFixture, AgradDistributionsBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_13, AgradDistributionTestFixture, AgradDistributionsBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_14, AgradDistributionTestFixture, AgradDistributionsBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_15, AgradDistributionTestFixture, AgradDistributionsBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_16, AgradDistributionTestFixture, AgradDistributionsBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_17, AgradDistributionTestFixture, AgradDistributionsBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_18, AgradDistributionTestFixture, AgradDistributionsBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_19, AgradDistributionTestFixture, AgradDistributionsBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_20, AgradDistributionTestFixture, AgradDistributionsBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_21, AgradDistributionTestFixture, AgradDistributionsBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_22, AgradDistributionTestFixture, AgradDistributionsBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_23, AgradDistributionTestFixture, AgradDistributionsBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_24, AgradDistributionTestFixture, AgradDistributionsBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_25, AgradDistributionTestFixture, AgradDistributionsBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_26, AgradDistributionTestFixture, AgradDistributionsBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_27, AgradDistributionTestFixture, AgradDistributionsBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_28, AgradDistributionTestFixture, AgradDistributionsBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_29, AgradDistributionTestFixture, AgradDistributionsBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_30, AgradDistributionTestFixture, AgradDistributionsBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_31, AgradDistributionTestFixture, AgradDistributionsBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_32, AgradDistributionTestFixture, AgradDistributionsBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_33, AgradDistributionTestFixture, AgradDistributionsBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_34, AgradDistributionTestFixture, AgradDistributionsBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_35, AgradDistributionTestFixture, AgradDistributionsBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_36, AgradDistributionTestFixture, AgradDistributionsBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_37, AgradDistributionTestFixture, AgradDistributionsBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_38, AgradDistributionTestFixture, AgradDistributionsBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_39, AgradDistributionTestFixture, AgradDistributionsBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_40, AgradDistributionTestFixture, AgradDistributionsBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_41, AgradDistributionTestFixture, AgradDistributionsBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_42, AgradDistributionTestFixture, AgradDistributionsBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_43, AgradDistributionTestFixture, AgradDistributionsBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_44, AgradDistributionTestFixture, AgradDistributionsBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_45, AgradDistributionTestFixture, AgradDistributionsBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_46, AgradDistributionTestFixture, AgradDistributionsBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_47, AgradDistributionTestFixture, AgradDistributionsBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_48, AgradDistributionTestFixture, AgradDistributionsBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_49, AgradDistributionTestFixture, AgradDistributionsBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_50, AgradDistributionTestFixture, AgradDistributionsBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_51, AgradDistributionTestFixture, AgradDistributionsBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_52, AgradDistributionTestFixture, AgradDistributionsBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_53, AgradDistributionTestFixture, AgradDistributionsBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_54, AgradDistributionTestFixture, AgradDistributionsBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_55, AgradDistributionTestFixture, AgradDistributionsBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_56, AgradDistributionTestFixture, AgradDistributionsBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_57, AgradDistributionTestFixture, AgradDistributionsBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_58, AgradDistributionTestFixture, AgradDistributionsBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_59, AgradDistributionTestFixture, AgradDistributionsBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_60, AgradDistributionTestFixture, AgradDistributionsBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_61, AgradDistributionTestFixture, AgradDistributionsBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_62, AgradDistributionTestFixture, AgradDistributionsBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_63, AgradDistributionTestFixture, AgradDistributionsBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_64, AgradDistributionTestFixture, AgradDistributionsBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_65, AgradDistributionTestFixture, AgradDistributionsBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_66, AgradDistributionTestFixture, AgradDistributionsBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_67, AgradDistributionTestFixture, AgradDistributionsBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_68, AgradDistributionTestFixture, AgradDistributionsBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_69, AgradDistributionTestFixture, AgradDistributionsBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_70, AgradDistributionTestFixture, AgradDistributionsBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_71, AgradDistributionTestFixture, AgradDistributionsBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_72, AgradDistributionTestFixture, AgradDistributionsBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_73, AgradDistributionTestFixture, AgradDistributionsBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_74, AgradDistributionTestFixture, AgradDistributionsBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_75, AgradDistributionTestFixture, AgradDistributionsBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_76, AgradDistributionTestFixture, AgradDistributionsBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_77, AgradDistributionTestFixture, AgradDistributionsBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_78, AgradDistributionTestFixture, AgradDistributionsBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_79, AgradDistributionTestFixture, AgradDistributionsBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_80, AgradDistributionTestFixture, AgradDistributionsBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_81, AgradDistributionTestFixture, AgradDistributionsBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_82, AgradDistributionTestFixture, AgradDistributionsBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_83, AgradDistributionTestFixture, AgradDistributionsBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_84, AgradDistributionTestFixture, AgradDistributionsBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_85, AgradDistributionTestFixture, AgradDistributionsBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_86, AgradDistributionTestFixture, AgradDistributionsBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_87, AgradDistributionTestFixture, AgradDistributionsBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_88, AgradDistributionTestFixture, AgradDistributionsBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_89, AgradDistributionTestFixture, AgradDistributionsBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_90, AgradDistributionTestFixture, AgradDistributionsBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_91, AgradDistributionTestFixture, AgradDistributionsBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_92, AgradDistributionTestFixture, AgradDistributionsBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_93, AgradDistributionTestFixture, AgradDistributionsBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_94, AgradDistributionTestFixture, AgradDistributionsBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_95, AgradDistributionTestFixture, AgradDistributionsBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_96, AgradDistributionTestFixture, AgradDistributionsBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_97, AgradDistributionTestFixture, AgradDistributionsBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_98, AgradDistributionTestFixture, AgradDistributionsBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_99, AgradDistributionTestFixture, AgradDistributionsBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_100, AgradDistributionTestFixture, AgradDistributionsBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_101, AgradDistributionTestFixture, AgradDistributionsBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_102, AgradDistributionTestFixture, AgradDistributionsBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_103, AgradDistributionTestFixture, AgradDistributionsBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_104, AgradDistributionTestFixture, AgradDistributionsBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_105, AgradDistributionTestFixture, AgradDistributionsBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_106, AgradDistributionTestFixture, AgradDistributionsBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_107, AgradDistributionTestFixture, AgradDistributionsBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_108, AgradDistributionTestFixture, AgradDistributionsBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_109, AgradDistributionTestFixture, AgradDistributionsBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_110, AgradDistributionTestFixture, AgradDistributionsBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_111, AgradDistributionTestFixture, AgradDistributionsBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_112, AgradDistributionTestFixture, AgradDistributionsBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_113, AgradDistributionTestFixture, AgradDistributionsBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_114, AgradDistributionTestFixture, AgradDistributionsBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_115, AgradDistributionTestFixture, AgradDistributionsBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_116, AgradDistributionTestFixture, AgradDistributionsBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_117, AgradDistributionTestFixture, AgradDistributionsBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_118, AgradDistributionTestFixture, AgradDistributionsBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_119, AgradDistributionTestFixture, AgradDistributionsBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_120, AgradDistributionTestFixture, AgradDistributionsBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_121, AgradDistributionTestFixture, AgradDistributionsBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_122, AgradDistributionTestFixture, AgradDistributionsBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_123, AgradDistributionTestFixture, AgradDistributionsBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_124, AgradDistributionTestFixture, AgradDistributionsBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_125, AgradDistributionTestFixture, AgradDistributionsBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_126, AgradDistributionTestFixture, AgradDistributionsBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_v_127, AgradDistributionTestFixture, AgradDistributionsBinomial_v_127);

