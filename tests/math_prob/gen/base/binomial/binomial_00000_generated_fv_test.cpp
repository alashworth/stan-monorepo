#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <binomial/binomial_test.hpp>

typedef boost::mpl::vector<int, int, fvar<var>, empty, empty, empty> type_fv_0;
typedef boost::mpl::vector<int, int, std::vector<fvar<var>>, empty, empty, empty> type_fv_1;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_2;
typedef boost::mpl::vector<int, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_3;
typedef boost::mpl::vector<int, std::vector<int>, fvar<var>, empty, empty, empty> type_fv_4;
typedef boost::mpl::vector<int, std::vector<int>, std::vector<fvar<var>>, empty, empty, empty> type_fv_5;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_6;
typedef boost::mpl::vector<int, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_7;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_8;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_9;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_10;
typedef boost::mpl::vector<int, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_11;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_12;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_13;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_14;
typedef boost::mpl::vector<int, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_15;
typedef boost::mpl::vector<std::vector<int>, int, fvar<var>, empty, empty, empty> type_fv_16;
typedef boost::mpl::vector<std::vector<int>, int, std::vector<fvar<var>>, empty, empty, empty> type_fv_17;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_18;
typedef boost::mpl::vector<std::vector<int>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_19;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, fvar<var>, empty, empty, empty> type_fv_20;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, std::vector<fvar<var>>, empty, empty, empty> type_fv_21;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_22;
typedef boost::mpl::vector<std::vector<int>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_23;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_24;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_25;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_26;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_27;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_28;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_29;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_30;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_31;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, fvar<var>, empty, empty, empty> type_fv_32;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, std::vector<fvar<var>>, empty, empty, empty> type_fv_33;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_34;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_35;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, fvar<var>, empty, empty, empty> type_fv_36;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, std::vector<fvar<var>>, empty, empty, empty> type_fv_37;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_38;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_39;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_40;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_41;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_42;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_43;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_44;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_45;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_46;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_47;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, fvar<var>, empty, empty, empty> type_fv_48;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, std::vector<fvar<var>>, empty, empty, empty> type_fv_49;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_50;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, int, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_51;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, fvar<var>, empty, empty, empty> type_fv_52;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, std::vector<fvar<var>>, empty, empty, empty> type_fv_53;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_54;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<int>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_55;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_56;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_57;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_58;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_59;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_60;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_61;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_62;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_63;

typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_0> AgradDistributionsBinomial_fv_0;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_1> AgradDistributionsBinomial_fv_1;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_2> AgradDistributionsBinomial_fv_2;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_3> AgradDistributionsBinomial_fv_3;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_4> AgradDistributionsBinomial_fv_4;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_5> AgradDistributionsBinomial_fv_5;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_6> AgradDistributionsBinomial_fv_6;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_7> AgradDistributionsBinomial_fv_7;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_8> AgradDistributionsBinomial_fv_8;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_9> AgradDistributionsBinomial_fv_9;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_10> AgradDistributionsBinomial_fv_10;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_11> AgradDistributionsBinomial_fv_11;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_12> AgradDistributionsBinomial_fv_12;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_13> AgradDistributionsBinomial_fv_13;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_14> AgradDistributionsBinomial_fv_14;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_15> AgradDistributionsBinomial_fv_15;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_16> AgradDistributionsBinomial_fv_16;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_17> AgradDistributionsBinomial_fv_17;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_18> AgradDistributionsBinomial_fv_18;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_19> AgradDistributionsBinomial_fv_19;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_20> AgradDistributionsBinomial_fv_20;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_21> AgradDistributionsBinomial_fv_21;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_22> AgradDistributionsBinomial_fv_22;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_23> AgradDistributionsBinomial_fv_23;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_24> AgradDistributionsBinomial_fv_24;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_25> AgradDistributionsBinomial_fv_25;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_26> AgradDistributionsBinomial_fv_26;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_27> AgradDistributionsBinomial_fv_27;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_28> AgradDistributionsBinomial_fv_28;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_29> AgradDistributionsBinomial_fv_29;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_30> AgradDistributionsBinomial_fv_30;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_31> AgradDistributionsBinomial_fv_31;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_32> AgradDistributionsBinomial_fv_32;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_33> AgradDistributionsBinomial_fv_33;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_34> AgradDistributionsBinomial_fv_34;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_35> AgradDistributionsBinomial_fv_35;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_36> AgradDistributionsBinomial_fv_36;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_37> AgradDistributionsBinomial_fv_37;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_38> AgradDistributionsBinomial_fv_38;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_39> AgradDistributionsBinomial_fv_39;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_40> AgradDistributionsBinomial_fv_40;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_41> AgradDistributionsBinomial_fv_41;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_42> AgradDistributionsBinomial_fv_42;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_43> AgradDistributionsBinomial_fv_43;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_44> AgradDistributionsBinomial_fv_44;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_45> AgradDistributionsBinomial_fv_45;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_46> AgradDistributionsBinomial_fv_46;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_47> AgradDistributionsBinomial_fv_47;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_48> AgradDistributionsBinomial_fv_48;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_49> AgradDistributionsBinomial_fv_49;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_50> AgradDistributionsBinomial_fv_50;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_51> AgradDistributionsBinomial_fv_51;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_52> AgradDistributionsBinomial_fv_52;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_53> AgradDistributionsBinomial_fv_53;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_54> AgradDistributionsBinomial_fv_54;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_55> AgradDistributionsBinomial_fv_55;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_56> AgradDistributionsBinomial_fv_56;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_57> AgradDistributionsBinomial_fv_57;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_58> AgradDistributionsBinomial_fv_58;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_59> AgradDistributionsBinomial_fv_59;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_60> AgradDistributionsBinomial_fv_60;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_61> AgradDistributionsBinomial_fv_61;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_62> AgradDistributionsBinomial_fv_62;
typedef boost::mpl::vector<AgradDistributionsBinomial, type_fv_63> AgradDistributionsBinomial_fv_63;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_0, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_1, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_2, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_3, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_4, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_5, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_6, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_7, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_8, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_9, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_10, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_11, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_12, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_13, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_14, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_15, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_16, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_17, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_18, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_19, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_20, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_21, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_22, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_23, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_24, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_25, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_26, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_27, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_28, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_29, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_30, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_31, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_32, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_33, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_34, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_35, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_36, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_37, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_38, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_39, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_40, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_41, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_42, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_43, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_44, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_45, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_46, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_47, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_48, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_49, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_50, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_51, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_52, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_53, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_54, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_55, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_56, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_57, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_58, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_59, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_60, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_61, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_62, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsBinomial_fv_63, AgradDistributionTestFixture, AgradDistributionsBinomial_fv_63);

