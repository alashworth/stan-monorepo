#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty, empty> type_fv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty, empty> type_fv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty, empty> type_fv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_100> AgradCdfLogNegBinomial_fv_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_101> AgradCdfLogNegBinomial_fv_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_102> AgradCdfLogNegBinomial_fv_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_103> AgradCdfLogNegBinomial_fv_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_104> AgradCdfLogNegBinomial_fv_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_105> AgradCdfLogNegBinomial_fv_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_106> AgradCdfLogNegBinomial_fv_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_107> AgradCdfLogNegBinomial_fv_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_108> AgradCdfLogNegBinomial_fv_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_109> AgradCdfLogNegBinomial_fv_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_110> AgradCdfLogNegBinomial_fv_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_111> AgradCdfLogNegBinomial_fv_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_112> AgradCdfLogNegBinomial_fv_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_113> AgradCdfLogNegBinomial_fv_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_114> AgradCdfLogNegBinomial_fv_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_115> AgradCdfLogNegBinomial_fv_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_116> AgradCdfLogNegBinomial_fv_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_117> AgradCdfLogNegBinomial_fv_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_118> AgradCdfLogNegBinomial_fv_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_119> AgradCdfLogNegBinomial_fv_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_120> AgradCdfLogNegBinomial_fv_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_121> AgradCdfLogNegBinomial_fv_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_122> AgradCdfLogNegBinomial_fv_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_123> AgradCdfLogNegBinomial_fv_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_124> AgradCdfLogNegBinomial_fv_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_125> AgradCdfLogNegBinomial_fv_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_126> AgradCdfLogNegBinomial_fv_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_127> AgradCdfLogNegBinomial_fv_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_128> AgradCdfLogNegBinomial_fv_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_129> AgradCdfLogNegBinomial_fv_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_130> AgradCdfLogNegBinomial_fv_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_131> AgradCdfLogNegBinomial_fv_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_132> AgradCdfLogNegBinomial_fv_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_133> AgradCdfLogNegBinomial_fv_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_134> AgradCdfLogNegBinomial_fv_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_135> AgradCdfLogNegBinomial_fv_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_136> AgradCdfLogNegBinomial_fv_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_137> AgradCdfLogNegBinomial_fv_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_138> AgradCdfLogNegBinomial_fv_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_139> AgradCdfLogNegBinomial_fv_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_140> AgradCdfLogNegBinomial_fv_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_141> AgradCdfLogNegBinomial_fv_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_142> AgradCdfLogNegBinomial_fv_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_143> AgradCdfLogNegBinomial_fv_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_144> AgradCdfLogNegBinomial_fv_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_145> AgradCdfLogNegBinomial_fv_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_146> AgradCdfLogNegBinomial_fv_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_147> AgradCdfLogNegBinomial_fv_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_148> AgradCdfLogNegBinomial_fv_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_149> AgradCdfLogNegBinomial_fv_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_150> AgradCdfLogNegBinomial_fv_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_151> AgradCdfLogNegBinomial_fv_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_152> AgradCdfLogNegBinomial_fv_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_153> AgradCdfLogNegBinomial_fv_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_154> AgradCdfLogNegBinomial_fv_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_155> AgradCdfLogNegBinomial_fv_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_156> AgradCdfLogNegBinomial_fv_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_157> AgradCdfLogNegBinomial_fv_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_158> AgradCdfLogNegBinomial_fv_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_159> AgradCdfLogNegBinomial_fv_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_160> AgradCdfLogNegBinomial_fv_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_161> AgradCdfLogNegBinomial_fv_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_162> AgradCdfLogNegBinomial_fv_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_163> AgradCdfLogNegBinomial_fv_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_164> AgradCdfLogNegBinomial_fv_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_165> AgradCdfLogNegBinomial_fv_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_166> AgradCdfLogNegBinomial_fv_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_167> AgradCdfLogNegBinomial_fv_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_168> AgradCdfLogNegBinomial_fv_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_169> AgradCdfLogNegBinomial_fv_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_170> AgradCdfLogNegBinomial_fv_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_171> AgradCdfLogNegBinomial_fv_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_172> AgradCdfLogNegBinomial_fv_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_173> AgradCdfLogNegBinomial_fv_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_174> AgradCdfLogNegBinomial_fv_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_175> AgradCdfLogNegBinomial_fv_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_176> AgradCdfLogNegBinomial_fv_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_177> AgradCdfLogNegBinomial_fv_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_178> AgradCdfLogNegBinomial_fv_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_179> AgradCdfLogNegBinomial_fv_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_180> AgradCdfLogNegBinomial_fv_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_181> AgradCdfLogNegBinomial_fv_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_182> AgradCdfLogNegBinomial_fv_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_183> AgradCdfLogNegBinomial_fv_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_184> AgradCdfLogNegBinomial_fv_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_185> AgradCdfLogNegBinomial_fv_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_186> AgradCdfLogNegBinomial_fv_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_187> AgradCdfLogNegBinomial_fv_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_188> AgradCdfLogNegBinomial_fv_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_189> AgradCdfLogNegBinomial_fv_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_190> AgradCdfLogNegBinomial_fv_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fv_191> AgradCdfLogNegBinomial_fv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fv_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fv_191);

