#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_100> AgradCdfLogNegBinomial_ffv_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_101> AgradCdfLogNegBinomial_ffv_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_102> AgradCdfLogNegBinomial_ffv_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_103> AgradCdfLogNegBinomial_ffv_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_104> AgradCdfLogNegBinomial_ffv_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_105> AgradCdfLogNegBinomial_ffv_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_106> AgradCdfLogNegBinomial_ffv_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_107> AgradCdfLogNegBinomial_ffv_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_108> AgradCdfLogNegBinomial_ffv_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_109> AgradCdfLogNegBinomial_ffv_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_110> AgradCdfLogNegBinomial_ffv_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_111> AgradCdfLogNegBinomial_ffv_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_112> AgradCdfLogNegBinomial_ffv_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_113> AgradCdfLogNegBinomial_ffv_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_114> AgradCdfLogNegBinomial_ffv_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_115> AgradCdfLogNegBinomial_ffv_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_116> AgradCdfLogNegBinomial_ffv_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_117> AgradCdfLogNegBinomial_ffv_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_118> AgradCdfLogNegBinomial_ffv_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_119> AgradCdfLogNegBinomial_ffv_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_120> AgradCdfLogNegBinomial_ffv_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_121> AgradCdfLogNegBinomial_ffv_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_122> AgradCdfLogNegBinomial_ffv_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_123> AgradCdfLogNegBinomial_ffv_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_124> AgradCdfLogNegBinomial_ffv_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_125> AgradCdfLogNegBinomial_ffv_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_126> AgradCdfLogNegBinomial_ffv_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_127> AgradCdfLogNegBinomial_ffv_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_128> AgradCdfLogNegBinomial_ffv_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_129> AgradCdfLogNegBinomial_ffv_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_130> AgradCdfLogNegBinomial_ffv_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_131> AgradCdfLogNegBinomial_ffv_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_132> AgradCdfLogNegBinomial_ffv_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_133> AgradCdfLogNegBinomial_ffv_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_134> AgradCdfLogNegBinomial_ffv_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_135> AgradCdfLogNegBinomial_ffv_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_136> AgradCdfLogNegBinomial_ffv_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_137> AgradCdfLogNegBinomial_ffv_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_138> AgradCdfLogNegBinomial_ffv_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_139> AgradCdfLogNegBinomial_ffv_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_140> AgradCdfLogNegBinomial_ffv_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_141> AgradCdfLogNegBinomial_ffv_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_142> AgradCdfLogNegBinomial_ffv_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_143> AgradCdfLogNegBinomial_ffv_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_144> AgradCdfLogNegBinomial_ffv_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_145> AgradCdfLogNegBinomial_ffv_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_146> AgradCdfLogNegBinomial_ffv_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_147> AgradCdfLogNegBinomial_ffv_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_148> AgradCdfLogNegBinomial_ffv_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_149> AgradCdfLogNegBinomial_ffv_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_150> AgradCdfLogNegBinomial_ffv_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_151> AgradCdfLogNegBinomial_ffv_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_152> AgradCdfLogNegBinomial_ffv_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_153> AgradCdfLogNegBinomial_ffv_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_154> AgradCdfLogNegBinomial_ffv_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_155> AgradCdfLogNegBinomial_ffv_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_156> AgradCdfLogNegBinomial_ffv_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_157> AgradCdfLogNegBinomial_ffv_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_158> AgradCdfLogNegBinomial_ffv_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_159> AgradCdfLogNegBinomial_ffv_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_160> AgradCdfLogNegBinomial_ffv_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_161> AgradCdfLogNegBinomial_ffv_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_162> AgradCdfLogNegBinomial_ffv_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_163> AgradCdfLogNegBinomial_ffv_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_164> AgradCdfLogNegBinomial_ffv_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_165> AgradCdfLogNegBinomial_ffv_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_166> AgradCdfLogNegBinomial_ffv_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_167> AgradCdfLogNegBinomial_ffv_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_168> AgradCdfLogNegBinomial_ffv_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_169> AgradCdfLogNegBinomial_ffv_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_170> AgradCdfLogNegBinomial_ffv_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_171> AgradCdfLogNegBinomial_ffv_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_172> AgradCdfLogNegBinomial_ffv_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_173> AgradCdfLogNegBinomial_ffv_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_174> AgradCdfLogNegBinomial_ffv_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_175> AgradCdfLogNegBinomial_ffv_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_176> AgradCdfLogNegBinomial_ffv_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_177> AgradCdfLogNegBinomial_ffv_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_178> AgradCdfLogNegBinomial_ffv_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_179> AgradCdfLogNegBinomial_ffv_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_180> AgradCdfLogNegBinomial_ffv_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_181> AgradCdfLogNegBinomial_ffv_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_182> AgradCdfLogNegBinomial_ffv_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_183> AgradCdfLogNegBinomial_ffv_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_184> AgradCdfLogNegBinomial_ffv_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_185> AgradCdfLogNegBinomial_ffv_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_186> AgradCdfLogNegBinomial_ffv_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_187> AgradCdfLogNegBinomial_ffv_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_188> AgradCdfLogNegBinomial_ffv_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_189> AgradCdfLogNegBinomial_ffv_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_190> AgradCdfLogNegBinomial_ffv_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffv_191> AgradCdfLogNegBinomial_ffv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffv_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffv_191);

