#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_100> AgradCdfLogNegBinomial_ffd_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_101> AgradCdfLogNegBinomial_ffd_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_102> AgradCdfLogNegBinomial_ffd_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_103> AgradCdfLogNegBinomial_ffd_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_104> AgradCdfLogNegBinomial_ffd_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_105> AgradCdfLogNegBinomial_ffd_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_106> AgradCdfLogNegBinomial_ffd_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_107> AgradCdfLogNegBinomial_ffd_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_108> AgradCdfLogNegBinomial_ffd_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_109> AgradCdfLogNegBinomial_ffd_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_110> AgradCdfLogNegBinomial_ffd_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_111> AgradCdfLogNegBinomial_ffd_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_112> AgradCdfLogNegBinomial_ffd_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_113> AgradCdfLogNegBinomial_ffd_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_114> AgradCdfLogNegBinomial_ffd_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_115> AgradCdfLogNegBinomial_ffd_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_116> AgradCdfLogNegBinomial_ffd_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_117> AgradCdfLogNegBinomial_ffd_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_118> AgradCdfLogNegBinomial_ffd_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_119> AgradCdfLogNegBinomial_ffd_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_120> AgradCdfLogNegBinomial_ffd_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_121> AgradCdfLogNegBinomial_ffd_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_122> AgradCdfLogNegBinomial_ffd_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_123> AgradCdfLogNegBinomial_ffd_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_124> AgradCdfLogNegBinomial_ffd_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_125> AgradCdfLogNegBinomial_ffd_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_126> AgradCdfLogNegBinomial_ffd_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_127> AgradCdfLogNegBinomial_ffd_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_128> AgradCdfLogNegBinomial_ffd_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_129> AgradCdfLogNegBinomial_ffd_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_130> AgradCdfLogNegBinomial_ffd_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_131> AgradCdfLogNegBinomial_ffd_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_132> AgradCdfLogNegBinomial_ffd_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_133> AgradCdfLogNegBinomial_ffd_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_134> AgradCdfLogNegBinomial_ffd_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_135> AgradCdfLogNegBinomial_ffd_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_136> AgradCdfLogNegBinomial_ffd_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_137> AgradCdfLogNegBinomial_ffd_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_138> AgradCdfLogNegBinomial_ffd_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_139> AgradCdfLogNegBinomial_ffd_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_140> AgradCdfLogNegBinomial_ffd_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_141> AgradCdfLogNegBinomial_ffd_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_142> AgradCdfLogNegBinomial_ffd_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_143> AgradCdfLogNegBinomial_ffd_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_144> AgradCdfLogNegBinomial_ffd_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_145> AgradCdfLogNegBinomial_ffd_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_146> AgradCdfLogNegBinomial_ffd_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_147> AgradCdfLogNegBinomial_ffd_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_148> AgradCdfLogNegBinomial_ffd_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_149> AgradCdfLogNegBinomial_ffd_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_150> AgradCdfLogNegBinomial_ffd_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_151> AgradCdfLogNegBinomial_ffd_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_152> AgradCdfLogNegBinomial_ffd_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_153> AgradCdfLogNegBinomial_ffd_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_154> AgradCdfLogNegBinomial_ffd_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_155> AgradCdfLogNegBinomial_ffd_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_156> AgradCdfLogNegBinomial_ffd_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_157> AgradCdfLogNegBinomial_ffd_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_158> AgradCdfLogNegBinomial_ffd_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_159> AgradCdfLogNegBinomial_ffd_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_160> AgradCdfLogNegBinomial_ffd_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_161> AgradCdfLogNegBinomial_ffd_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_162> AgradCdfLogNegBinomial_ffd_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_163> AgradCdfLogNegBinomial_ffd_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_164> AgradCdfLogNegBinomial_ffd_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_165> AgradCdfLogNegBinomial_ffd_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_166> AgradCdfLogNegBinomial_ffd_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_167> AgradCdfLogNegBinomial_ffd_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_168> AgradCdfLogNegBinomial_ffd_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_169> AgradCdfLogNegBinomial_ffd_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_170> AgradCdfLogNegBinomial_ffd_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_171> AgradCdfLogNegBinomial_ffd_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_172> AgradCdfLogNegBinomial_ffd_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_173> AgradCdfLogNegBinomial_ffd_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_174> AgradCdfLogNegBinomial_ffd_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_175> AgradCdfLogNegBinomial_ffd_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_176> AgradCdfLogNegBinomial_ffd_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_177> AgradCdfLogNegBinomial_ffd_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_178> AgradCdfLogNegBinomial_ffd_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_179> AgradCdfLogNegBinomial_ffd_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_180> AgradCdfLogNegBinomial_ffd_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_181> AgradCdfLogNegBinomial_ffd_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_182> AgradCdfLogNegBinomial_ffd_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_183> AgradCdfLogNegBinomial_ffd_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_184> AgradCdfLogNegBinomial_ffd_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_185> AgradCdfLogNegBinomial_ffd_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_186> AgradCdfLogNegBinomial_ffd_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_187> AgradCdfLogNegBinomial_ffd_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_188> AgradCdfLogNegBinomial_ffd_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_189> AgradCdfLogNegBinomial_ffd_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_190> AgradCdfLogNegBinomial_ffd_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_ffd_191> AgradCdfLogNegBinomial_ffd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_ffd_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_ffd_191);

