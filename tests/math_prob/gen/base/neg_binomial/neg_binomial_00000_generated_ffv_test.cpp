#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_test.hpp>

typedef boost::mpl::vector<int, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<int, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<int, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<int, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<int, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<int, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<int, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<int, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<int, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<int>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<int>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;

typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_0> AgradDistributionsNegBinomial_ffv_0;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_1> AgradDistributionsNegBinomial_ffv_1;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_2> AgradDistributionsNegBinomial_ffv_2;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_3> AgradDistributionsNegBinomial_ffv_3;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_4> AgradDistributionsNegBinomial_ffv_4;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_5> AgradDistributionsNegBinomial_ffv_5;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_6> AgradDistributionsNegBinomial_ffv_6;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_7> AgradDistributionsNegBinomial_ffv_7;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_8> AgradDistributionsNegBinomial_ffv_8;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_9> AgradDistributionsNegBinomial_ffv_9;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_10> AgradDistributionsNegBinomial_ffv_10;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_11> AgradDistributionsNegBinomial_ffv_11;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_12> AgradDistributionsNegBinomial_ffv_12;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_13> AgradDistributionsNegBinomial_ffv_13;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_14> AgradDistributionsNegBinomial_ffv_14;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_15> AgradDistributionsNegBinomial_ffv_15;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_16> AgradDistributionsNegBinomial_ffv_16;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_17> AgradDistributionsNegBinomial_ffv_17;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_18> AgradDistributionsNegBinomial_ffv_18;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_19> AgradDistributionsNegBinomial_ffv_19;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_20> AgradDistributionsNegBinomial_ffv_20;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_21> AgradDistributionsNegBinomial_ffv_21;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_22> AgradDistributionsNegBinomial_ffv_22;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_23> AgradDistributionsNegBinomial_ffv_23;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_24> AgradDistributionsNegBinomial_ffv_24;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_25> AgradDistributionsNegBinomial_ffv_25;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_26> AgradDistributionsNegBinomial_ffv_26;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_27> AgradDistributionsNegBinomial_ffv_27;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_28> AgradDistributionsNegBinomial_ffv_28;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_29> AgradDistributionsNegBinomial_ffv_29;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_30> AgradDistributionsNegBinomial_ffv_30;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_31> AgradDistributionsNegBinomial_ffv_31;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_32> AgradDistributionsNegBinomial_ffv_32;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_33> AgradDistributionsNegBinomial_ffv_33;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_34> AgradDistributionsNegBinomial_ffv_34;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_35> AgradDistributionsNegBinomial_ffv_35;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_36> AgradDistributionsNegBinomial_ffv_36;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_37> AgradDistributionsNegBinomial_ffv_37;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_38> AgradDistributionsNegBinomial_ffv_38;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_39> AgradDistributionsNegBinomial_ffv_39;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_40> AgradDistributionsNegBinomial_ffv_40;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_41> AgradDistributionsNegBinomial_ffv_41;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_42> AgradDistributionsNegBinomial_ffv_42;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_43> AgradDistributionsNegBinomial_ffv_43;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_44> AgradDistributionsNegBinomial_ffv_44;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_45> AgradDistributionsNegBinomial_ffv_45;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_46> AgradDistributionsNegBinomial_ffv_46;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_47> AgradDistributionsNegBinomial_ffv_47;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_48> AgradDistributionsNegBinomial_ffv_48;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_49> AgradDistributionsNegBinomial_ffv_49;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_50> AgradDistributionsNegBinomial_ffv_50;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_51> AgradDistributionsNegBinomial_ffv_51;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_52> AgradDistributionsNegBinomial_ffv_52;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_53> AgradDistributionsNegBinomial_ffv_53;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_54> AgradDistributionsNegBinomial_ffv_54;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_55> AgradDistributionsNegBinomial_ffv_55;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_56> AgradDistributionsNegBinomial_ffv_56;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_57> AgradDistributionsNegBinomial_ffv_57;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_58> AgradDistributionsNegBinomial_ffv_58;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_59> AgradDistributionsNegBinomial_ffv_59;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_60> AgradDistributionsNegBinomial_ffv_60;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_61> AgradDistributionsNegBinomial_ffv_61;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_62> AgradDistributionsNegBinomial_ffv_62;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_63> AgradDistributionsNegBinomial_ffv_63;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_64> AgradDistributionsNegBinomial_ffv_64;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_65> AgradDistributionsNegBinomial_ffv_65;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_66> AgradDistributionsNegBinomial_ffv_66;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_67> AgradDistributionsNegBinomial_ffv_67;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_68> AgradDistributionsNegBinomial_ffv_68;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_69> AgradDistributionsNegBinomial_ffv_69;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_70> AgradDistributionsNegBinomial_ffv_70;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_71> AgradDistributionsNegBinomial_ffv_71;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_72> AgradDistributionsNegBinomial_ffv_72;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_73> AgradDistributionsNegBinomial_ffv_73;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_74> AgradDistributionsNegBinomial_ffv_74;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_75> AgradDistributionsNegBinomial_ffv_75;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_76> AgradDistributionsNegBinomial_ffv_76;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_77> AgradDistributionsNegBinomial_ffv_77;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_78> AgradDistributionsNegBinomial_ffv_78;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_79> AgradDistributionsNegBinomial_ffv_79;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_80> AgradDistributionsNegBinomial_ffv_80;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_81> AgradDistributionsNegBinomial_ffv_81;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_82> AgradDistributionsNegBinomial_ffv_82;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_83> AgradDistributionsNegBinomial_ffv_83;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_84> AgradDistributionsNegBinomial_ffv_84;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_85> AgradDistributionsNegBinomial_ffv_85;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_86> AgradDistributionsNegBinomial_ffv_86;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_87> AgradDistributionsNegBinomial_ffv_87;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_88> AgradDistributionsNegBinomial_ffv_88;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_89> AgradDistributionsNegBinomial_ffv_89;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_90> AgradDistributionsNegBinomial_ffv_90;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_91> AgradDistributionsNegBinomial_ffv_91;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_92> AgradDistributionsNegBinomial_ffv_92;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_93> AgradDistributionsNegBinomial_ffv_93;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_94> AgradDistributionsNegBinomial_ffv_94;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_95> AgradDistributionsNegBinomial_ffv_95;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_96> AgradDistributionsNegBinomial_ffv_96;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_97> AgradDistributionsNegBinomial_ffv_97;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_98> AgradDistributionsNegBinomial_ffv_98;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_99> AgradDistributionsNegBinomial_ffv_99;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_100> AgradDistributionsNegBinomial_ffv_100;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_101> AgradDistributionsNegBinomial_ffv_101;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_102> AgradDistributionsNegBinomial_ffv_102;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_103> AgradDistributionsNegBinomial_ffv_103;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_104> AgradDistributionsNegBinomial_ffv_104;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_105> AgradDistributionsNegBinomial_ffv_105;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_106> AgradDistributionsNegBinomial_ffv_106;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_107> AgradDistributionsNegBinomial_ffv_107;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_108> AgradDistributionsNegBinomial_ffv_108;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_109> AgradDistributionsNegBinomial_ffv_109;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_110> AgradDistributionsNegBinomial_ffv_110;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_111> AgradDistributionsNegBinomial_ffv_111;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_112> AgradDistributionsNegBinomial_ffv_112;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_113> AgradDistributionsNegBinomial_ffv_113;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_114> AgradDistributionsNegBinomial_ffv_114;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_115> AgradDistributionsNegBinomial_ffv_115;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_116> AgradDistributionsNegBinomial_ffv_116;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_117> AgradDistributionsNegBinomial_ffv_117;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_118> AgradDistributionsNegBinomial_ffv_118;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_119> AgradDistributionsNegBinomial_ffv_119;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_120> AgradDistributionsNegBinomial_ffv_120;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_121> AgradDistributionsNegBinomial_ffv_121;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_122> AgradDistributionsNegBinomial_ffv_122;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_123> AgradDistributionsNegBinomial_ffv_123;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_124> AgradDistributionsNegBinomial_ffv_124;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_125> AgradDistributionsNegBinomial_ffv_125;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_126> AgradDistributionsNegBinomial_ffv_126;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_127> AgradDistributionsNegBinomial_ffv_127;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_128> AgradDistributionsNegBinomial_ffv_128;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_129> AgradDistributionsNegBinomial_ffv_129;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_130> AgradDistributionsNegBinomial_ffv_130;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_131> AgradDistributionsNegBinomial_ffv_131;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_132> AgradDistributionsNegBinomial_ffv_132;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_133> AgradDistributionsNegBinomial_ffv_133;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_134> AgradDistributionsNegBinomial_ffv_134;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_135> AgradDistributionsNegBinomial_ffv_135;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_136> AgradDistributionsNegBinomial_ffv_136;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_137> AgradDistributionsNegBinomial_ffv_137;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_138> AgradDistributionsNegBinomial_ffv_138;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_139> AgradDistributionsNegBinomial_ffv_139;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_140> AgradDistributionsNegBinomial_ffv_140;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_141> AgradDistributionsNegBinomial_ffv_141;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_142> AgradDistributionsNegBinomial_ffv_142;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_143> AgradDistributionsNegBinomial_ffv_143;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_144> AgradDistributionsNegBinomial_ffv_144;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_145> AgradDistributionsNegBinomial_ffv_145;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_146> AgradDistributionsNegBinomial_ffv_146;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_147> AgradDistributionsNegBinomial_ffv_147;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_148> AgradDistributionsNegBinomial_ffv_148;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_149> AgradDistributionsNegBinomial_ffv_149;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_150> AgradDistributionsNegBinomial_ffv_150;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_151> AgradDistributionsNegBinomial_ffv_151;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_152> AgradDistributionsNegBinomial_ffv_152;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_153> AgradDistributionsNegBinomial_ffv_153;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_154> AgradDistributionsNegBinomial_ffv_154;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_155> AgradDistributionsNegBinomial_ffv_155;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_156> AgradDistributionsNegBinomial_ffv_156;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_157> AgradDistributionsNegBinomial_ffv_157;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_158> AgradDistributionsNegBinomial_ffv_158;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_159> AgradDistributionsNegBinomial_ffv_159;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_160> AgradDistributionsNegBinomial_ffv_160;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_161> AgradDistributionsNegBinomial_ffv_161;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_162> AgradDistributionsNegBinomial_ffv_162;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_163> AgradDistributionsNegBinomial_ffv_163;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_164> AgradDistributionsNegBinomial_ffv_164;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_165> AgradDistributionsNegBinomial_ffv_165;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_166> AgradDistributionsNegBinomial_ffv_166;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_167> AgradDistributionsNegBinomial_ffv_167;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_168> AgradDistributionsNegBinomial_ffv_168;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_169> AgradDistributionsNegBinomial_ffv_169;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_170> AgradDistributionsNegBinomial_ffv_170;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_171> AgradDistributionsNegBinomial_ffv_171;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_172> AgradDistributionsNegBinomial_ffv_172;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_173> AgradDistributionsNegBinomial_ffv_173;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_174> AgradDistributionsNegBinomial_ffv_174;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_175> AgradDistributionsNegBinomial_ffv_175;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_176> AgradDistributionsNegBinomial_ffv_176;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_177> AgradDistributionsNegBinomial_ffv_177;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_178> AgradDistributionsNegBinomial_ffv_178;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_179> AgradDistributionsNegBinomial_ffv_179;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_180> AgradDistributionsNegBinomial_ffv_180;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_181> AgradDistributionsNegBinomial_ffv_181;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_182> AgradDistributionsNegBinomial_ffv_182;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_183> AgradDistributionsNegBinomial_ffv_183;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_184> AgradDistributionsNegBinomial_ffv_184;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_185> AgradDistributionsNegBinomial_ffv_185;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_186> AgradDistributionsNegBinomial_ffv_186;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_187> AgradDistributionsNegBinomial_ffv_187;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_188> AgradDistributionsNegBinomial_ffv_188;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_189> AgradDistributionsNegBinomial_ffv_189;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_190> AgradDistributionsNegBinomial_ffv_190;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffv_191> AgradDistributionsNegBinomial_ffv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_0, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_1, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_2, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_3, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_4, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_5, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_6, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_7, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_8, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_9, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_10, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_11, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_12, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_13, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_14, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_15, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_16, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_17, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_18, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_19, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_20, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_21, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_22, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_23, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_24, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_25, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_26, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_27, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_28, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_29, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_30, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_31, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_32, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_33, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_34, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_35, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_36, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_37, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_38, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_39, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_40, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_41, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_42, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_43, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_44, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_45, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_46, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_47, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_48, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_49, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_50, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_51, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_52, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_53, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_54, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_55, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_56, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_57, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_58, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_59, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_60, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_61, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_62, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_63, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_64, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_65, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_66, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_67, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_68, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_69, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_70, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_71, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_72, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_73, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_74, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_75, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_76, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_77, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_78, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_79, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_80, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_81, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_82, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_83, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_84, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_85, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_86, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_87, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_88, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_89, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_90, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_91, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_92, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_93, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_94, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_95, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_96, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_97, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_98, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_99, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_100, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_101, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_102, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_103, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_104, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_105, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_106, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_107, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_108, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_109, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_110, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_111, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_112, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_113, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_114, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_115, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_116, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_117, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_118, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_119, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_120, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_121, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_122, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_123, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_124, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_125, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_126, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_127, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_128, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_129, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_130, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_131, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_132, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_133, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_134, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_135, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_136, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_137, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_138, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_139, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_140, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_141, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_142, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_143, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_144, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_145, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_146, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_147, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_148, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_149, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_150, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_151, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_152, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_153, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_154, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_155, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_156, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_157, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_158, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_159, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_160, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_161, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_162, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_163, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_164, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_165, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_166, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_167, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_168, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_169, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_170, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_171, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_172, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_173, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_174, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_175, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_176, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_177, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_178, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_179, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_180, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_181, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_182, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_183, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_184, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_185, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_186, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_187, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_188, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_189, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_190, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffv_191, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffv_191);

