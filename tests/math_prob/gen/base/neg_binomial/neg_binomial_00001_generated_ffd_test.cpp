#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_191;

typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_100> AgradDistributionsNegBinomial_ffd_100;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_101> AgradDistributionsNegBinomial_ffd_101;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_102> AgradDistributionsNegBinomial_ffd_102;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_103> AgradDistributionsNegBinomial_ffd_103;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_104> AgradDistributionsNegBinomial_ffd_104;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_105> AgradDistributionsNegBinomial_ffd_105;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_106> AgradDistributionsNegBinomial_ffd_106;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_107> AgradDistributionsNegBinomial_ffd_107;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_108> AgradDistributionsNegBinomial_ffd_108;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_109> AgradDistributionsNegBinomial_ffd_109;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_110> AgradDistributionsNegBinomial_ffd_110;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_111> AgradDistributionsNegBinomial_ffd_111;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_112> AgradDistributionsNegBinomial_ffd_112;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_113> AgradDistributionsNegBinomial_ffd_113;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_114> AgradDistributionsNegBinomial_ffd_114;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_115> AgradDistributionsNegBinomial_ffd_115;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_116> AgradDistributionsNegBinomial_ffd_116;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_117> AgradDistributionsNegBinomial_ffd_117;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_118> AgradDistributionsNegBinomial_ffd_118;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_119> AgradDistributionsNegBinomial_ffd_119;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_120> AgradDistributionsNegBinomial_ffd_120;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_121> AgradDistributionsNegBinomial_ffd_121;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_122> AgradDistributionsNegBinomial_ffd_122;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_123> AgradDistributionsNegBinomial_ffd_123;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_124> AgradDistributionsNegBinomial_ffd_124;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_125> AgradDistributionsNegBinomial_ffd_125;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_126> AgradDistributionsNegBinomial_ffd_126;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_127> AgradDistributionsNegBinomial_ffd_127;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_128> AgradDistributionsNegBinomial_ffd_128;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_129> AgradDistributionsNegBinomial_ffd_129;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_130> AgradDistributionsNegBinomial_ffd_130;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_131> AgradDistributionsNegBinomial_ffd_131;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_132> AgradDistributionsNegBinomial_ffd_132;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_133> AgradDistributionsNegBinomial_ffd_133;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_134> AgradDistributionsNegBinomial_ffd_134;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_135> AgradDistributionsNegBinomial_ffd_135;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_136> AgradDistributionsNegBinomial_ffd_136;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_137> AgradDistributionsNegBinomial_ffd_137;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_138> AgradDistributionsNegBinomial_ffd_138;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_139> AgradDistributionsNegBinomial_ffd_139;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_140> AgradDistributionsNegBinomial_ffd_140;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_141> AgradDistributionsNegBinomial_ffd_141;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_142> AgradDistributionsNegBinomial_ffd_142;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_143> AgradDistributionsNegBinomial_ffd_143;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_144> AgradDistributionsNegBinomial_ffd_144;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_145> AgradDistributionsNegBinomial_ffd_145;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_146> AgradDistributionsNegBinomial_ffd_146;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_147> AgradDistributionsNegBinomial_ffd_147;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_148> AgradDistributionsNegBinomial_ffd_148;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_149> AgradDistributionsNegBinomial_ffd_149;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_150> AgradDistributionsNegBinomial_ffd_150;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_151> AgradDistributionsNegBinomial_ffd_151;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_152> AgradDistributionsNegBinomial_ffd_152;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_153> AgradDistributionsNegBinomial_ffd_153;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_154> AgradDistributionsNegBinomial_ffd_154;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_155> AgradDistributionsNegBinomial_ffd_155;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_156> AgradDistributionsNegBinomial_ffd_156;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_157> AgradDistributionsNegBinomial_ffd_157;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_158> AgradDistributionsNegBinomial_ffd_158;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_159> AgradDistributionsNegBinomial_ffd_159;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_160> AgradDistributionsNegBinomial_ffd_160;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_161> AgradDistributionsNegBinomial_ffd_161;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_162> AgradDistributionsNegBinomial_ffd_162;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_163> AgradDistributionsNegBinomial_ffd_163;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_164> AgradDistributionsNegBinomial_ffd_164;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_165> AgradDistributionsNegBinomial_ffd_165;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_166> AgradDistributionsNegBinomial_ffd_166;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_167> AgradDistributionsNegBinomial_ffd_167;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_168> AgradDistributionsNegBinomial_ffd_168;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_169> AgradDistributionsNegBinomial_ffd_169;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_170> AgradDistributionsNegBinomial_ffd_170;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_171> AgradDistributionsNegBinomial_ffd_171;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_172> AgradDistributionsNegBinomial_ffd_172;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_173> AgradDistributionsNegBinomial_ffd_173;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_174> AgradDistributionsNegBinomial_ffd_174;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_175> AgradDistributionsNegBinomial_ffd_175;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_176> AgradDistributionsNegBinomial_ffd_176;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_177> AgradDistributionsNegBinomial_ffd_177;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_178> AgradDistributionsNegBinomial_ffd_178;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_179> AgradDistributionsNegBinomial_ffd_179;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_180> AgradDistributionsNegBinomial_ffd_180;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_181> AgradDistributionsNegBinomial_ffd_181;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_182> AgradDistributionsNegBinomial_ffd_182;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_183> AgradDistributionsNegBinomial_ffd_183;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_184> AgradDistributionsNegBinomial_ffd_184;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_185> AgradDistributionsNegBinomial_ffd_185;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_186> AgradDistributionsNegBinomial_ffd_186;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_187> AgradDistributionsNegBinomial_ffd_187;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_188> AgradDistributionsNegBinomial_ffd_188;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_189> AgradDistributionsNegBinomial_ffd_189;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_190> AgradDistributionsNegBinomial_ffd_190;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_ffd_191> AgradDistributionsNegBinomial_ffd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_100, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_101, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_102, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_103, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_104, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_105, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_106, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_107, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_108, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_109, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_110, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_111, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_112, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_113, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_114, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_115, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_116, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_117, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_118, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_119, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_120, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_121, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_122, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_123, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_124, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_125, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_126, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_127, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_128, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_129, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_130, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_131, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_132, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_133, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_134, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_135, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_136, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_137, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_138, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_139, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_140, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_141, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_142, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_143, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_144, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_145, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_146, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_147, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_148, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_149, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_150, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_151, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_152, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_153, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_154, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_155, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_156, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_157, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_158, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_159, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_160, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_161, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_162, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_163, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_164, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_165, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_166, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_167, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_168, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_169, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_170, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_171, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_172, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_173, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_174, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_175, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_176, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_177, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_178, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_179, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_180, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_181, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_182, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_183, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_184, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_185, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_186, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_187, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_188, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_189, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_190, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_ffd_191, AgradDistributionTestFixture, AgradDistributionsNegBinomial_ffd_191);

