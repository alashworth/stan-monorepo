#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_ccdf_log_test.hpp>

typedef boost::mpl::vector<int, double, double, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<int, double, std::vector<double>, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<int, double, var, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<int, double, std::vector<var>, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<int, std::vector<double>, double, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<int, std::vector<double>, var, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<int, var, double, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<int, var, std::vector<double>, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<int, var, var, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<int, var, std::vector<var>, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<int, std::vector<var>, double, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<int, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<int, std::vector<var>, var, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<int, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_63;
typedef boost::mpl::vector<std::vector<int>, double, double, empty, empty, empty> type_v_64;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<double>, empty, empty, empty> type_v_65;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_66;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_67;
typedef boost::mpl::vector<std::vector<int>, double, var, empty, empty, empty> type_v_68;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<var>, empty, empty, empty> type_v_69;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_70;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, double, empty, empty, empty> type_v_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, var, empty, empty, empty> type_v_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_95;
typedef boost::mpl::vector<std::vector<int>, var, double, empty, empty, empty> type_v_96;
typedef boost::mpl::vector<std::vector<int>, var, std::vector<double>, empty, empty, empty> type_v_97;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_98;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_99;
typedef boost::mpl::vector<std::vector<int>, var, var, empty, empty, empty> type_v_100;
typedef boost::mpl::vector<std::vector<int>, var, std::vector<var>, empty, empty, empty> type_v_101;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_102;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_103;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, double, empty, empty, empty> type_v_104;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_105;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_106;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_107;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, var, empty, empty, empty> type_v_108;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_109;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_110;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_111;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_112;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_113;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_114;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_115;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_116;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_117;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_118;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_119;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_120;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_121;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_122;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_123;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_124;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_125;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_126;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_v_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_v_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty, empty> type_v_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty, empty> type_v_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_v_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty, empty> type_v_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_143;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_144;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_145;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_146;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_147;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_148;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_149;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_150;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_151;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_152;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_153;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_154;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_155;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_156;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_157;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_158;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_159;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty, empty> type_v_160;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty, empty> type_v_161;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_162;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_163;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty, empty> type_v_164;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty, empty> type_v_165;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_166;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_167;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty, empty> type_v_168;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_169;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_170;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_171;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty, empty> type_v_172;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_173;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_174;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_175;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_176;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_177;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_178;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_179;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_180;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_181;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_182;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_183;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_184;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_185;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_186;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_187;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_188;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_189;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_190;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_191;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_v_192;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_v_193;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_194;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_195;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty, empty> type_v_196;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty, empty> type_v_197;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_198;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_199;

typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_0> AgradCcdfLogNegBinomial_v_0;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_1> AgradCcdfLogNegBinomial_v_1;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_2> AgradCcdfLogNegBinomial_v_2;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_3> AgradCcdfLogNegBinomial_v_3;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_4> AgradCcdfLogNegBinomial_v_4;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_5> AgradCcdfLogNegBinomial_v_5;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_6> AgradCcdfLogNegBinomial_v_6;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_7> AgradCcdfLogNegBinomial_v_7;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_8> AgradCcdfLogNegBinomial_v_8;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_9> AgradCcdfLogNegBinomial_v_9;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_10> AgradCcdfLogNegBinomial_v_10;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_11> AgradCcdfLogNegBinomial_v_11;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_12> AgradCcdfLogNegBinomial_v_12;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_13> AgradCcdfLogNegBinomial_v_13;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_14> AgradCcdfLogNegBinomial_v_14;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_15> AgradCcdfLogNegBinomial_v_15;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_16> AgradCcdfLogNegBinomial_v_16;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_17> AgradCcdfLogNegBinomial_v_17;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_18> AgradCcdfLogNegBinomial_v_18;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_19> AgradCcdfLogNegBinomial_v_19;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_20> AgradCcdfLogNegBinomial_v_20;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_21> AgradCcdfLogNegBinomial_v_21;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_22> AgradCcdfLogNegBinomial_v_22;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_23> AgradCcdfLogNegBinomial_v_23;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_24> AgradCcdfLogNegBinomial_v_24;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_25> AgradCcdfLogNegBinomial_v_25;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_26> AgradCcdfLogNegBinomial_v_26;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_27> AgradCcdfLogNegBinomial_v_27;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_28> AgradCcdfLogNegBinomial_v_28;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_29> AgradCcdfLogNegBinomial_v_29;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_30> AgradCcdfLogNegBinomial_v_30;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_31> AgradCcdfLogNegBinomial_v_31;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_32> AgradCcdfLogNegBinomial_v_32;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_33> AgradCcdfLogNegBinomial_v_33;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_34> AgradCcdfLogNegBinomial_v_34;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_35> AgradCcdfLogNegBinomial_v_35;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_36> AgradCcdfLogNegBinomial_v_36;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_37> AgradCcdfLogNegBinomial_v_37;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_38> AgradCcdfLogNegBinomial_v_38;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_39> AgradCcdfLogNegBinomial_v_39;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_40> AgradCcdfLogNegBinomial_v_40;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_41> AgradCcdfLogNegBinomial_v_41;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_42> AgradCcdfLogNegBinomial_v_42;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_43> AgradCcdfLogNegBinomial_v_43;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_44> AgradCcdfLogNegBinomial_v_44;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_45> AgradCcdfLogNegBinomial_v_45;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_46> AgradCcdfLogNegBinomial_v_46;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_47> AgradCcdfLogNegBinomial_v_47;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_48> AgradCcdfLogNegBinomial_v_48;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_49> AgradCcdfLogNegBinomial_v_49;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_50> AgradCcdfLogNegBinomial_v_50;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_51> AgradCcdfLogNegBinomial_v_51;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_52> AgradCcdfLogNegBinomial_v_52;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_53> AgradCcdfLogNegBinomial_v_53;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_54> AgradCcdfLogNegBinomial_v_54;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_55> AgradCcdfLogNegBinomial_v_55;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_56> AgradCcdfLogNegBinomial_v_56;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_57> AgradCcdfLogNegBinomial_v_57;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_58> AgradCcdfLogNegBinomial_v_58;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_59> AgradCcdfLogNegBinomial_v_59;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_60> AgradCcdfLogNegBinomial_v_60;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_61> AgradCcdfLogNegBinomial_v_61;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_62> AgradCcdfLogNegBinomial_v_62;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_63> AgradCcdfLogNegBinomial_v_63;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_64> AgradCcdfLogNegBinomial_v_64;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_65> AgradCcdfLogNegBinomial_v_65;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_66> AgradCcdfLogNegBinomial_v_66;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_67> AgradCcdfLogNegBinomial_v_67;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_68> AgradCcdfLogNegBinomial_v_68;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_69> AgradCcdfLogNegBinomial_v_69;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_70> AgradCcdfLogNegBinomial_v_70;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_71> AgradCcdfLogNegBinomial_v_71;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_72> AgradCcdfLogNegBinomial_v_72;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_73> AgradCcdfLogNegBinomial_v_73;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_74> AgradCcdfLogNegBinomial_v_74;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_75> AgradCcdfLogNegBinomial_v_75;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_76> AgradCcdfLogNegBinomial_v_76;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_77> AgradCcdfLogNegBinomial_v_77;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_78> AgradCcdfLogNegBinomial_v_78;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_79> AgradCcdfLogNegBinomial_v_79;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_80> AgradCcdfLogNegBinomial_v_80;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_81> AgradCcdfLogNegBinomial_v_81;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_82> AgradCcdfLogNegBinomial_v_82;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_83> AgradCcdfLogNegBinomial_v_83;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_84> AgradCcdfLogNegBinomial_v_84;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_85> AgradCcdfLogNegBinomial_v_85;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_86> AgradCcdfLogNegBinomial_v_86;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_87> AgradCcdfLogNegBinomial_v_87;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_88> AgradCcdfLogNegBinomial_v_88;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_89> AgradCcdfLogNegBinomial_v_89;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_90> AgradCcdfLogNegBinomial_v_90;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_91> AgradCcdfLogNegBinomial_v_91;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_92> AgradCcdfLogNegBinomial_v_92;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_93> AgradCcdfLogNegBinomial_v_93;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_94> AgradCcdfLogNegBinomial_v_94;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_95> AgradCcdfLogNegBinomial_v_95;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_96> AgradCcdfLogNegBinomial_v_96;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_97> AgradCcdfLogNegBinomial_v_97;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_98> AgradCcdfLogNegBinomial_v_98;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_99> AgradCcdfLogNegBinomial_v_99;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_100> AgradCcdfLogNegBinomial_v_100;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_101> AgradCcdfLogNegBinomial_v_101;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_102> AgradCcdfLogNegBinomial_v_102;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_103> AgradCcdfLogNegBinomial_v_103;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_104> AgradCcdfLogNegBinomial_v_104;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_105> AgradCcdfLogNegBinomial_v_105;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_106> AgradCcdfLogNegBinomial_v_106;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_107> AgradCcdfLogNegBinomial_v_107;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_108> AgradCcdfLogNegBinomial_v_108;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_109> AgradCcdfLogNegBinomial_v_109;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_110> AgradCcdfLogNegBinomial_v_110;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_111> AgradCcdfLogNegBinomial_v_111;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_112> AgradCcdfLogNegBinomial_v_112;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_113> AgradCcdfLogNegBinomial_v_113;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_114> AgradCcdfLogNegBinomial_v_114;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_115> AgradCcdfLogNegBinomial_v_115;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_116> AgradCcdfLogNegBinomial_v_116;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_117> AgradCcdfLogNegBinomial_v_117;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_118> AgradCcdfLogNegBinomial_v_118;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_119> AgradCcdfLogNegBinomial_v_119;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_120> AgradCcdfLogNegBinomial_v_120;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_121> AgradCcdfLogNegBinomial_v_121;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_122> AgradCcdfLogNegBinomial_v_122;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_123> AgradCcdfLogNegBinomial_v_123;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_124> AgradCcdfLogNegBinomial_v_124;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_125> AgradCcdfLogNegBinomial_v_125;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_126> AgradCcdfLogNegBinomial_v_126;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_127> AgradCcdfLogNegBinomial_v_127;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_128> AgradCcdfLogNegBinomial_v_128;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_129> AgradCcdfLogNegBinomial_v_129;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_130> AgradCcdfLogNegBinomial_v_130;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_131> AgradCcdfLogNegBinomial_v_131;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_132> AgradCcdfLogNegBinomial_v_132;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_133> AgradCcdfLogNegBinomial_v_133;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_134> AgradCcdfLogNegBinomial_v_134;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_135> AgradCcdfLogNegBinomial_v_135;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_136> AgradCcdfLogNegBinomial_v_136;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_137> AgradCcdfLogNegBinomial_v_137;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_138> AgradCcdfLogNegBinomial_v_138;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_139> AgradCcdfLogNegBinomial_v_139;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_140> AgradCcdfLogNegBinomial_v_140;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_141> AgradCcdfLogNegBinomial_v_141;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_142> AgradCcdfLogNegBinomial_v_142;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_143> AgradCcdfLogNegBinomial_v_143;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_144> AgradCcdfLogNegBinomial_v_144;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_145> AgradCcdfLogNegBinomial_v_145;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_146> AgradCcdfLogNegBinomial_v_146;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_147> AgradCcdfLogNegBinomial_v_147;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_148> AgradCcdfLogNegBinomial_v_148;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_149> AgradCcdfLogNegBinomial_v_149;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_150> AgradCcdfLogNegBinomial_v_150;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_151> AgradCcdfLogNegBinomial_v_151;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_152> AgradCcdfLogNegBinomial_v_152;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_153> AgradCcdfLogNegBinomial_v_153;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_154> AgradCcdfLogNegBinomial_v_154;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_155> AgradCcdfLogNegBinomial_v_155;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_156> AgradCcdfLogNegBinomial_v_156;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_157> AgradCcdfLogNegBinomial_v_157;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_158> AgradCcdfLogNegBinomial_v_158;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_159> AgradCcdfLogNegBinomial_v_159;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_160> AgradCcdfLogNegBinomial_v_160;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_161> AgradCcdfLogNegBinomial_v_161;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_162> AgradCcdfLogNegBinomial_v_162;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_163> AgradCcdfLogNegBinomial_v_163;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_164> AgradCcdfLogNegBinomial_v_164;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_165> AgradCcdfLogNegBinomial_v_165;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_166> AgradCcdfLogNegBinomial_v_166;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_167> AgradCcdfLogNegBinomial_v_167;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_168> AgradCcdfLogNegBinomial_v_168;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_169> AgradCcdfLogNegBinomial_v_169;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_170> AgradCcdfLogNegBinomial_v_170;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_171> AgradCcdfLogNegBinomial_v_171;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_172> AgradCcdfLogNegBinomial_v_172;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_173> AgradCcdfLogNegBinomial_v_173;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_174> AgradCcdfLogNegBinomial_v_174;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_175> AgradCcdfLogNegBinomial_v_175;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_176> AgradCcdfLogNegBinomial_v_176;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_177> AgradCcdfLogNegBinomial_v_177;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_178> AgradCcdfLogNegBinomial_v_178;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_179> AgradCcdfLogNegBinomial_v_179;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_180> AgradCcdfLogNegBinomial_v_180;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_181> AgradCcdfLogNegBinomial_v_181;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_182> AgradCcdfLogNegBinomial_v_182;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_183> AgradCcdfLogNegBinomial_v_183;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_184> AgradCcdfLogNegBinomial_v_184;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_185> AgradCcdfLogNegBinomial_v_185;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_186> AgradCcdfLogNegBinomial_v_186;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_187> AgradCcdfLogNegBinomial_v_187;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_188> AgradCcdfLogNegBinomial_v_188;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_189> AgradCcdfLogNegBinomial_v_189;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_190> AgradCcdfLogNegBinomial_v_190;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_191> AgradCcdfLogNegBinomial_v_191;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_192> AgradCcdfLogNegBinomial_v_192;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_193> AgradCcdfLogNegBinomial_v_193;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_194> AgradCcdfLogNegBinomial_v_194;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_195> AgradCcdfLogNegBinomial_v_195;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_196> AgradCcdfLogNegBinomial_v_196;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_197> AgradCcdfLogNegBinomial_v_197;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_198> AgradCcdfLogNegBinomial_v_198;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_v_199> AgradCcdfLogNegBinomial_v_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_0, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_1, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_2, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_3, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_4, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_5, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_6, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_7, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_8, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_9, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_10, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_11, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_12, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_13, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_14, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_15, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_16, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_17, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_18, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_19, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_20, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_21, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_22, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_23, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_24, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_25, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_26, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_27, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_28, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_29, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_30, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_31, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_32, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_33, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_34, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_35, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_36, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_37, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_38, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_39, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_40, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_41, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_42, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_43, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_44, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_45, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_46, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_47, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_48, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_49, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_50, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_51, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_52, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_53, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_54, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_55, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_56, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_57, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_58, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_59, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_60, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_61, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_62, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_63, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_64, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_65, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_66, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_67, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_68, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_69, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_70, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_71, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_72, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_73, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_74, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_75, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_76, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_77, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_78, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_79, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_80, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_81, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_82, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_83, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_84, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_85, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_86, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_87, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_88, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_89, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_90, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_91, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_92, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_93, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_94, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_95, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_96, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_97, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_98, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_99, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_100, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_101, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_102, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_103, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_104, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_105, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_106, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_107, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_108, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_109, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_110, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_111, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_112, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_113, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_114, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_115, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_116, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_117, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_118, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_119, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_120, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_121, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_122, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_123, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_124, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_125, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_126, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_127, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_128, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_129, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_130, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_131, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_132, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_133, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_134, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_135, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_136, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_137, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_138, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_139, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_140, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_141, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_142, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_143, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_144, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_145, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_146, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_147, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_148, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_149, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_150, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_151, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_152, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_153, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_154, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_155, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_156, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_157, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_158, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_159, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_160, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_161, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_162, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_163, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_164, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_165, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_166, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_167, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_168, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_169, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_170, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_171, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_172, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_173, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_174, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_175, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_176, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_177, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_178, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_179, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_180, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_181, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_182, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_183, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_184, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_185, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_186, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_187, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_188, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_189, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_190, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_191, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_192, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_193, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_194, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_195, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_196, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_197, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_198, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_v_199, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_v_199);

