#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_test.hpp>

typedef boost::mpl::vector<int, double, fvar<double>, empty, empty, empty> type_fd_0;
typedef boost::mpl::vector<int, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_3;
typedef boost::mpl::vector<int, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_4;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_5;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_6;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_7;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_8;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_9;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_10;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_11;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_12;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_13;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_14;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_15;
typedef boost::mpl::vector<int, fvar<double>, double, empty, empty, empty> type_fd_16;
typedef boost::mpl::vector<int, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_17;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_18;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_19;
typedef boost::mpl::vector<int, fvar<double>, fvar<double>, empty, empty, empty> type_fd_20;
typedef boost::mpl::vector<int, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_21;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_22;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_23;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_24;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_25;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_26;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_27;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_28;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_29;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_30;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_31;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_32;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_33;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_34;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_35;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_36;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_37;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_38;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_39;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_40;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_41;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_42;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_43;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_44;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_45;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_46;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_47;
typedef boost::mpl::vector<std::vector<int>, double, fvar<double>, empty, empty, empty> type_fd_48;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_49;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_50;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_51;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_52;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_53;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_54;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_63;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, double, empty, empty, empty> type_fd_64;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_65;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_66;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_67;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_68;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_69;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_70;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_95;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty, empty> type_fd_96;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_97;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_98;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_99;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty, empty> type_fd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty, empty> type_fd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty, empty> type_fd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_191;

typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_0> AgradDistributionsNegBinomial_fd_0;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_1> AgradDistributionsNegBinomial_fd_1;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_2> AgradDistributionsNegBinomial_fd_2;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_3> AgradDistributionsNegBinomial_fd_3;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_4> AgradDistributionsNegBinomial_fd_4;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_5> AgradDistributionsNegBinomial_fd_5;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_6> AgradDistributionsNegBinomial_fd_6;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_7> AgradDistributionsNegBinomial_fd_7;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_8> AgradDistributionsNegBinomial_fd_8;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_9> AgradDistributionsNegBinomial_fd_9;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_10> AgradDistributionsNegBinomial_fd_10;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_11> AgradDistributionsNegBinomial_fd_11;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_12> AgradDistributionsNegBinomial_fd_12;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_13> AgradDistributionsNegBinomial_fd_13;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_14> AgradDistributionsNegBinomial_fd_14;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_15> AgradDistributionsNegBinomial_fd_15;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_16> AgradDistributionsNegBinomial_fd_16;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_17> AgradDistributionsNegBinomial_fd_17;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_18> AgradDistributionsNegBinomial_fd_18;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_19> AgradDistributionsNegBinomial_fd_19;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_20> AgradDistributionsNegBinomial_fd_20;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_21> AgradDistributionsNegBinomial_fd_21;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_22> AgradDistributionsNegBinomial_fd_22;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_23> AgradDistributionsNegBinomial_fd_23;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_24> AgradDistributionsNegBinomial_fd_24;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_25> AgradDistributionsNegBinomial_fd_25;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_26> AgradDistributionsNegBinomial_fd_26;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_27> AgradDistributionsNegBinomial_fd_27;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_28> AgradDistributionsNegBinomial_fd_28;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_29> AgradDistributionsNegBinomial_fd_29;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_30> AgradDistributionsNegBinomial_fd_30;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_31> AgradDistributionsNegBinomial_fd_31;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_32> AgradDistributionsNegBinomial_fd_32;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_33> AgradDistributionsNegBinomial_fd_33;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_34> AgradDistributionsNegBinomial_fd_34;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_35> AgradDistributionsNegBinomial_fd_35;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_36> AgradDistributionsNegBinomial_fd_36;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_37> AgradDistributionsNegBinomial_fd_37;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_38> AgradDistributionsNegBinomial_fd_38;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_39> AgradDistributionsNegBinomial_fd_39;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_40> AgradDistributionsNegBinomial_fd_40;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_41> AgradDistributionsNegBinomial_fd_41;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_42> AgradDistributionsNegBinomial_fd_42;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_43> AgradDistributionsNegBinomial_fd_43;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_44> AgradDistributionsNegBinomial_fd_44;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_45> AgradDistributionsNegBinomial_fd_45;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_46> AgradDistributionsNegBinomial_fd_46;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_47> AgradDistributionsNegBinomial_fd_47;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_48> AgradDistributionsNegBinomial_fd_48;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_49> AgradDistributionsNegBinomial_fd_49;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_50> AgradDistributionsNegBinomial_fd_50;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_51> AgradDistributionsNegBinomial_fd_51;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_52> AgradDistributionsNegBinomial_fd_52;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_53> AgradDistributionsNegBinomial_fd_53;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_54> AgradDistributionsNegBinomial_fd_54;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_55> AgradDistributionsNegBinomial_fd_55;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_56> AgradDistributionsNegBinomial_fd_56;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_57> AgradDistributionsNegBinomial_fd_57;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_58> AgradDistributionsNegBinomial_fd_58;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_59> AgradDistributionsNegBinomial_fd_59;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_60> AgradDistributionsNegBinomial_fd_60;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_61> AgradDistributionsNegBinomial_fd_61;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_62> AgradDistributionsNegBinomial_fd_62;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_63> AgradDistributionsNegBinomial_fd_63;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_64> AgradDistributionsNegBinomial_fd_64;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_65> AgradDistributionsNegBinomial_fd_65;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_66> AgradDistributionsNegBinomial_fd_66;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_67> AgradDistributionsNegBinomial_fd_67;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_68> AgradDistributionsNegBinomial_fd_68;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_69> AgradDistributionsNegBinomial_fd_69;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_70> AgradDistributionsNegBinomial_fd_70;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_71> AgradDistributionsNegBinomial_fd_71;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_72> AgradDistributionsNegBinomial_fd_72;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_73> AgradDistributionsNegBinomial_fd_73;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_74> AgradDistributionsNegBinomial_fd_74;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_75> AgradDistributionsNegBinomial_fd_75;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_76> AgradDistributionsNegBinomial_fd_76;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_77> AgradDistributionsNegBinomial_fd_77;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_78> AgradDistributionsNegBinomial_fd_78;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_79> AgradDistributionsNegBinomial_fd_79;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_80> AgradDistributionsNegBinomial_fd_80;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_81> AgradDistributionsNegBinomial_fd_81;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_82> AgradDistributionsNegBinomial_fd_82;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_83> AgradDistributionsNegBinomial_fd_83;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_84> AgradDistributionsNegBinomial_fd_84;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_85> AgradDistributionsNegBinomial_fd_85;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_86> AgradDistributionsNegBinomial_fd_86;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_87> AgradDistributionsNegBinomial_fd_87;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_88> AgradDistributionsNegBinomial_fd_88;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_89> AgradDistributionsNegBinomial_fd_89;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_90> AgradDistributionsNegBinomial_fd_90;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_91> AgradDistributionsNegBinomial_fd_91;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_92> AgradDistributionsNegBinomial_fd_92;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_93> AgradDistributionsNegBinomial_fd_93;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_94> AgradDistributionsNegBinomial_fd_94;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_95> AgradDistributionsNegBinomial_fd_95;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_96> AgradDistributionsNegBinomial_fd_96;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_97> AgradDistributionsNegBinomial_fd_97;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_98> AgradDistributionsNegBinomial_fd_98;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_99> AgradDistributionsNegBinomial_fd_99;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_100> AgradDistributionsNegBinomial_fd_100;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_101> AgradDistributionsNegBinomial_fd_101;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_102> AgradDistributionsNegBinomial_fd_102;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_103> AgradDistributionsNegBinomial_fd_103;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_104> AgradDistributionsNegBinomial_fd_104;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_105> AgradDistributionsNegBinomial_fd_105;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_106> AgradDistributionsNegBinomial_fd_106;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_107> AgradDistributionsNegBinomial_fd_107;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_108> AgradDistributionsNegBinomial_fd_108;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_109> AgradDistributionsNegBinomial_fd_109;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_110> AgradDistributionsNegBinomial_fd_110;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_111> AgradDistributionsNegBinomial_fd_111;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_112> AgradDistributionsNegBinomial_fd_112;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_113> AgradDistributionsNegBinomial_fd_113;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_114> AgradDistributionsNegBinomial_fd_114;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_115> AgradDistributionsNegBinomial_fd_115;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_116> AgradDistributionsNegBinomial_fd_116;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_117> AgradDistributionsNegBinomial_fd_117;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_118> AgradDistributionsNegBinomial_fd_118;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_119> AgradDistributionsNegBinomial_fd_119;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_120> AgradDistributionsNegBinomial_fd_120;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_121> AgradDistributionsNegBinomial_fd_121;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_122> AgradDistributionsNegBinomial_fd_122;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_123> AgradDistributionsNegBinomial_fd_123;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_124> AgradDistributionsNegBinomial_fd_124;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_125> AgradDistributionsNegBinomial_fd_125;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_126> AgradDistributionsNegBinomial_fd_126;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_127> AgradDistributionsNegBinomial_fd_127;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_128> AgradDistributionsNegBinomial_fd_128;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_129> AgradDistributionsNegBinomial_fd_129;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_130> AgradDistributionsNegBinomial_fd_130;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_131> AgradDistributionsNegBinomial_fd_131;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_132> AgradDistributionsNegBinomial_fd_132;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_133> AgradDistributionsNegBinomial_fd_133;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_134> AgradDistributionsNegBinomial_fd_134;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_135> AgradDistributionsNegBinomial_fd_135;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_136> AgradDistributionsNegBinomial_fd_136;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_137> AgradDistributionsNegBinomial_fd_137;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_138> AgradDistributionsNegBinomial_fd_138;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_139> AgradDistributionsNegBinomial_fd_139;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_140> AgradDistributionsNegBinomial_fd_140;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_141> AgradDistributionsNegBinomial_fd_141;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_142> AgradDistributionsNegBinomial_fd_142;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_143> AgradDistributionsNegBinomial_fd_143;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_144> AgradDistributionsNegBinomial_fd_144;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_145> AgradDistributionsNegBinomial_fd_145;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_146> AgradDistributionsNegBinomial_fd_146;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_147> AgradDistributionsNegBinomial_fd_147;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_148> AgradDistributionsNegBinomial_fd_148;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_149> AgradDistributionsNegBinomial_fd_149;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_150> AgradDistributionsNegBinomial_fd_150;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_151> AgradDistributionsNegBinomial_fd_151;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_152> AgradDistributionsNegBinomial_fd_152;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_153> AgradDistributionsNegBinomial_fd_153;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_154> AgradDistributionsNegBinomial_fd_154;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_155> AgradDistributionsNegBinomial_fd_155;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_156> AgradDistributionsNegBinomial_fd_156;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_157> AgradDistributionsNegBinomial_fd_157;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_158> AgradDistributionsNegBinomial_fd_158;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_159> AgradDistributionsNegBinomial_fd_159;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_160> AgradDistributionsNegBinomial_fd_160;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_161> AgradDistributionsNegBinomial_fd_161;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_162> AgradDistributionsNegBinomial_fd_162;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_163> AgradDistributionsNegBinomial_fd_163;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_164> AgradDistributionsNegBinomial_fd_164;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_165> AgradDistributionsNegBinomial_fd_165;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_166> AgradDistributionsNegBinomial_fd_166;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_167> AgradDistributionsNegBinomial_fd_167;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_168> AgradDistributionsNegBinomial_fd_168;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_169> AgradDistributionsNegBinomial_fd_169;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_170> AgradDistributionsNegBinomial_fd_170;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_171> AgradDistributionsNegBinomial_fd_171;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_172> AgradDistributionsNegBinomial_fd_172;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_173> AgradDistributionsNegBinomial_fd_173;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_174> AgradDistributionsNegBinomial_fd_174;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_175> AgradDistributionsNegBinomial_fd_175;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_176> AgradDistributionsNegBinomial_fd_176;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_177> AgradDistributionsNegBinomial_fd_177;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_178> AgradDistributionsNegBinomial_fd_178;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_179> AgradDistributionsNegBinomial_fd_179;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_180> AgradDistributionsNegBinomial_fd_180;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_181> AgradDistributionsNegBinomial_fd_181;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_182> AgradDistributionsNegBinomial_fd_182;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_183> AgradDistributionsNegBinomial_fd_183;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_184> AgradDistributionsNegBinomial_fd_184;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_185> AgradDistributionsNegBinomial_fd_185;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_186> AgradDistributionsNegBinomial_fd_186;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_187> AgradDistributionsNegBinomial_fd_187;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_188> AgradDistributionsNegBinomial_fd_188;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_189> AgradDistributionsNegBinomial_fd_189;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_190> AgradDistributionsNegBinomial_fd_190;
typedef boost::mpl::vector<AgradDistributionsNegBinomial, type_fd_191> AgradDistributionsNegBinomial_fd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_0, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_1, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_2, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_3, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_4, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_5, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_6, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_7, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_8, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_9, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_10, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_11, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_12, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_13, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_14, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_15, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_16, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_17, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_18, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_19, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_20, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_21, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_22, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_23, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_24, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_25, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_26, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_27, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_28, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_29, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_30, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_31, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_32, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_33, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_34, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_35, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_36, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_37, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_38, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_39, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_40, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_41, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_42, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_43, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_44, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_45, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_46, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_47, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_48, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_49, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_50, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_51, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_52, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_53, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_54, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_55, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_56, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_57, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_58, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_59, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_60, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_61, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_62, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_63, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_64, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_65, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_66, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_67, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_68, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_69, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_70, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_71, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_72, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_73, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_74, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_75, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_76, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_77, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_78, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_79, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_80, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_81, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_82, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_83, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_84, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_85, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_86, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_87, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_88, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_89, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_90, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_91, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_92, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_93, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_94, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_95, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_96, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_97, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_98, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_99, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_100, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_101, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_102, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_103, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_104, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_105, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_106, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_107, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_108, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_109, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_110, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_111, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_112, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_113, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_114, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_115, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_116, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_117, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_118, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_119, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_120, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_121, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_122, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_123, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_124, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_125, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_126, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_127, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_128, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_129, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_130, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_131, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_132, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_133, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_134, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_135, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_136, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_137, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_138, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_139, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_140, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_141, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_142, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_143, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_144, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_145, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_146, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_147, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_148, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_149, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_150, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_151, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_152, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_153, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_154, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_155, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_156, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_157, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_158, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_159, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_160, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_161, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_162, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_163, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_164, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_165, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_166, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_167, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_168, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_169, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_170, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_171, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_172, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_173, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_174, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_175, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_176, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_177, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_178, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_179, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_180, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_181, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_182, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_183, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_184, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_185, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_186, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_187, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_188, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_189, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_190, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsNegBinomial_fd_191, AgradDistributionTestFixture, AgradDistributionsNegBinomial_fd_191);

