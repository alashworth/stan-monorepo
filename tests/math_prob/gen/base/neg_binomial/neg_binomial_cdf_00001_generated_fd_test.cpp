#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty, empty> type_fd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty, empty> type_fd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty, empty> type_fd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_191;

typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_100> AgradCdfNegBinomial_fd_100;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_101> AgradCdfNegBinomial_fd_101;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_102> AgradCdfNegBinomial_fd_102;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_103> AgradCdfNegBinomial_fd_103;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_104> AgradCdfNegBinomial_fd_104;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_105> AgradCdfNegBinomial_fd_105;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_106> AgradCdfNegBinomial_fd_106;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_107> AgradCdfNegBinomial_fd_107;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_108> AgradCdfNegBinomial_fd_108;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_109> AgradCdfNegBinomial_fd_109;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_110> AgradCdfNegBinomial_fd_110;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_111> AgradCdfNegBinomial_fd_111;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_112> AgradCdfNegBinomial_fd_112;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_113> AgradCdfNegBinomial_fd_113;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_114> AgradCdfNegBinomial_fd_114;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_115> AgradCdfNegBinomial_fd_115;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_116> AgradCdfNegBinomial_fd_116;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_117> AgradCdfNegBinomial_fd_117;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_118> AgradCdfNegBinomial_fd_118;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_119> AgradCdfNegBinomial_fd_119;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_120> AgradCdfNegBinomial_fd_120;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_121> AgradCdfNegBinomial_fd_121;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_122> AgradCdfNegBinomial_fd_122;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_123> AgradCdfNegBinomial_fd_123;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_124> AgradCdfNegBinomial_fd_124;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_125> AgradCdfNegBinomial_fd_125;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_126> AgradCdfNegBinomial_fd_126;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_127> AgradCdfNegBinomial_fd_127;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_128> AgradCdfNegBinomial_fd_128;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_129> AgradCdfNegBinomial_fd_129;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_130> AgradCdfNegBinomial_fd_130;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_131> AgradCdfNegBinomial_fd_131;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_132> AgradCdfNegBinomial_fd_132;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_133> AgradCdfNegBinomial_fd_133;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_134> AgradCdfNegBinomial_fd_134;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_135> AgradCdfNegBinomial_fd_135;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_136> AgradCdfNegBinomial_fd_136;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_137> AgradCdfNegBinomial_fd_137;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_138> AgradCdfNegBinomial_fd_138;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_139> AgradCdfNegBinomial_fd_139;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_140> AgradCdfNegBinomial_fd_140;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_141> AgradCdfNegBinomial_fd_141;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_142> AgradCdfNegBinomial_fd_142;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_143> AgradCdfNegBinomial_fd_143;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_144> AgradCdfNegBinomial_fd_144;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_145> AgradCdfNegBinomial_fd_145;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_146> AgradCdfNegBinomial_fd_146;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_147> AgradCdfNegBinomial_fd_147;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_148> AgradCdfNegBinomial_fd_148;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_149> AgradCdfNegBinomial_fd_149;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_150> AgradCdfNegBinomial_fd_150;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_151> AgradCdfNegBinomial_fd_151;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_152> AgradCdfNegBinomial_fd_152;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_153> AgradCdfNegBinomial_fd_153;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_154> AgradCdfNegBinomial_fd_154;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_155> AgradCdfNegBinomial_fd_155;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_156> AgradCdfNegBinomial_fd_156;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_157> AgradCdfNegBinomial_fd_157;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_158> AgradCdfNegBinomial_fd_158;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_159> AgradCdfNegBinomial_fd_159;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_160> AgradCdfNegBinomial_fd_160;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_161> AgradCdfNegBinomial_fd_161;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_162> AgradCdfNegBinomial_fd_162;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_163> AgradCdfNegBinomial_fd_163;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_164> AgradCdfNegBinomial_fd_164;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_165> AgradCdfNegBinomial_fd_165;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_166> AgradCdfNegBinomial_fd_166;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_167> AgradCdfNegBinomial_fd_167;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_168> AgradCdfNegBinomial_fd_168;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_169> AgradCdfNegBinomial_fd_169;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_170> AgradCdfNegBinomial_fd_170;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_171> AgradCdfNegBinomial_fd_171;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_172> AgradCdfNegBinomial_fd_172;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_173> AgradCdfNegBinomial_fd_173;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_174> AgradCdfNegBinomial_fd_174;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_175> AgradCdfNegBinomial_fd_175;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_176> AgradCdfNegBinomial_fd_176;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_177> AgradCdfNegBinomial_fd_177;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_178> AgradCdfNegBinomial_fd_178;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_179> AgradCdfNegBinomial_fd_179;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_180> AgradCdfNegBinomial_fd_180;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_181> AgradCdfNegBinomial_fd_181;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_182> AgradCdfNegBinomial_fd_182;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_183> AgradCdfNegBinomial_fd_183;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_184> AgradCdfNegBinomial_fd_184;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_185> AgradCdfNegBinomial_fd_185;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_186> AgradCdfNegBinomial_fd_186;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_187> AgradCdfNegBinomial_fd_187;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_188> AgradCdfNegBinomial_fd_188;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_189> AgradCdfNegBinomial_fd_189;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_190> AgradCdfNegBinomial_fd_190;
typedef boost::mpl::vector<AgradCdfNegBinomial, type_fd_191> AgradCdfNegBinomial_fd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_100, AgradCdfTestFixture, AgradCdfNegBinomial_fd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_101, AgradCdfTestFixture, AgradCdfNegBinomial_fd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_102, AgradCdfTestFixture, AgradCdfNegBinomial_fd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_103, AgradCdfTestFixture, AgradCdfNegBinomial_fd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_104, AgradCdfTestFixture, AgradCdfNegBinomial_fd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_105, AgradCdfTestFixture, AgradCdfNegBinomial_fd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_106, AgradCdfTestFixture, AgradCdfNegBinomial_fd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_107, AgradCdfTestFixture, AgradCdfNegBinomial_fd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_108, AgradCdfTestFixture, AgradCdfNegBinomial_fd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_109, AgradCdfTestFixture, AgradCdfNegBinomial_fd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_110, AgradCdfTestFixture, AgradCdfNegBinomial_fd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_111, AgradCdfTestFixture, AgradCdfNegBinomial_fd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_112, AgradCdfTestFixture, AgradCdfNegBinomial_fd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_113, AgradCdfTestFixture, AgradCdfNegBinomial_fd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_114, AgradCdfTestFixture, AgradCdfNegBinomial_fd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_115, AgradCdfTestFixture, AgradCdfNegBinomial_fd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_116, AgradCdfTestFixture, AgradCdfNegBinomial_fd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_117, AgradCdfTestFixture, AgradCdfNegBinomial_fd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_118, AgradCdfTestFixture, AgradCdfNegBinomial_fd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_119, AgradCdfTestFixture, AgradCdfNegBinomial_fd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_120, AgradCdfTestFixture, AgradCdfNegBinomial_fd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_121, AgradCdfTestFixture, AgradCdfNegBinomial_fd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_122, AgradCdfTestFixture, AgradCdfNegBinomial_fd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_123, AgradCdfTestFixture, AgradCdfNegBinomial_fd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_124, AgradCdfTestFixture, AgradCdfNegBinomial_fd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_125, AgradCdfTestFixture, AgradCdfNegBinomial_fd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_126, AgradCdfTestFixture, AgradCdfNegBinomial_fd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_127, AgradCdfTestFixture, AgradCdfNegBinomial_fd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_128, AgradCdfTestFixture, AgradCdfNegBinomial_fd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_129, AgradCdfTestFixture, AgradCdfNegBinomial_fd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_130, AgradCdfTestFixture, AgradCdfNegBinomial_fd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_131, AgradCdfTestFixture, AgradCdfNegBinomial_fd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_132, AgradCdfTestFixture, AgradCdfNegBinomial_fd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_133, AgradCdfTestFixture, AgradCdfNegBinomial_fd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_134, AgradCdfTestFixture, AgradCdfNegBinomial_fd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_135, AgradCdfTestFixture, AgradCdfNegBinomial_fd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_136, AgradCdfTestFixture, AgradCdfNegBinomial_fd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_137, AgradCdfTestFixture, AgradCdfNegBinomial_fd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_138, AgradCdfTestFixture, AgradCdfNegBinomial_fd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_139, AgradCdfTestFixture, AgradCdfNegBinomial_fd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_140, AgradCdfTestFixture, AgradCdfNegBinomial_fd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_141, AgradCdfTestFixture, AgradCdfNegBinomial_fd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_142, AgradCdfTestFixture, AgradCdfNegBinomial_fd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_143, AgradCdfTestFixture, AgradCdfNegBinomial_fd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_144, AgradCdfTestFixture, AgradCdfNegBinomial_fd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_145, AgradCdfTestFixture, AgradCdfNegBinomial_fd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_146, AgradCdfTestFixture, AgradCdfNegBinomial_fd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_147, AgradCdfTestFixture, AgradCdfNegBinomial_fd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_148, AgradCdfTestFixture, AgradCdfNegBinomial_fd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_149, AgradCdfTestFixture, AgradCdfNegBinomial_fd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_150, AgradCdfTestFixture, AgradCdfNegBinomial_fd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_151, AgradCdfTestFixture, AgradCdfNegBinomial_fd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_152, AgradCdfTestFixture, AgradCdfNegBinomial_fd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_153, AgradCdfTestFixture, AgradCdfNegBinomial_fd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_154, AgradCdfTestFixture, AgradCdfNegBinomial_fd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_155, AgradCdfTestFixture, AgradCdfNegBinomial_fd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_156, AgradCdfTestFixture, AgradCdfNegBinomial_fd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_157, AgradCdfTestFixture, AgradCdfNegBinomial_fd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_158, AgradCdfTestFixture, AgradCdfNegBinomial_fd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_159, AgradCdfTestFixture, AgradCdfNegBinomial_fd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_160, AgradCdfTestFixture, AgradCdfNegBinomial_fd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_161, AgradCdfTestFixture, AgradCdfNegBinomial_fd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_162, AgradCdfTestFixture, AgradCdfNegBinomial_fd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_163, AgradCdfTestFixture, AgradCdfNegBinomial_fd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_164, AgradCdfTestFixture, AgradCdfNegBinomial_fd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_165, AgradCdfTestFixture, AgradCdfNegBinomial_fd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_166, AgradCdfTestFixture, AgradCdfNegBinomial_fd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_167, AgradCdfTestFixture, AgradCdfNegBinomial_fd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_168, AgradCdfTestFixture, AgradCdfNegBinomial_fd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_169, AgradCdfTestFixture, AgradCdfNegBinomial_fd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_170, AgradCdfTestFixture, AgradCdfNegBinomial_fd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_171, AgradCdfTestFixture, AgradCdfNegBinomial_fd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_172, AgradCdfTestFixture, AgradCdfNegBinomial_fd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_173, AgradCdfTestFixture, AgradCdfNegBinomial_fd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_174, AgradCdfTestFixture, AgradCdfNegBinomial_fd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_175, AgradCdfTestFixture, AgradCdfNegBinomial_fd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_176, AgradCdfTestFixture, AgradCdfNegBinomial_fd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_177, AgradCdfTestFixture, AgradCdfNegBinomial_fd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_178, AgradCdfTestFixture, AgradCdfNegBinomial_fd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_179, AgradCdfTestFixture, AgradCdfNegBinomial_fd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_180, AgradCdfTestFixture, AgradCdfNegBinomial_fd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_181, AgradCdfTestFixture, AgradCdfNegBinomial_fd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_182, AgradCdfTestFixture, AgradCdfNegBinomial_fd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_183, AgradCdfTestFixture, AgradCdfNegBinomial_fd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_184, AgradCdfTestFixture, AgradCdfNegBinomial_fd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_185, AgradCdfTestFixture, AgradCdfNegBinomial_fd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_186, AgradCdfTestFixture, AgradCdfNegBinomial_fd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_187, AgradCdfTestFixture, AgradCdfNegBinomial_fd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_188, AgradCdfTestFixture, AgradCdfNegBinomial_fd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_189, AgradCdfTestFixture, AgradCdfNegBinomial_fd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_190, AgradCdfTestFixture, AgradCdfNegBinomial_fd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfNegBinomial_fd_191, AgradCdfTestFixture, AgradCdfNegBinomial_fd_191);

