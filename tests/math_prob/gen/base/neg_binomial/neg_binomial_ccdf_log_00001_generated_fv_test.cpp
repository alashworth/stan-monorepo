#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/neg_binomial/neg_binomial_ccdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty, empty> type_fv_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty, empty> type_fv_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty, empty> type_fv_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_191;

typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_100> AgradCcdfLogNegBinomial_fv_100;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_101> AgradCcdfLogNegBinomial_fv_101;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_102> AgradCcdfLogNegBinomial_fv_102;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_103> AgradCcdfLogNegBinomial_fv_103;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_104> AgradCcdfLogNegBinomial_fv_104;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_105> AgradCcdfLogNegBinomial_fv_105;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_106> AgradCcdfLogNegBinomial_fv_106;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_107> AgradCcdfLogNegBinomial_fv_107;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_108> AgradCcdfLogNegBinomial_fv_108;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_109> AgradCcdfLogNegBinomial_fv_109;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_110> AgradCcdfLogNegBinomial_fv_110;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_111> AgradCcdfLogNegBinomial_fv_111;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_112> AgradCcdfLogNegBinomial_fv_112;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_113> AgradCcdfLogNegBinomial_fv_113;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_114> AgradCcdfLogNegBinomial_fv_114;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_115> AgradCcdfLogNegBinomial_fv_115;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_116> AgradCcdfLogNegBinomial_fv_116;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_117> AgradCcdfLogNegBinomial_fv_117;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_118> AgradCcdfLogNegBinomial_fv_118;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_119> AgradCcdfLogNegBinomial_fv_119;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_120> AgradCcdfLogNegBinomial_fv_120;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_121> AgradCcdfLogNegBinomial_fv_121;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_122> AgradCcdfLogNegBinomial_fv_122;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_123> AgradCcdfLogNegBinomial_fv_123;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_124> AgradCcdfLogNegBinomial_fv_124;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_125> AgradCcdfLogNegBinomial_fv_125;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_126> AgradCcdfLogNegBinomial_fv_126;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_127> AgradCcdfLogNegBinomial_fv_127;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_128> AgradCcdfLogNegBinomial_fv_128;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_129> AgradCcdfLogNegBinomial_fv_129;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_130> AgradCcdfLogNegBinomial_fv_130;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_131> AgradCcdfLogNegBinomial_fv_131;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_132> AgradCcdfLogNegBinomial_fv_132;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_133> AgradCcdfLogNegBinomial_fv_133;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_134> AgradCcdfLogNegBinomial_fv_134;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_135> AgradCcdfLogNegBinomial_fv_135;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_136> AgradCcdfLogNegBinomial_fv_136;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_137> AgradCcdfLogNegBinomial_fv_137;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_138> AgradCcdfLogNegBinomial_fv_138;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_139> AgradCcdfLogNegBinomial_fv_139;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_140> AgradCcdfLogNegBinomial_fv_140;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_141> AgradCcdfLogNegBinomial_fv_141;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_142> AgradCcdfLogNegBinomial_fv_142;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_143> AgradCcdfLogNegBinomial_fv_143;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_144> AgradCcdfLogNegBinomial_fv_144;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_145> AgradCcdfLogNegBinomial_fv_145;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_146> AgradCcdfLogNegBinomial_fv_146;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_147> AgradCcdfLogNegBinomial_fv_147;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_148> AgradCcdfLogNegBinomial_fv_148;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_149> AgradCcdfLogNegBinomial_fv_149;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_150> AgradCcdfLogNegBinomial_fv_150;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_151> AgradCcdfLogNegBinomial_fv_151;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_152> AgradCcdfLogNegBinomial_fv_152;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_153> AgradCcdfLogNegBinomial_fv_153;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_154> AgradCcdfLogNegBinomial_fv_154;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_155> AgradCcdfLogNegBinomial_fv_155;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_156> AgradCcdfLogNegBinomial_fv_156;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_157> AgradCcdfLogNegBinomial_fv_157;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_158> AgradCcdfLogNegBinomial_fv_158;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_159> AgradCcdfLogNegBinomial_fv_159;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_160> AgradCcdfLogNegBinomial_fv_160;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_161> AgradCcdfLogNegBinomial_fv_161;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_162> AgradCcdfLogNegBinomial_fv_162;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_163> AgradCcdfLogNegBinomial_fv_163;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_164> AgradCcdfLogNegBinomial_fv_164;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_165> AgradCcdfLogNegBinomial_fv_165;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_166> AgradCcdfLogNegBinomial_fv_166;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_167> AgradCcdfLogNegBinomial_fv_167;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_168> AgradCcdfLogNegBinomial_fv_168;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_169> AgradCcdfLogNegBinomial_fv_169;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_170> AgradCcdfLogNegBinomial_fv_170;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_171> AgradCcdfLogNegBinomial_fv_171;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_172> AgradCcdfLogNegBinomial_fv_172;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_173> AgradCcdfLogNegBinomial_fv_173;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_174> AgradCcdfLogNegBinomial_fv_174;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_175> AgradCcdfLogNegBinomial_fv_175;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_176> AgradCcdfLogNegBinomial_fv_176;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_177> AgradCcdfLogNegBinomial_fv_177;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_178> AgradCcdfLogNegBinomial_fv_178;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_179> AgradCcdfLogNegBinomial_fv_179;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_180> AgradCcdfLogNegBinomial_fv_180;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_181> AgradCcdfLogNegBinomial_fv_181;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_182> AgradCcdfLogNegBinomial_fv_182;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_183> AgradCcdfLogNegBinomial_fv_183;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_184> AgradCcdfLogNegBinomial_fv_184;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_185> AgradCcdfLogNegBinomial_fv_185;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_186> AgradCcdfLogNegBinomial_fv_186;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_187> AgradCcdfLogNegBinomial_fv_187;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_188> AgradCcdfLogNegBinomial_fv_188;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_189> AgradCcdfLogNegBinomial_fv_189;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_190> AgradCcdfLogNegBinomial_fv_190;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fv_191> AgradCcdfLogNegBinomial_fv_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_100, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_101, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_102, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_103, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_104, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_105, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_106, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_107, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_108, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_109, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_110, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_111, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_112, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_113, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_114, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_115, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_116, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_117, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_118, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_119, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_120, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_121, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_122, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_123, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_124, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_125, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_126, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_127, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_128, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_129, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_130, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_131, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_132, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_133, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_134, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_135, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_136, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_137, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_138, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_139, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_140, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_141, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_142, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_143, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_144, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_145, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_146, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_147, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_148, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_149, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_150, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_151, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_152, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_153, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_154, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_155, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_156, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_157, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_158, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_159, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_160, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_161, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_162, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_163, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_164, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_165, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_166, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_167, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_168, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_169, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_170, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_171, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_172, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_173, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_174, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_175, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_176, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_177, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_178, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_179, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_180, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_181, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_182, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_183, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_184, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_185, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_186, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_187, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_188, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_189, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_190, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fv_191, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fv_191);

