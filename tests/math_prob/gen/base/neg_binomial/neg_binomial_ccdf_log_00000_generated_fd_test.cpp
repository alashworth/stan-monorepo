#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_ccdf_log_test.hpp>

typedef boost::mpl::vector<int, double, fvar<double>, empty, empty, empty> type_fd_0;
typedef boost::mpl::vector<int, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_3;
typedef boost::mpl::vector<int, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_4;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_5;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_6;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_7;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_8;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_9;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_10;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_11;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_12;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_13;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_14;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_15;
typedef boost::mpl::vector<int, fvar<double>, double, empty, empty, empty> type_fd_16;
typedef boost::mpl::vector<int, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_17;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_18;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_19;
typedef boost::mpl::vector<int, fvar<double>, fvar<double>, empty, empty, empty> type_fd_20;
typedef boost::mpl::vector<int, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_21;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_22;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_23;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_24;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_25;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_26;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_27;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_28;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_29;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_30;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_31;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_32;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_33;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_34;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_35;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_36;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_37;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_38;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_39;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_40;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_41;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_42;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_43;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_44;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_45;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_46;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_47;
typedef boost::mpl::vector<std::vector<int>, double, fvar<double>, empty, empty, empty> type_fd_48;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_49;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_50;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_51;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_52;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_53;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_54;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_63;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, double, empty, empty, empty> type_fd_64;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_65;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_66;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_67;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_68;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_69;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_70;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_95;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty, empty> type_fd_96;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_97;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_98;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_99;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty, empty> type_fd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty, empty> type_fd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty, empty> type_fd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_191;

typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_0> AgradCcdfLogNegBinomial_fd_0;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_1> AgradCcdfLogNegBinomial_fd_1;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_2> AgradCcdfLogNegBinomial_fd_2;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_3> AgradCcdfLogNegBinomial_fd_3;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_4> AgradCcdfLogNegBinomial_fd_4;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_5> AgradCcdfLogNegBinomial_fd_5;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_6> AgradCcdfLogNegBinomial_fd_6;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_7> AgradCcdfLogNegBinomial_fd_7;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_8> AgradCcdfLogNegBinomial_fd_8;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_9> AgradCcdfLogNegBinomial_fd_9;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_10> AgradCcdfLogNegBinomial_fd_10;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_11> AgradCcdfLogNegBinomial_fd_11;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_12> AgradCcdfLogNegBinomial_fd_12;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_13> AgradCcdfLogNegBinomial_fd_13;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_14> AgradCcdfLogNegBinomial_fd_14;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_15> AgradCcdfLogNegBinomial_fd_15;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_16> AgradCcdfLogNegBinomial_fd_16;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_17> AgradCcdfLogNegBinomial_fd_17;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_18> AgradCcdfLogNegBinomial_fd_18;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_19> AgradCcdfLogNegBinomial_fd_19;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_20> AgradCcdfLogNegBinomial_fd_20;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_21> AgradCcdfLogNegBinomial_fd_21;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_22> AgradCcdfLogNegBinomial_fd_22;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_23> AgradCcdfLogNegBinomial_fd_23;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_24> AgradCcdfLogNegBinomial_fd_24;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_25> AgradCcdfLogNegBinomial_fd_25;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_26> AgradCcdfLogNegBinomial_fd_26;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_27> AgradCcdfLogNegBinomial_fd_27;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_28> AgradCcdfLogNegBinomial_fd_28;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_29> AgradCcdfLogNegBinomial_fd_29;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_30> AgradCcdfLogNegBinomial_fd_30;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_31> AgradCcdfLogNegBinomial_fd_31;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_32> AgradCcdfLogNegBinomial_fd_32;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_33> AgradCcdfLogNegBinomial_fd_33;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_34> AgradCcdfLogNegBinomial_fd_34;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_35> AgradCcdfLogNegBinomial_fd_35;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_36> AgradCcdfLogNegBinomial_fd_36;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_37> AgradCcdfLogNegBinomial_fd_37;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_38> AgradCcdfLogNegBinomial_fd_38;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_39> AgradCcdfLogNegBinomial_fd_39;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_40> AgradCcdfLogNegBinomial_fd_40;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_41> AgradCcdfLogNegBinomial_fd_41;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_42> AgradCcdfLogNegBinomial_fd_42;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_43> AgradCcdfLogNegBinomial_fd_43;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_44> AgradCcdfLogNegBinomial_fd_44;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_45> AgradCcdfLogNegBinomial_fd_45;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_46> AgradCcdfLogNegBinomial_fd_46;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_47> AgradCcdfLogNegBinomial_fd_47;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_48> AgradCcdfLogNegBinomial_fd_48;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_49> AgradCcdfLogNegBinomial_fd_49;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_50> AgradCcdfLogNegBinomial_fd_50;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_51> AgradCcdfLogNegBinomial_fd_51;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_52> AgradCcdfLogNegBinomial_fd_52;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_53> AgradCcdfLogNegBinomial_fd_53;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_54> AgradCcdfLogNegBinomial_fd_54;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_55> AgradCcdfLogNegBinomial_fd_55;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_56> AgradCcdfLogNegBinomial_fd_56;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_57> AgradCcdfLogNegBinomial_fd_57;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_58> AgradCcdfLogNegBinomial_fd_58;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_59> AgradCcdfLogNegBinomial_fd_59;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_60> AgradCcdfLogNegBinomial_fd_60;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_61> AgradCcdfLogNegBinomial_fd_61;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_62> AgradCcdfLogNegBinomial_fd_62;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_63> AgradCcdfLogNegBinomial_fd_63;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_64> AgradCcdfLogNegBinomial_fd_64;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_65> AgradCcdfLogNegBinomial_fd_65;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_66> AgradCcdfLogNegBinomial_fd_66;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_67> AgradCcdfLogNegBinomial_fd_67;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_68> AgradCcdfLogNegBinomial_fd_68;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_69> AgradCcdfLogNegBinomial_fd_69;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_70> AgradCcdfLogNegBinomial_fd_70;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_71> AgradCcdfLogNegBinomial_fd_71;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_72> AgradCcdfLogNegBinomial_fd_72;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_73> AgradCcdfLogNegBinomial_fd_73;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_74> AgradCcdfLogNegBinomial_fd_74;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_75> AgradCcdfLogNegBinomial_fd_75;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_76> AgradCcdfLogNegBinomial_fd_76;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_77> AgradCcdfLogNegBinomial_fd_77;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_78> AgradCcdfLogNegBinomial_fd_78;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_79> AgradCcdfLogNegBinomial_fd_79;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_80> AgradCcdfLogNegBinomial_fd_80;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_81> AgradCcdfLogNegBinomial_fd_81;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_82> AgradCcdfLogNegBinomial_fd_82;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_83> AgradCcdfLogNegBinomial_fd_83;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_84> AgradCcdfLogNegBinomial_fd_84;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_85> AgradCcdfLogNegBinomial_fd_85;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_86> AgradCcdfLogNegBinomial_fd_86;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_87> AgradCcdfLogNegBinomial_fd_87;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_88> AgradCcdfLogNegBinomial_fd_88;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_89> AgradCcdfLogNegBinomial_fd_89;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_90> AgradCcdfLogNegBinomial_fd_90;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_91> AgradCcdfLogNegBinomial_fd_91;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_92> AgradCcdfLogNegBinomial_fd_92;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_93> AgradCcdfLogNegBinomial_fd_93;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_94> AgradCcdfLogNegBinomial_fd_94;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_95> AgradCcdfLogNegBinomial_fd_95;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_96> AgradCcdfLogNegBinomial_fd_96;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_97> AgradCcdfLogNegBinomial_fd_97;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_98> AgradCcdfLogNegBinomial_fd_98;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_99> AgradCcdfLogNegBinomial_fd_99;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_100> AgradCcdfLogNegBinomial_fd_100;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_101> AgradCcdfLogNegBinomial_fd_101;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_102> AgradCcdfLogNegBinomial_fd_102;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_103> AgradCcdfLogNegBinomial_fd_103;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_104> AgradCcdfLogNegBinomial_fd_104;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_105> AgradCcdfLogNegBinomial_fd_105;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_106> AgradCcdfLogNegBinomial_fd_106;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_107> AgradCcdfLogNegBinomial_fd_107;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_108> AgradCcdfLogNegBinomial_fd_108;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_109> AgradCcdfLogNegBinomial_fd_109;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_110> AgradCcdfLogNegBinomial_fd_110;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_111> AgradCcdfLogNegBinomial_fd_111;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_112> AgradCcdfLogNegBinomial_fd_112;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_113> AgradCcdfLogNegBinomial_fd_113;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_114> AgradCcdfLogNegBinomial_fd_114;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_115> AgradCcdfLogNegBinomial_fd_115;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_116> AgradCcdfLogNegBinomial_fd_116;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_117> AgradCcdfLogNegBinomial_fd_117;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_118> AgradCcdfLogNegBinomial_fd_118;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_119> AgradCcdfLogNegBinomial_fd_119;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_120> AgradCcdfLogNegBinomial_fd_120;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_121> AgradCcdfLogNegBinomial_fd_121;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_122> AgradCcdfLogNegBinomial_fd_122;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_123> AgradCcdfLogNegBinomial_fd_123;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_124> AgradCcdfLogNegBinomial_fd_124;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_125> AgradCcdfLogNegBinomial_fd_125;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_126> AgradCcdfLogNegBinomial_fd_126;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_127> AgradCcdfLogNegBinomial_fd_127;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_128> AgradCcdfLogNegBinomial_fd_128;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_129> AgradCcdfLogNegBinomial_fd_129;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_130> AgradCcdfLogNegBinomial_fd_130;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_131> AgradCcdfLogNegBinomial_fd_131;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_132> AgradCcdfLogNegBinomial_fd_132;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_133> AgradCcdfLogNegBinomial_fd_133;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_134> AgradCcdfLogNegBinomial_fd_134;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_135> AgradCcdfLogNegBinomial_fd_135;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_136> AgradCcdfLogNegBinomial_fd_136;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_137> AgradCcdfLogNegBinomial_fd_137;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_138> AgradCcdfLogNegBinomial_fd_138;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_139> AgradCcdfLogNegBinomial_fd_139;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_140> AgradCcdfLogNegBinomial_fd_140;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_141> AgradCcdfLogNegBinomial_fd_141;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_142> AgradCcdfLogNegBinomial_fd_142;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_143> AgradCcdfLogNegBinomial_fd_143;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_144> AgradCcdfLogNegBinomial_fd_144;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_145> AgradCcdfLogNegBinomial_fd_145;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_146> AgradCcdfLogNegBinomial_fd_146;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_147> AgradCcdfLogNegBinomial_fd_147;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_148> AgradCcdfLogNegBinomial_fd_148;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_149> AgradCcdfLogNegBinomial_fd_149;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_150> AgradCcdfLogNegBinomial_fd_150;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_151> AgradCcdfLogNegBinomial_fd_151;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_152> AgradCcdfLogNegBinomial_fd_152;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_153> AgradCcdfLogNegBinomial_fd_153;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_154> AgradCcdfLogNegBinomial_fd_154;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_155> AgradCcdfLogNegBinomial_fd_155;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_156> AgradCcdfLogNegBinomial_fd_156;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_157> AgradCcdfLogNegBinomial_fd_157;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_158> AgradCcdfLogNegBinomial_fd_158;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_159> AgradCcdfLogNegBinomial_fd_159;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_160> AgradCcdfLogNegBinomial_fd_160;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_161> AgradCcdfLogNegBinomial_fd_161;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_162> AgradCcdfLogNegBinomial_fd_162;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_163> AgradCcdfLogNegBinomial_fd_163;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_164> AgradCcdfLogNegBinomial_fd_164;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_165> AgradCcdfLogNegBinomial_fd_165;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_166> AgradCcdfLogNegBinomial_fd_166;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_167> AgradCcdfLogNegBinomial_fd_167;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_168> AgradCcdfLogNegBinomial_fd_168;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_169> AgradCcdfLogNegBinomial_fd_169;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_170> AgradCcdfLogNegBinomial_fd_170;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_171> AgradCcdfLogNegBinomial_fd_171;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_172> AgradCcdfLogNegBinomial_fd_172;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_173> AgradCcdfLogNegBinomial_fd_173;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_174> AgradCcdfLogNegBinomial_fd_174;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_175> AgradCcdfLogNegBinomial_fd_175;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_176> AgradCcdfLogNegBinomial_fd_176;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_177> AgradCcdfLogNegBinomial_fd_177;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_178> AgradCcdfLogNegBinomial_fd_178;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_179> AgradCcdfLogNegBinomial_fd_179;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_180> AgradCcdfLogNegBinomial_fd_180;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_181> AgradCcdfLogNegBinomial_fd_181;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_182> AgradCcdfLogNegBinomial_fd_182;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_183> AgradCcdfLogNegBinomial_fd_183;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_184> AgradCcdfLogNegBinomial_fd_184;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_185> AgradCcdfLogNegBinomial_fd_185;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_186> AgradCcdfLogNegBinomial_fd_186;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_187> AgradCcdfLogNegBinomial_fd_187;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_188> AgradCcdfLogNegBinomial_fd_188;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_189> AgradCcdfLogNegBinomial_fd_189;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_190> AgradCcdfLogNegBinomial_fd_190;
typedef boost::mpl::vector<AgradCcdfLogNegBinomial, type_fd_191> AgradCcdfLogNegBinomial_fd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_0, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_1, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_2, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_3, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_4, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_5, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_6, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_7, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_8, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_9, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_10, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_11, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_12, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_13, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_14, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_15, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_16, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_17, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_18, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_19, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_20, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_21, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_22, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_23, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_24, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_25, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_26, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_27, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_28, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_29, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_30, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_31, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_32, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_33, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_34, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_35, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_36, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_37, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_38, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_39, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_40, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_41, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_42, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_43, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_44, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_45, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_46, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_47, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_48, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_49, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_50, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_51, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_52, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_53, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_54, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_55, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_56, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_57, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_58, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_59, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_60, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_61, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_62, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_63, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_64, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_65, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_66, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_67, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_68, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_69, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_70, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_71, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_72, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_73, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_74, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_75, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_76, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_77, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_78, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_79, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_80, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_81, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_82, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_83, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_84, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_85, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_86, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_87, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_88, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_89, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_90, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_91, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_92, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_93, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_94, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_95, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_96, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_97, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_98, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_99, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_100, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_101, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_102, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_103, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_104, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_105, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_106, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_107, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_108, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_109, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_110, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_111, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_112, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_113, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_114, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_115, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_116, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_117, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_118, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_119, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_120, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_121, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_122, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_123, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_124, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_125, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_126, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_127, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_128, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_129, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_130, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_131, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_132, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_133, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_134, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_135, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_136, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_137, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_138, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_139, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_140, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_141, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_142, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_143, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_144, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_145, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_146, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_147, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_148, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_149, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_150, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_151, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_152, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_153, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_154, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_155, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_156, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_157, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_158, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_159, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_160, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_161, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_162, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_163, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_164, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_165, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_166, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_167, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_168, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_169, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_170, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_171, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_172, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_173, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_174, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_175, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_176, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_177, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_178, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_179, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_180, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_181, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_182, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_183, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_184, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_185, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_186, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_187, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_188, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_189, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_190, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogNegBinomial_fd_191, AgradCcdfLogTestFixture, AgradCcdfLogNegBinomial_fd_191);

