#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<int, double, fvar<double>, empty, empty, empty> type_fd_0;
typedef boost::mpl::vector<int, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_3;
typedef boost::mpl::vector<int, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_4;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_5;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_6;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_7;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_8;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_9;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_10;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_11;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_12;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_13;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_14;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_15;
typedef boost::mpl::vector<int, fvar<double>, double, empty, empty, empty> type_fd_16;
typedef boost::mpl::vector<int, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_17;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_18;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_19;
typedef boost::mpl::vector<int, fvar<double>, fvar<double>, empty, empty, empty> type_fd_20;
typedef boost::mpl::vector<int, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_21;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_22;
typedef boost::mpl::vector<int, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_23;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_24;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_25;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_26;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_27;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_28;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_29;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_30;
typedef boost::mpl::vector<int, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_31;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_32;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_33;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_34;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_35;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_36;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_37;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_38;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_39;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_40;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_41;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_42;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_43;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_44;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_45;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_46;
typedef boost::mpl::vector<int, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_47;
typedef boost::mpl::vector<std::vector<int>, double, fvar<double>, empty, empty, empty> type_fd_48;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_49;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_50;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_51;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_52;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_53;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_54;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_55;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_56;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_57;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_58;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_59;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_60;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_61;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_62;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_63;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, double, empty, empty, empty> type_fd_64;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_65;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_66;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_67;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_68;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_69;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_70;
typedef boost::mpl::vector<std::vector<int>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_95;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, fvar<double>, empty, empty, empty> type_fd_96;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_97;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_98;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_99;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_100;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_101;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_102;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_103;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_104;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_105;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_106;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_107;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_108;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_109;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_110;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_111;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, double, empty, empty, empty> type_fd_112;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_113;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_114;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_115;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_116;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_117;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_118;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_119;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_120;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_121;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_122;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_123;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_124;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_125;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_126;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_143;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, fvar<double>, empty, empty, empty> type_fd_144;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<fvar<double>>, empty, empty, empty> type_fd_145;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_146;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_147;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, fvar<double>, empty, empty, empty> type_fd_148;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_149;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_150;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_151;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_152;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_153;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_154;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_155;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_156;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_157;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_158;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_159;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, double, empty, empty, empty> type_fd_160;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<double>, empty, empty, empty> type_fd_161;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_162;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_163;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, fvar<double>, empty, empty, empty> type_fd_164;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, std::vector<fvar<double>>, empty, empty, empty> type_fd_165;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_166;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, fvar<double>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_167;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, double, empty, empty, empty> type_fd_168;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<double>, empty, empty, empty> type_fd_169;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_170;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_171;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, fvar<double>, empty, empty, empty> type_fd_172;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, std::vector<fvar<double>>, empty, empty, empty> type_fd_173;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_174;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, std::vector<fvar<double>>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_175;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fd_176;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fd_177;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_178;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_179;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, fvar<double>, empty, empty, empty> type_fd_180;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, std::vector<fvar<double>>, empty, empty, empty> type_fd_181;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_182;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_183;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fd_184;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fd_185;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_186;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_187;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, fvar<double>, empty, empty, empty> type_fd_188;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, std::vector<fvar<double>>, empty, empty, empty> type_fd_189;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, Eigen::Dynamic, 1>, empty, empty, empty> type_fd_190;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<double>, 1, Eigen::Dynamic>, empty, empty, empty> type_fd_191;

typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_0> AgradCdfLogNegBinomial_fd_0;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_1> AgradCdfLogNegBinomial_fd_1;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_2> AgradCdfLogNegBinomial_fd_2;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_3> AgradCdfLogNegBinomial_fd_3;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_4> AgradCdfLogNegBinomial_fd_4;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_5> AgradCdfLogNegBinomial_fd_5;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_6> AgradCdfLogNegBinomial_fd_6;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_7> AgradCdfLogNegBinomial_fd_7;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_8> AgradCdfLogNegBinomial_fd_8;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_9> AgradCdfLogNegBinomial_fd_9;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_10> AgradCdfLogNegBinomial_fd_10;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_11> AgradCdfLogNegBinomial_fd_11;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_12> AgradCdfLogNegBinomial_fd_12;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_13> AgradCdfLogNegBinomial_fd_13;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_14> AgradCdfLogNegBinomial_fd_14;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_15> AgradCdfLogNegBinomial_fd_15;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_16> AgradCdfLogNegBinomial_fd_16;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_17> AgradCdfLogNegBinomial_fd_17;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_18> AgradCdfLogNegBinomial_fd_18;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_19> AgradCdfLogNegBinomial_fd_19;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_20> AgradCdfLogNegBinomial_fd_20;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_21> AgradCdfLogNegBinomial_fd_21;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_22> AgradCdfLogNegBinomial_fd_22;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_23> AgradCdfLogNegBinomial_fd_23;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_24> AgradCdfLogNegBinomial_fd_24;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_25> AgradCdfLogNegBinomial_fd_25;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_26> AgradCdfLogNegBinomial_fd_26;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_27> AgradCdfLogNegBinomial_fd_27;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_28> AgradCdfLogNegBinomial_fd_28;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_29> AgradCdfLogNegBinomial_fd_29;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_30> AgradCdfLogNegBinomial_fd_30;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_31> AgradCdfLogNegBinomial_fd_31;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_32> AgradCdfLogNegBinomial_fd_32;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_33> AgradCdfLogNegBinomial_fd_33;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_34> AgradCdfLogNegBinomial_fd_34;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_35> AgradCdfLogNegBinomial_fd_35;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_36> AgradCdfLogNegBinomial_fd_36;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_37> AgradCdfLogNegBinomial_fd_37;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_38> AgradCdfLogNegBinomial_fd_38;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_39> AgradCdfLogNegBinomial_fd_39;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_40> AgradCdfLogNegBinomial_fd_40;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_41> AgradCdfLogNegBinomial_fd_41;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_42> AgradCdfLogNegBinomial_fd_42;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_43> AgradCdfLogNegBinomial_fd_43;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_44> AgradCdfLogNegBinomial_fd_44;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_45> AgradCdfLogNegBinomial_fd_45;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_46> AgradCdfLogNegBinomial_fd_46;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_47> AgradCdfLogNegBinomial_fd_47;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_48> AgradCdfLogNegBinomial_fd_48;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_49> AgradCdfLogNegBinomial_fd_49;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_50> AgradCdfLogNegBinomial_fd_50;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_51> AgradCdfLogNegBinomial_fd_51;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_52> AgradCdfLogNegBinomial_fd_52;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_53> AgradCdfLogNegBinomial_fd_53;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_54> AgradCdfLogNegBinomial_fd_54;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_55> AgradCdfLogNegBinomial_fd_55;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_56> AgradCdfLogNegBinomial_fd_56;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_57> AgradCdfLogNegBinomial_fd_57;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_58> AgradCdfLogNegBinomial_fd_58;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_59> AgradCdfLogNegBinomial_fd_59;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_60> AgradCdfLogNegBinomial_fd_60;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_61> AgradCdfLogNegBinomial_fd_61;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_62> AgradCdfLogNegBinomial_fd_62;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_63> AgradCdfLogNegBinomial_fd_63;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_64> AgradCdfLogNegBinomial_fd_64;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_65> AgradCdfLogNegBinomial_fd_65;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_66> AgradCdfLogNegBinomial_fd_66;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_67> AgradCdfLogNegBinomial_fd_67;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_68> AgradCdfLogNegBinomial_fd_68;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_69> AgradCdfLogNegBinomial_fd_69;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_70> AgradCdfLogNegBinomial_fd_70;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_71> AgradCdfLogNegBinomial_fd_71;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_72> AgradCdfLogNegBinomial_fd_72;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_73> AgradCdfLogNegBinomial_fd_73;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_74> AgradCdfLogNegBinomial_fd_74;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_75> AgradCdfLogNegBinomial_fd_75;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_76> AgradCdfLogNegBinomial_fd_76;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_77> AgradCdfLogNegBinomial_fd_77;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_78> AgradCdfLogNegBinomial_fd_78;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_79> AgradCdfLogNegBinomial_fd_79;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_80> AgradCdfLogNegBinomial_fd_80;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_81> AgradCdfLogNegBinomial_fd_81;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_82> AgradCdfLogNegBinomial_fd_82;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_83> AgradCdfLogNegBinomial_fd_83;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_84> AgradCdfLogNegBinomial_fd_84;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_85> AgradCdfLogNegBinomial_fd_85;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_86> AgradCdfLogNegBinomial_fd_86;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_87> AgradCdfLogNegBinomial_fd_87;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_88> AgradCdfLogNegBinomial_fd_88;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_89> AgradCdfLogNegBinomial_fd_89;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_90> AgradCdfLogNegBinomial_fd_90;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_91> AgradCdfLogNegBinomial_fd_91;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_92> AgradCdfLogNegBinomial_fd_92;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_93> AgradCdfLogNegBinomial_fd_93;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_94> AgradCdfLogNegBinomial_fd_94;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_95> AgradCdfLogNegBinomial_fd_95;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_96> AgradCdfLogNegBinomial_fd_96;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_97> AgradCdfLogNegBinomial_fd_97;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_98> AgradCdfLogNegBinomial_fd_98;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_99> AgradCdfLogNegBinomial_fd_99;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_100> AgradCdfLogNegBinomial_fd_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_101> AgradCdfLogNegBinomial_fd_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_102> AgradCdfLogNegBinomial_fd_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_103> AgradCdfLogNegBinomial_fd_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_104> AgradCdfLogNegBinomial_fd_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_105> AgradCdfLogNegBinomial_fd_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_106> AgradCdfLogNegBinomial_fd_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_107> AgradCdfLogNegBinomial_fd_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_108> AgradCdfLogNegBinomial_fd_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_109> AgradCdfLogNegBinomial_fd_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_110> AgradCdfLogNegBinomial_fd_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_111> AgradCdfLogNegBinomial_fd_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_112> AgradCdfLogNegBinomial_fd_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_113> AgradCdfLogNegBinomial_fd_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_114> AgradCdfLogNegBinomial_fd_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_115> AgradCdfLogNegBinomial_fd_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_116> AgradCdfLogNegBinomial_fd_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_117> AgradCdfLogNegBinomial_fd_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_118> AgradCdfLogNegBinomial_fd_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_119> AgradCdfLogNegBinomial_fd_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_120> AgradCdfLogNegBinomial_fd_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_121> AgradCdfLogNegBinomial_fd_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_122> AgradCdfLogNegBinomial_fd_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_123> AgradCdfLogNegBinomial_fd_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_124> AgradCdfLogNegBinomial_fd_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_125> AgradCdfLogNegBinomial_fd_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_126> AgradCdfLogNegBinomial_fd_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_127> AgradCdfLogNegBinomial_fd_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_128> AgradCdfLogNegBinomial_fd_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_129> AgradCdfLogNegBinomial_fd_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_130> AgradCdfLogNegBinomial_fd_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_131> AgradCdfLogNegBinomial_fd_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_132> AgradCdfLogNegBinomial_fd_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_133> AgradCdfLogNegBinomial_fd_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_134> AgradCdfLogNegBinomial_fd_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_135> AgradCdfLogNegBinomial_fd_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_136> AgradCdfLogNegBinomial_fd_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_137> AgradCdfLogNegBinomial_fd_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_138> AgradCdfLogNegBinomial_fd_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_139> AgradCdfLogNegBinomial_fd_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_140> AgradCdfLogNegBinomial_fd_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_141> AgradCdfLogNegBinomial_fd_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_142> AgradCdfLogNegBinomial_fd_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_143> AgradCdfLogNegBinomial_fd_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_144> AgradCdfLogNegBinomial_fd_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_145> AgradCdfLogNegBinomial_fd_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_146> AgradCdfLogNegBinomial_fd_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_147> AgradCdfLogNegBinomial_fd_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_148> AgradCdfLogNegBinomial_fd_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_149> AgradCdfLogNegBinomial_fd_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_150> AgradCdfLogNegBinomial_fd_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_151> AgradCdfLogNegBinomial_fd_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_152> AgradCdfLogNegBinomial_fd_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_153> AgradCdfLogNegBinomial_fd_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_154> AgradCdfLogNegBinomial_fd_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_155> AgradCdfLogNegBinomial_fd_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_156> AgradCdfLogNegBinomial_fd_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_157> AgradCdfLogNegBinomial_fd_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_158> AgradCdfLogNegBinomial_fd_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_159> AgradCdfLogNegBinomial_fd_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_160> AgradCdfLogNegBinomial_fd_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_161> AgradCdfLogNegBinomial_fd_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_162> AgradCdfLogNegBinomial_fd_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_163> AgradCdfLogNegBinomial_fd_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_164> AgradCdfLogNegBinomial_fd_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_165> AgradCdfLogNegBinomial_fd_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_166> AgradCdfLogNegBinomial_fd_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_167> AgradCdfLogNegBinomial_fd_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_168> AgradCdfLogNegBinomial_fd_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_169> AgradCdfLogNegBinomial_fd_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_170> AgradCdfLogNegBinomial_fd_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_171> AgradCdfLogNegBinomial_fd_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_172> AgradCdfLogNegBinomial_fd_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_173> AgradCdfLogNegBinomial_fd_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_174> AgradCdfLogNegBinomial_fd_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_175> AgradCdfLogNegBinomial_fd_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_176> AgradCdfLogNegBinomial_fd_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_177> AgradCdfLogNegBinomial_fd_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_178> AgradCdfLogNegBinomial_fd_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_179> AgradCdfLogNegBinomial_fd_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_180> AgradCdfLogNegBinomial_fd_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_181> AgradCdfLogNegBinomial_fd_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_182> AgradCdfLogNegBinomial_fd_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_183> AgradCdfLogNegBinomial_fd_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_184> AgradCdfLogNegBinomial_fd_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_185> AgradCdfLogNegBinomial_fd_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_186> AgradCdfLogNegBinomial_fd_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_187> AgradCdfLogNegBinomial_fd_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_188> AgradCdfLogNegBinomial_fd_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_189> AgradCdfLogNegBinomial_fd_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_190> AgradCdfLogNegBinomial_fd_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_fd_191> AgradCdfLogNegBinomial_fd_191;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_0, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_1, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_2, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_3, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_4, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_5, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_6, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_7, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_8, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_9, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_10, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_11, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_12, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_13, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_14, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_15, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_16, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_17, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_18, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_19, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_20, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_21, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_22, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_23, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_24, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_25, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_26, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_27, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_28, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_29, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_30, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_31, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_32, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_33, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_34, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_35, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_36, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_37, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_38, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_39, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_40, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_41, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_42, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_43, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_44, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_45, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_46, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_47, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_48, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_49, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_50, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_51, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_52, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_53, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_54, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_55, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_56, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_57, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_58, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_59, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_60, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_61, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_62, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_63, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_64, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_65, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_66, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_67, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_68, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_69, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_70, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_71, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_72, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_73, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_74, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_75, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_76, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_77, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_78, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_79, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_80, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_81, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_82, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_83, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_84, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_85, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_86, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_87, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_88, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_89, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_90, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_91, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_92, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_93, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_94, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_95, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_96, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_97, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_98, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_99, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_fd_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_fd_191);

