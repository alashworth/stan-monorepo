#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <neg_binomial/neg_binomial_cdf_log_test.hpp>

typedef boost::mpl::vector<int, double, double, empty, empty, empty> type_v_0;
typedef boost::mpl::vector<int, double, std::vector<double>, empty, empty, empty> type_v_1;
typedef boost::mpl::vector<int, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_2;
typedef boost::mpl::vector<int, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_3;
typedef boost::mpl::vector<int, double, var, empty, empty, empty> type_v_4;
typedef boost::mpl::vector<int, double, std::vector<var>, empty, empty, empty> type_v_5;
typedef boost::mpl::vector<int, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_6;
typedef boost::mpl::vector<int, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_7;
typedef boost::mpl::vector<int, std::vector<double>, double, empty, empty, empty> type_v_8;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_9;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_10;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_11;
typedef boost::mpl::vector<int, std::vector<double>, var, empty, empty, empty> type_v_12;
typedef boost::mpl::vector<int, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_13;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_14;
typedef boost::mpl::vector<int, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_15;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_16;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_17;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_18;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_19;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_20;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_21;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_22;
typedef boost::mpl::vector<int, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_23;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_24;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_25;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_26;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_27;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_28;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_29;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_30;
typedef boost::mpl::vector<int, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_31;
typedef boost::mpl::vector<int, var, double, empty, empty, empty> type_v_32;
typedef boost::mpl::vector<int, var, std::vector<double>, empty, empty, empty> type_v_33;
typedef boost::mpl::vector<int, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_34;
typedef boost::mpl::vector<int, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_35;
typedef boost::mpl::vector<int, var, var, empty, empty, empty> type_v_36;
typedef boost::mpl::vector<int, var, std::vector<var>, empty, empty, empty> type_v_37;
typedef boost::mpl::vector<int, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_38;
typedef boost::mpl::vector<int, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_39;
typedef boost::mpl::vector<int, std::vector<var>, double, empty, empty, empty> type_v_40;
typedef boost::mpl::vector<int, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_41;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_42;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_43;
typedef boost::mpl::vector<int, std::vector<var>, var, empty, empty, empty> type_v_44;
typedef boost::mpl::vector<int, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_45;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_46;
typedef boost::mpl::vector<int, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_47;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_48;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_49;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_50;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_51;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_52;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_53;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_54;
typedef boost::mpl::vector<int, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_55;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_56;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_57;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_58;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_59;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_60;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_61;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_62;
typedef boost::mpl::vector<int, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_63;
typedef boost::mpl::vector<std::vector<int>, double, double, empty, empty, empty> type_v_64;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<double>, empty, empty, empty> type_v_65;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_66;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_67;
typedef boost::mpl::vector<std::vector<int>, double, var, empty, empty, empty> type_v_68;
typedef boost::mpl::vector<std::vector<int>, double, std::vector<var>, empty, empty, empty> type_v_69;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_70;
typedef boost::mpl::vector<std::vector<int>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_71;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, double, empty, empty, empty> type_v_72;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_73;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_74;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_75;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, var, empty, empty, empty> type_v_76;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_77;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_78;
typedef boost::mpl::vector<std::vector<int>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_79;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_80;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_81;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_82;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_83;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_84;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_85;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_86;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_87;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_88;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_89;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_90;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_91;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_92;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_93;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_94;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_95;
typedef boost::mpl::vector<std::vector<int>, var, double, empty, empty, empty> type_v_96;
typedef boost::mpl::vector<std::vector<int>, var, std::vector<double>, empty, empty, empty> type_v_97;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_98;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_99;
typedef boost::mpl::vector<std::vector<int>, var, var, empty, empty, empty> type_v_100;
typedef boost::mpl::vector<std::vector<int>, var, std::vector<var>, empty, empty, empty> type_v_101;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_102;
typedef boost::mpl::vector<std::vector<int>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_103;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, double, empty, empty, empty> type_v_104;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_105;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_106;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_107;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, var, empty, empty, empty> type_v_108;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_109;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_110;
typedef boost::mpl::vector<std::vector<int>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_111;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_112;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_113;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_114;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_115;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_116;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_117;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_118;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_119;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_120;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_121;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_122;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_123;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_124;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_125;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_126;
typedef boost::mpl::vector<std::vector<int>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_127;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_v_128;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_v_129;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_130;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_131;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, var, empty, empty, empty> type_v_132;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty, empty> type_v_133;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_134;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_135;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_v_136;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_137;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_138;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_139;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty, empty> type_v_140;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_141;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_142;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_143;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_144;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_145;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_146;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_147;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_148;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_149;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_150;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_151;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_152;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_153;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_154;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_155;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_156;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_157;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_158;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_159;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, double, empty, empty, empty> type_v_160;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty, empty> type_v_161;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_162;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_163;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, var, empty, empty, empty> type_v_164;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty, empty> type_v_165;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_166;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_167;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty, empty> type_v_168;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_169;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_170;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_171;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty, empty> type_v_172;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_173;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_174;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_175;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_176;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_177;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_178;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_179;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_180;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_181;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_182;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_183;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_184;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_185;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_186;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_187;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_188;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_189;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_190;
typedef boost::mpl::vector<Eigen::Matrix<int, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_191;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_v_192;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_v_193;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_194;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_195;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, var, empty, empty, empty> type_v_196;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty, empty> type_v_197;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_198;
typedef boost::mpl::vector<Eigen::Matrix<int, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_199;

typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_0> AgradCdfLogNegBinomial_v_0;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_1> AgradCdfLogNegBinomial_v_1;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_2> AgradCdfLogNegBinomial_v_2;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_3> AgradCdfLogNegBinomial_v_3;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_4> AgradCdfLogNegBinomial_v_4;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_5> AgradCdfLogNegBinomial_v_5;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_6> AgradCdfLogNegBinomial_v_6;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_7> AgradCdfLogNegBinomial_v_7;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_8> AgradCdfLogNegBinomial_v_8;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_9> AgradCdfLogNegBinomial_v_9;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_10> AgradCdfLogNegBinomial_v_10;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_11> AgradCdfLogNegBinomial_v_11;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_12> AgradCdfLogNegBinomial_v_12;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_13> AgradCdfLogNegBinomial_v_13;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_14> AgradCdfLogNegBinomial_v_14;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_15> AgradCdfLogNegBinomial_v_15;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_16> AgradCdfLogNegBinomial_v_16;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_17> AgradCdfLogNegBinomial_v_17;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_18> AgradCdfLogNegBinomial_v_18;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_19> AgradCdfLogNegBinomial_v_19;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_20> AgradCdfLogNegBinomial_v_20;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_21> AgradCdfLogNegBinomial_v_21;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_22> AgradCdfLogNegBinomial_v_22;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_23> AgradCdfLogNegBinomial_v_23;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_24> AgradCdfLogNegBinomial_v_24;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_25> AgradCdfLogNegBinomial_v_25;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_26> AgradCdfLogNegBinomial_v_26;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_27> AgradCdfLogNegBinomial_v_27;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_28> AgradCdfLogNegBinomial_v_28;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_29> AgradCdfLogNegBinomial_v_29;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_30> AgradCdfLogNegBinomial_v_30;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_31> AgradCdfLogNegBinomial_v_31;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_32> AgradCdfLogNegBinomial_v_32;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_33> AgradCdfLogNegBinomial_v_33;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_34> AgradCdfLogNegBinomial_v_34;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_35> AgradCdfLogNegBinomial_v_35;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_36> AgradCdfLogNegBinomial_v_36;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_37> AgradCdfLogNegBinomial_v_37;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_38> AgradCdfLogNegBinomial_v_38;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_39> AgradCdfLogNegBinomial_v_39;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_40> AgradCdfLogNegBinomial_v_40;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_41> AgradCdfLogNegBinomial_v_41;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_42> AgradCdfLogNegBinomial_v_42;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_43> AgradCdfLogNegBinomial_v_43;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_44> AgradCdfLogNegBinomial_v_44;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_45> AgradCdfLogNegBinomial_v_45;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_46> AgradCdfLogNegBinomial_v_46;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_47> AgradCdfLogNegBinomial_v_47;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_48> AgradCdfLogNegBinomial_v_48;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_49> AgradCdfLogNegBinomial_v_49;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_50> AgradCdfLogNegBinomial_v_50;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_51> AgradCdfLogNegBinomial_v_51;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_52> AgradCdfLogNegBinomial_v_52;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_53> AgradCdfLogNegBinomial_v_53;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_54> AgradCdfLogNegBinomial_v_54;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_55> AgradCdfLogNegBinomial_v_55;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_56> AgradCdfLogNegBinomial_v_56;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_57> AgradCdfLogNegBinomial_v_57;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_58> AgradCdfLogNegBinomial_v_58;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_59> AgradCdfLogNegBinomial_v_59;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_60> AgradCdfLogNegBinomial_v_60;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_61> AgradCdfLogNegBinomial_v_61;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_62> AgradCdfLogNegBinomial_v_62;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_63> AgradCdfLogNegBinomial_v_63;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_64> AgradCdfLogNegBinomial_v_64;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_65> AgradCdfLogNegBinomial_v_65;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_66> AgradCdfLogNegBinomial_v_66;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_67> AgradCdfLogNegBinomial_v_67;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_68> AgradCdfLogNegBinomial_v_68;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_69> AgradCdfLogNegBinomial_v_69;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_70> AgradCdfLogNegBinomial_v_70;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_71> AgradCdfLogNegBinomial_v_71;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_72> AgradCdfLogNegBinomial_v_72;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_73> AgradCdfLogNegBinomial_v_73;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_74> AgradCdfLogNegBinomial_v_74;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_75> AgradCdfLogNegBinomial_v_75;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_76> AgradCdfLogNegBinomial_v_76;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_77> AgradCdfLogNegBinomial_v_77;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_78> AgradCdfLogNegBinomial_v_78;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_79> AgradCdfLogNegBinomial_v_79;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_80> AgradCdfLogNegBinomial_v_80;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_81> AgradCdfLogNegBinomial_v_81;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_82> AgradCdfLogNegBinomial_v_82;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_83> AgradCdfLogNegBinomial_v_83;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_84> AgradCdfLogNegBinomial_v_84;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_85> AgradCdfLogNegBinomial_v_85;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_86> AgradCdfLogNegBinomial_v_86;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_87> AgradCdfLogNegBinomial_v_87;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_88> AgradCdfLogNegBinomial_v_88;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_89> AgradCdfLogNegBinomial_v_89;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_90> AgradCdfLogNegBinomial_v_90;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_91> AgradCdfLogNegBinomial_v_91;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_92> AgradCdfLogNegBinomial_v_92;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_93> AgradCdfLogNegBinomial_v_93;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_94> AgradCdfLogNegBinomial_v_94;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_95> AgradCdfLogNegBinomial_v_95;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_96> AgradCdfLogNegBinomial_v_96;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_97> AgradCdfLogNegBinomial_v_97;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_98> AgradCdfLogNegBinomial_v_98;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_99> AgradCdfLogNegBinomial_v_99;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_100> AgradCdfLogNegBinomial_v_100;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_101> AgradCdfLogNegBinomial_v_101;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_102> AgradCdfLogNegBinomial_v_102;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_103> AgradCdfLogNegBinomial_v_103;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_104> AgradCdfLogNegBinomial_v_104;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_105> AgradCdfLogNegBinomial_v_105;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_106> AgradCdfLogNegBinomial_v_106;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_107> AgradCdfLogNegBinomial_v_107;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_108> AgradCdfLogNegBinomial_v_108;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_109> AgradCdfLogNegBinomial_v_109;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_110> AgradCdfLogNegBinomial_v_110;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_111> AgradCdfLogNegBinomial_v_111;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_112> AgradCdfLogNegBinomial_v_112;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_113> AgradCdfLogNegBinomial_v_113;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_114> AgradCdfLogNegBinomial_v_114;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_115> AgradCdfLogNegBinomial_v_115;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_116> AgradCdfLogNegBinomial_v_116;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_117> AgradCdfLogNegBinomial_v_117;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_118> AgradCdfLogNegBinomial_v_118;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_119> AgradCdfLogNegBinomial_v_119;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_120> AgradCdfLogNegBinomial_v_120;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_121> AgradCdfLogNegBinomial_v_121;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_122> AgradCdfLogNegBinomial_v_122;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_123> AgradCdfLogNegBinomial_v_123;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_124> AgradCdfLogNegBinomial_v_124;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_125> AgradCdfLogNegBinomial_v_125;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_126> AgradCdfLogNegBinomial_v_126;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_127> AgradCdfLogNegBinomial_v_127;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_128> AgradCdfLogNegBinomial_v_128;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_129> AgradCdfLogNegBinomial_v_129;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_130> AgradCdfLogNegBinomial_v_130;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_131> AgradCdfLogNegBinomial_v_131;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_132> AgradCdfLogNegBinomial_v_132;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_133> AgradCdfLogNegBinomial_v_133;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_134> AgradCdfLogNegBinomial_v_134;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_135> AgradCdfLogNegBinomial_v_135;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_136> AgradCdfLogNegBinomial_v_136;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_137> AgradCdfLogNegBinomial_v_137;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_138> AgradCdfLogNegBinomial_v_138;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_139> AgradCdfLogNegBinomial_v_139;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_140> AgradCdfLogNegBinomial_v_140;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_141> AgradCdfLogNegBinomial_v_141;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_142> AgradCdfLogNegBinomial_v_142;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_143> AgradCdfLogNegBinomial_v_143;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_144> AgradCdfLogNegBinomial_v_144;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_145> AgradCdfLogNegBinomial_v_145;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_146> AgradCdfLogNegBinomial_v_146;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_147> AgradCdfLogNegBinomial_v_147;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_148> AgradCdfLogNegBinomial_v_148;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_149> AgradCdfLogNegBinomial_v_149;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_150> AgradCdfLogNegBinomial_v_150;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_151> AgradCdfLogNegBinomial_v_151;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_152> AgradCdfLogNegBinomial_v_152;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_153> AgradCdfLogNegBinomial_v_153;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_154> AgradCdfLogNegBinomial_v_154;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_155> AgradCdfLogNegBinomial_v_155;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_156> AgradCdfLogNegBinomial_v_156;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_157> AgradCdfLogNegBinomial_v_157;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_158> AgradCdfLogNegBinomial_v_158;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_159> AgradCdfLogNegBinomial_v_159;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_160> AgradCdfLogNegBinomial_v_160;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_161> AgradCdfLogNegBinomial_v_161;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_162> AgradCdfLogNegBinomial_v_162;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_163> AgradCdfLogNegBinomial_v_163;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_164> AgradCdfLogNegBinomial_v_164;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_165> AgradCdfLogNegBinomial_v_165;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_166> AgradCdfLogNegBinomial_v_166;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_167> AgradCdfLogNegBinomial_v_167;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_168> AgradCdfLogNegBinomial_v_168;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_169> AgradCdfLogNegBinomial_v_169;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_170> AgradCdfLogNegBinomial_v_170;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_171> AgradCdfLogNegBinomial_v_171;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_172> AgradCdfLogNegBinomial_v_172;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_173> AgradCdfLogNegBinomial_v_173;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_174> AgradCdfLogNegBinomial_v_174;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_175> AgradCdfLogNegBinomial_v_175;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_176> AgradCdfLogNegBinomial_v_176;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_177> AgradCdfLogNegBinomial_v_177;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_178> AgradCdfLogNegBinomial_v_178;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_179> AgradCdfLogNegBinomial_v_179;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_180> AgradCdfLogNegBinomial_v_180;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_181> AgradCdfLogNegBinomial_v_181;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_182> AgradCdfLogNegBinomial_v_182;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_183> AgradCdfLogNegBinomial_v_183;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_184> AgradCdfLogNegBinomial_v_184;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_185> AgradCdfLogNegBinomial_v_185;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_186> AgradCdfLogNegBinomial_v_186;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_187> AgradCdfLogNegBinomial_v_187;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_188> AgradCdfLogNegBinomial_v_188;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_189> AgradCdfLogNegBinomial_v_189;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_190> AgradCdfLogNegBinomial_v_190;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_191> AgradCdfLogNegBinomial_v_191;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_192> AgradCdfLogNegBinomial_v_192;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_193> AgradCdfLogNegBinomial_v_193;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_194> AgradCdfLogNegBinomial_v_194;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_195> AgradCdfLogNegBinomial_v_195;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_196> AgradCdfLogNegBinomial_v_196;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_197> AgradCdfLogNegBinomial_v_197;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_198> AgradCdfLogNegBinomial_v_198;
typedef boost::mpl::vector<AgradCdfLogNegBinomial, type_v_199> AgradCdfLogNegBinomial_v_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_0, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_1, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_2, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_3, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_4, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_5, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_6, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_7, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_8, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_9, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_10, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_11, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_12, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_13, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_14, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_15, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_16, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_17, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_18, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_19, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_20, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_21, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_22, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_23, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_24, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_25, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_26, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_27, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_28, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_29, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_30, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_31, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_32, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_33, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_34, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_35, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_36, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_37, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_38, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_39, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_40, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_41, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_42, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_43, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_44, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_45, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_46, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_47, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_48, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_49, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_50, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_51, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_52, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_53, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_54, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_55, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_56, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_57, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_58, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_59, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_60, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_61, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_62, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_63, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_64, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_65, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_66, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_67, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_68, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_69, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_70, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_71, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_72, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_73, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_74, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_75, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_76, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_77, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_78, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_79, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_80, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_81, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_82, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_83, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_84, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_85, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_86, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_87, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_88, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_89, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_90, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_91, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_92, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_93, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_94, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_95, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_96, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_97, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_98, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_99, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_100, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_101, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_102, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_103, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_104, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_105, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_106, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_107, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_108, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_109, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_110, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_111, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_112, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_113, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_114, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_115, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_116, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_117, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_118, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_119, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_120, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_121, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_122, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_123, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_124, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_125, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_126, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_127, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_128, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_129, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_130, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_131, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_132, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_133, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_134, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_135, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_136, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_137, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_138, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_139, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_140, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_141, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_142, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_143, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_144, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_145, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_146, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_147, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_148, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_149, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_150, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_151, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_152, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_153, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_154, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_155, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_156, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_157, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_158, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_159, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_160, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_161, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_162, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_163, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_164, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_165, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_166, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_167, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_168, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_169, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_170, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_171, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_172, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_173, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_174, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_175, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_176, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_177, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_178, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_179, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_180, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_181, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_182, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_183, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_184, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_185, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_186, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_187, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_188, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_189, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_190, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_191, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_192, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_193, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_194, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_195, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_196, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_197, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_198, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogNegBinomial_v_199, AgradCdfLogTestFixture, AgradCdfLogNegBinomial_v_199);

