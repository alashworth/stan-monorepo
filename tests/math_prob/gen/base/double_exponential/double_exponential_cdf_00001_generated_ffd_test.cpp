#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <double_exponential/double_exponential_cdf_test.hpp>

typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, double, empty, empty, empty> type_ffd_200;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_201;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_202;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_203;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_204;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_205;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_206;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_207;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_208;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_209;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_210;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_211;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_212;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_213;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_214;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_215;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_216;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_217;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_218;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_219;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_220;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_221;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_222;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_223;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_224;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_225;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_226;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_227;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_228;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_229;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_230;
typedef boost::mpl::vector<fvar<fvar<double> >, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_231;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_232;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_233;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_234;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_235;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_236;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_237;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_238;
typedef boost::mpl::vector<fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_239;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_240;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_241;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_242;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_243;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_244;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_245;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_246;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_247;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_248;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_249;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_250;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_251;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_252;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_253;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_254;
typedef boost::mpl::vector<fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_255;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, double, empty, empty, empty> type_ffd_256;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<double>, empty, empty, empty> type_ffd_257;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_258;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_259;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_260;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_261;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_262;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_263;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, double, empty, empty, empty> type_ffd_264;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_265;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_266;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_267;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_268;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_269;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_270;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_271;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_272;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_273;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_274;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_275;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_276;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_277;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_278;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_279;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_280;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_281;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_282;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_283;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_284;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_285;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_286;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_287;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_288;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_289;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_290;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_291;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_292;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_293;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_294;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_295;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_296;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_297;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_298;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_299;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_200> AgradCdfDoubleExponential_ffd_200;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_201> AgradCdfDoubleExponential_ffd_201;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_202> AgradCdfDoubleExponential_ffd_202;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_203> AgradCdfDoubleExponential_ffd_203;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_204> AgradCdfDoubleExponential_ffd_204;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_205> AgradCdfDoubleExponential_ffd_205;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_206> AgradCdfDoubleExponential_ffd_206;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_207> AgradCdfDoubleExponential_ffd_207;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_208> AgradCdfDoubleExponential_ffd_208;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_209> AgradCdfDoubleExponential_ffd_209;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_210> AgradCdfDoubleExponential_ffd_210;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_211> AgradCdfDoubleExponential_ffd_211;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_212> AgradCdfDoubleExponential_ffd_212;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_213> AgradCdfDoubleExponential_ffd_213;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_214> AgradCdfDoubleExponential_ffd_214;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_215> AgradCdfDoubleExponential_ffd_215;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_216> AgradCdfDoubleExponential_ffd_216;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_217> AgradCdfDoubleExponential_ffd_217;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_218> AgradCdfDoubleExponential_ffd_218;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_219> AgradCdfDoubleExponential_ffd_219;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_220> AgradCdfDoubleExponential_ffd_220;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_221> AgradCdfDoubleExponential_ffd_221;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_222> AgradCdfDoubleExponential_ffd_222;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_223> AgradCdfDoubleExponential_ffd_223;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_224> AgradCdfDoubleExponential_ffd_224;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_225> AgradCdfDoubleExponential_ffd_225;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_226> AgradCdfDoubleExponential_ffd_226;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_227> AgradCdfDoubleExponential_ffd_227;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_228> AgradCdfDoubleExponential_ffd_228;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_229> AgradCdfDoubleExponential_ffd_229;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_230> AgradCdfDoubleExponential_ffd_230;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_231> AgradCdfDoubleExponential_ffd_231;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_232> AgradCdfDoubleExponential_ffd_232;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_233> AgradCdfDoubleExponential_ffd_233;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_234> AgradCdfDoubleExponential_ffd_234;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_235> AgradCdfDoubleExponential_ffd_235;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_236> AgradCdfDoubleExponential_ffd_236;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_237> AgradCdfDoubleExponential_ffd_237;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_238> AgradCdfDoubleExponential_ffd_238;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_239> AgradCdfDoubleExponential_ffd_239;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_240> AgradCdfDoubleExponential_ffd_240;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_241> AgradCdfDoubleExponential_ffd_241;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_242> AgradCdfDoubleExponential_ffd_242;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_243> AgradCdfDoubleExponential_ffd_243;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_244> AgradCdfDoubleExponential_ffd_244;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_245> AgradCdfDoubleExponential_ffd_245;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_246> AgradCdfDoubleExponential_ffd_246;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_247> AgradCdfDoubleExponential_ffd_247;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_248> AgradCdfDoubleExponential_ffd_248;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_249> AgradCdfDoubleExponential_ffd_249;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_250> AgradCdfDoubleExponential_ffd_250;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_251> AgradCdfDoubleExponential_ffd_251;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_252> AgradCdfDoubleExponential_ffd_252;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_253> AgradCdfDoubleExponential_ffd_253;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_254> AgradCdfDoubleExponential_ffd_254;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_255> AgradCdfDoubleExponential_ffd_255;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_256> AgradCdfDoubleExponential_ffd_256;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_257> AgradCdfDoubleExponential_ffd_257;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_258> AgradCdfDoubleExponential_ffd_258;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_259> AgradCdfDoubleExponential_ffd_259;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_260> AgradCdfDoubleExponential_ffd_260;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_261> AgradCdfDoubleExponential_ffd_261;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_262> AgradCdfDoubleExponential_ffd_262;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_263> AgradCdfDoubleExponential_ffd_263;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_264> AgradCdfDoubleExponential_ffd_264;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_265> AgradCdfDoubleExponential_ffd_265;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_266> AgradCdfDoubleExponential_ffd_266;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_267> AgradCdfDoubleExponential_ffd_267;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_268> AgradCdfDoubleExponential_ffd_268;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_269> AgradCdfDoubleExponential_ffd_269;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_270> AgradCdfDoubleExponential_ffd_270;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_271> AgradCdfDoubleExponential_ffd_271;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_272> AgradCdfDoubleExponential_ffd_272;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_273> AgradCdfDoubleExponential_ffd_273;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_274> AgradCdfDoubleExponential_ffd_274;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_275> AgradCdfDoubleExponential_ffd_275;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_276> AgradCdfDoubleExponential_ffd_276;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_277> AgradCdfDoubleExponential_ffd_277;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_278> AgradCdfDoubleExponential_ffd_278;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_279> AgradCdfDoubleExponential_ffd_279;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_280> AgradCdfDoubleExponential_ffd_280;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_281> AgradCdfDoubleExponential_ffd_281;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_282> AgradCdfDoubleExponential_ffd_282;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_283> AgradCdfDoubleExponential_ffd_283;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_284> AgradCdfDoubleExponential_ffd_284;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_285> AgradCdfDoubleExponential_ffd_285;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_286> AgradCdfDoubleExponential_ffd_286;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_287> AgradCdfDoubleExponential_ffd_287;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_288> AgradCdfDoubleExponential_ffd_288;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_289> AgradCdfDoubleExponential_ffd_289;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_290> AgradCdfDoubleExponential_ffd_290;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_291> AgradCdfDoubleExponential_ffd_291;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_292> AgradCdfDoubleExponential_ffd_292;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_293> AgradCdfDoubleExponential_ffd_293;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_294> AgradCdfDoubleExponential_ffd_294;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_295> AgradCdfDoubleExponential_ffd_295;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_296> AgradCdfDoubleExponential_ffd_296;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_297> AgradCdfDoubleExponential_ffd_297;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_298> AgradCdfDoubleExponential_ffd_298;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_299> AgradCdfDoubleExponential_ffd_299;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_300> AgradCdfDoubleExponential_ffd_300;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_301> AgradCdfDoubleExponential_ffd_301;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_302> AgradCdfDoubleExponential_ffd_302;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_303> AgradCdfDoubleExponential_ffd_303;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_304> AgradCdfDoubleExponential_ffd_304;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_305> AgradCdfDoubleExponential_ffd_305;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_306> AgradCdfDoubleExponential_ffd_306;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_307> AgradCdfDoubleExponential_ffd_307;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_308> AgradCdfDoubleExponential_ffd_308;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_309> AgradCdfDoubleExponential_ffd_309;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_310> AgradCdfDoubleExponential_ffd_310;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_311> AgradCdfDoubleExponential_ffd_311;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_312> AgradCdfDoubleExponential_ffd_312;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_313> AgradCdfDoubleExponential_ffd_313;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_314> AgradCdfDoubleExponential_ffd_314;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_315> AgradCdfDoubleExponential_ffd_315;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_316> AgradCdfDoubleExponential_ffd_316;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_317> AgradCdfDoubleExponential_ffd_317;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_318> AgradCdfDoubleExponential_ffd_318;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_319> AgradCdfDoubleExponential_ffd_319;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_320> AgradCdfDoubleExponential_ffd_320;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_321> AgradCdfDoubleExponential_ffd_321;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_322> AgradCdfDoubleExponential_ffd_322;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_323> AgradCdfDoubleExponential_ffd_323;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_324> AgradCdfDoubleExponential_ffd_324;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_325> AgradCdfDoubleExponential_ffd_325;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_326> AgradCdfDoubleExponential_ffd_326;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_327> AgradCdfDoubleExponential_ffd_327;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_328> AgradCdfDoubleExponential_ffd_328;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_329> AgradCdfDoubleExponential_ffd_329;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_330> AgradCdfDoubleExponential_ffd_330;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_331> AgradCdfDoubleExponential_ffd_331;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_332> AgradCdfDoubleExponential_ffd_332;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_333> AgradCdfDoubleExponential_ffd_333;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_334> AgradCdfDoubleExponential_ffd_334;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_335> AgradCdfDoubleExponential_ffd_335;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_336> AgradCdfDoubleExponential_ffd_336;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_337> AgradCdfDoubleExponential_ffd_337;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_338> AgradCdfDoubleExponential_ffd_338;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_339> AgradCdfDoubleExponential_ffd_339;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_340> AgradCdfDoubleExponential_ffd_340;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_341> AgradCdfDoubleExponential_ffd_341;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_342> AgradCdfDoubleExponential_ffd_342;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_343> AgradCdfDoubleExponential_ffd_343;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_344> AgradCdfDoubleExponential_ffd_344;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_345> AgradCdfDoubleExponential_ffd_345;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_346> AgradCdfDoubleExponential_ffd_346;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_347> AgradCdfDoubleExponential_ffd_347;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_348> AgradCdfDoubleExponential_ffd_348;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_349> AgradCdfDoubleExponential_ffd_349;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_350> AgradCdfDoubleExponential_ffd_350;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_351> AgradCdfDoubleExponential_ffd_351;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_352> AgradCdfDoubleExponential_ffd_352;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_353> AgradCdfDoubleExponential_ffd_353;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_354> AgradCdfDoubleExponential_ffd_354;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_355> AgradCdfDoubleExponential_ffd_355;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_356> AgradCdfDoubleExponential_ffd_356;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_357> AgradCdfDoubleExponential_ffd_357;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_358> AgradCdfDoubleExponential_ffd_358;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_359> AgradCdfDoubleExponential_ffd_359;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_360> AgradCdfDoubleExponential_ffd_360;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_361> AgradCdfDoubleExponential_ffd_361;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_362> AgradCdfDoubleExponential_ffd_362;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_363> AgradCdfDoubleExponential_ffd_363;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_364> AgradCdfDoubleExponential_ffd_364;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_365> AgradCdfDoubleExponential_ffd_365;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_366> AgradCdfDoubleExponential_ffd_366;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_367> AgradCdfDoubleExponential_ffd_367;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_368> AgradCdfDoubleExponential_ffd_368;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_369> AgradCdfDoubleExponential_ffd_369;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_370> AgradCdfDoubleExponential_ffd_370;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_371> AgradCdfDoubleExponential_ffd_371;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_372> AgradCdfDoubleExponential_ffd_372;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_373> AgradCdfDoubleExponential_ffd_373;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_374> AgradCdfDoubleExponential_ffd_374;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_375> AgradCdfDoubleExponential_ffd_375;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_376> AgradCdfDoubleExponential_ffd_376;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_377> AgradCdfDoubleExponential_ffd_377;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_378> AgradCdfDoubleExponential_ffd_378;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_379> AgradCdfDoubleExponential_ffd_379;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_380> AgradCdfDoubleExponential_ffd_380;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_381> AgradCdfDoubleExponential_ffd_381;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_382> AgradCdfDoubleExponential_ffd_382;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_383> AgradCdfDoubleExponential_ffd_383;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_384> AgradCdfDoubleExponential_ffd_384;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_385> AgradCdfDoubleExponential_ffd_385;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_386> AgradCdfDoubleExponential_ffd_386;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_387> AgradCdfDoubleExponential_ffd_387;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_388> AgradCdfDoubleExponential_ffd_388;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_389> AgradCdfDoubleExponential_ffd_389;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_390> AgradCdfDoubleExponential_ffd_390;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_391> AgradCdfDoubleExponential_ffd_391;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_392> AgradCdfDoubleExponential_ffd_392;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_393> AgradCdfDoubleExponential_ffd_393;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_394> AgradCdfDoubleExponential_ffd_394;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_395> AgradCdfDoubleExponential_ffd_395;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_396> AgradCdfDoubleExponential_ffd_396;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_397> AgradCdfDoubleExponential_ffd_397;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_398> AgradCdfDoubleExponential_ffd_398;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffd_399> AgradCdfDoubleExponential_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_200, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_201, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_202, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_203, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_204, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_205, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_206, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_207, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_208, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_209, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_210, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_211, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_212, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_213, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_214, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_215, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_216, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_217, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_218, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_219, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_220, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_221, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_222, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_223, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_224, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_225, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_226, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_227, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_228, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_229, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_230, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_231, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_232, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_233, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_234, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_235, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_236, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_237, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_238, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_239, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_240, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_241, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_242, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_243, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_244, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_245, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_246, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_247, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_248, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_249, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_250, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_251, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_252, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_253, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_254, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_255, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_256, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_257, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_258, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_259, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_260, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_261, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_262, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_263, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_264, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_265, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_266, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_267, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_268, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_269, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_270, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_271, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_272, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_273, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_274, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_275, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_276, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_277, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_278, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_279, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_280, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_281, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_282, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_283, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_284, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_285, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_286, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_287, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_288, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_289, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_290, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_291, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_292, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_293, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_294, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_295, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_296, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_297, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_298, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_299, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_300, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_301, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_302, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_303, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_304, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_305, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_306, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_307, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_308, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_309, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_310, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_311, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_312, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_313, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_314, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_315, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_316, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_317, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_318, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_319, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_320, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_321, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_322, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_323, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_324, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_325, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_326, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_327, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_328, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_329, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_330, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_331, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_332, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_333, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_334, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_335, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_336, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_337, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_338, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_339, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_340, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_341, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_342, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_343, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_344, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_345, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_346, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_347, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_348, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_349, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_350, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_351, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_352, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_353, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_354, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_355, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_356, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_357, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_358, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_359, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_360, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_361, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_362, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_363, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_364, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_365, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_366, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_367, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_368, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_369, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_370, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_371, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_372, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_373, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_374, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_375, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_376, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_377, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_378, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_379, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_380, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_381, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_382, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_383, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_384, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_385, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_386, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_387, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_388, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_389, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_390, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_391, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_392, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_393, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_394, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_395, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_396, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_397, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_398, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffd_399, AgradCdfTestFixture, AgradCdfDoubleExponential_ffd_399);

