#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <double_exponential/double_exponential_cdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_v_200;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_201;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_202;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_203;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty, empty> type_v_204;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_205;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_206;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_207;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_208;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_209;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_210;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_211;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_212;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_213;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_214;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_215;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_216;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_217;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_218;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_219;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_220;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_221;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_222;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_223;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, double, empty, empty, empty> type_v_224;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty, empty> type_v_225;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_226;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_227;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, var, empty, empty, empty> type_v_228;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty, empty> type_v_229;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_230;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_231;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty, empty> type_v_232;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_233;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_234;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_235;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty, empty> type_v_236;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_237;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_238;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_239;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_240;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_241;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_242;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_243;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_244;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_245;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_246;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_247;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_248;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_249;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_250;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_251;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_252;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_253;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_254;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_255;
typedef boost::mpl::vector<var, double, double, empty, empty, empty> type_v_256;
typedef boost::mpl::vector<var, double, std::vector<double>, empty, empty, empty> type_v_257;
typedef boost::mpl::vector<var, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_258;
typedef boost::mpl::vector<var, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_259;
typedef boost::mpl::vector<var, double, var, empty, empty, empty> type_v_260;
typedef boost::mpl::vector<var, double, std::vector<var>, empty, empty, empty> type_v_261;
typedef boost::mpl::vector<var, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_262;
typedef boost::mpl::vector<var, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_263;
typedef boost::mpl::vector<var, std::vector<double>, double, empty, empty, empty> type_v_264;
typedef boost::mpl::vector<var, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_265;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_266;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_267;
typedef boost::mpl::vector<var, std::vector<double>, var, empty, empty, empty> type_v_268;
typedef boost::mpl::vector<var, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_269;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_270;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_271;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_272;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_273;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_274;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_275;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_276;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_277;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_278;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_279;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_280;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_281;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_282;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_283;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_284;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_285;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_286;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_287;
typedef boost::mpl::vector<var, var, double, empty, empty, empty> type_v_288;
typedef boost::mpl::vector<var, var, std::vector<double>, empty, empty, empty> type_v_289;
typedef boost::mpl::vector<var, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_290;
typedef boost::mpl::vector<var, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_291;
typedef boost::mpl::vector<var, var, var, empty, empty, empty> type_v_292;
typedef boost::mpl::vector<var, var, std::vector<var>, empty, empty, empty> type_v_293;
typedef boost::mpl::vector<var, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_294;
typedef boost::mpl::vector<var, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_295;
typedef boost::mpl::vector<var, std::vector<var>, double, empty, empty, empty> type_v_296;
typedef boost::mpl::vector<var, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_297;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_298;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_299;
typedef boost::mpl::vector<var, std::vector<var>, var, empty, empty, empty> type_v_300;
typedef boost::mpl::vector<var, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_301;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_302;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_303;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_304;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_305;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_306;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_307;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_308;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_309;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_310;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_311;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_312;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_313;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_314;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_315;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_316;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_317;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_318;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_319;
typedef boost::mpl::vector<std::vector<var>, double, double, empty, empty, empty> type_v_320;
typedef boost::mpl::vector<std::vector<var>, double, std::vector<double>, empty, empty, empty> type_v_321;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_322;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_323;
typedef boost::mpl::vector<std::vector<var>, double, var, empty, empty, empty> type_v_324;
typedef boost::mpl::vector<std::vector<var>, double, std::vector<var>, empty, empty, empty> type_v_325;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_326;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_327;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, double, empty, empty, empty> type_v_328;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_329;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_330;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_331;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, var, empty, empty, empty> type_v_332;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_333;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_334;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_335;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_336;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_337;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_338;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_339;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_340;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_341;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_342;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_343;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_344;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_345;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_346;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_347;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_348;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_349;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_350;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_351;
typedef boost::mpl::vector<std::vector<var>, var, double, empty, empty, empty> type_v_352;
typedef boost::mpl::vector<std::vector<var>, var, std::vector<double>, empty, empty, empty> type_v_353;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_354;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_355;
typedef boost::mpl::vector<std::vector<var>, var, var, empty, empty, empty> type_v_356;
typedef boost::mpl::vector<std::vector<var>, var, std::vector<var>, empty, empty, empty> type_v_357;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_358;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_359;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, double, empty, empty, empty> type_v_360;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_361;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_362;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_363;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, var, empty, empty, empty> type_v_364;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_365;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_366;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_367;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_368;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_369;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_370;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_371;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_372;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_373;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_374;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_375;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_376;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_377;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_378;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_379;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_380;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_381;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_382;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_383;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_v_384;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_v_385;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_386;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_387;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, var, empty, empty, empty> type_v_388;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty, empty> type_v_389;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_390;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_391;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_v_392;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_393;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_394;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_395;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty, empty> type_v_396;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_397;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_398;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_399;

typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_200> AgradCdfLogDoubleExponential_v_200;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_201> AgradCdfLogDoubleExponential_v_201;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_202> AgradCdfLogDoubleExponential_v_202;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_203> AgradCdfLogDoubleExponential_v_203;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_204> AgradCdfLogDoubleExponential_v_204;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_205> AgradCdfLogDoubleExponential_v_205;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_206> AgradCdfLogDoubleExponential_v_206;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_207> AgradCdfLogDoubleExponential_v_207;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_208> AgradCdfLogDoubleExponential_v_208;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_209> AgradCdfLogDoubleExponential_v_209;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_210> AgradCdfLogDoubleExponential_v_210;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_211> AgradCdfLogDoubleExponential_v_211;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_212> AgradCdfLogDoubleExponential_v_212;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_213> AgradCdfLogDoubleExponential_v_213;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_214> AgradCdfLogDoubleExponential_v_214;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_215> AgradCdfLogDoubleExponential_v_215;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_216> AgradCdfLogDoubleExponential_v_216;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_217> AgradCdfLogDoubleExponential_v_217;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_218> AgradCdfLogDoubleExponential_v_218;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_219> AgradCdfLogDoubleExponential_v_219;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_220> AgradCdfLogDoubleExponential_v_220;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_221> AgradCdfLogDoubleExponential_v_221;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_222> AgradCdfLogDoubleExponential_v_222;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_223> AgradCdfLogDoubleExponential_v_223;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_224> AgradCdfLogDoubleExponential_v_224;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_225> AgradCdfLogDoubleExponential_v_225;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_226> AgradCdfLogDoubleExponential_v_226;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_227> AgradCdfLogDoubleExponential_v_227;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_228> AgradCdfLogDoubleExponential_v_228;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_229> AgradCdfLogDoubleExponential_v_229;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_230> AgradCdfLogDoubleExponential_v_230;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_231> AgradCdfLogDoubleExponential_v_231;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_232> AgradCdfLogDoubleExponential_v_232;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_233> AgradCdfLogDoubleExponential_v_233;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_234> AgradCdfLogDoubleExponential_v_234;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_235> AgradCdfLogDoubleExponential_v_235;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_236> AgradCdfLogDoubleExponential_v_236;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_237> AgradCdfLogDoubleExponential_v_237;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_238> AgradCdfLogDoubleExponential_v_238;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_239> AgradCdfLogDoubleExponential_v_239;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_240> AgradCdfLogDoubleExponential_v_240;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_241> AgradCdfLogDoubleExponential_v_241;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_242> AgradCdfLogDoubleExponential_v_242;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_243> AgradCdfLogDoubleExponential_v_243;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_244> AgradCdfLogDoubleExponential_v_244;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_245> AgradCdfLogDoubleExponential_v_245;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_246> AgradCdfLogDoubleExponential_v_246;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_247> AgradCdfLogDoubleExponential_v_247;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_248> AgradCdfLogDoubleExponential_v_248;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_249> AgradCdfLogDoubleExponential_v_249;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_250> AgradCdfLogDoubleExponential_v_250;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_251> AgradCdfLogDoubleExponential_v_251;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_252> AgradCdfLogDoubleExponential_v_252;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_253> AgradCdfLogDoubleExponential_v_253;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_254> AgradCdfLogDoubleExponential_v_254;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_255> AgradCdfLogDoubleExponential_v_255;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_256> AgradCdfLogDoubleExponential_v_256;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_257> AgradCdfLogDoubleExponential_v_257;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_258> AgradCdfLogDoubleExponential_v_258;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_259> AgradCdfLogDoubleExponential_v_259;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_260> AgradCdfLogDoubleExponential_v_260;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_261> AgradCdfLogDoubleExponential_v_261;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_262> AgradCdfLogDoubleExponential_v_262;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_263> AgradCdfLogDoubleExponential_v_263;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_264> AgradCdfLogDoubleExponential_v_264;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_265> AgradCdfLogDoubleExponential_v_265;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_266> AgradCdfLogDoubleExponential_v_266;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_267> AgradCdfLogDoubleExponential_v_267;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_268> AgradCdfLogDoubleExponential_v_268;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_269> AgradCdfLogDoubleExponential_v_269;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_270> AgradCdfLogDoubleExponential_v_270;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_271> AgradCdfLogDoubleExponential_v_271;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_272> AgradCdfLogDoubleExponential_v_272;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_273> AgradCdfLogDoubleExponential_v_273;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_274> AgradCdfLogDoubleExponential_v_274;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_275> AgradCdfLogDoubleExponential_v_275;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_276> AgradCdfLogDoubleExponential_v_276;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_277> AgradCdfLogDoubleExponential_v_277;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_278> AgradCdfLogDoubleExponential_v_278;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_279> AgradCdfLogDoubleExponential_v_279;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_280> AgradCdfLogDoubleExponential_v_280;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_281> AgradCdfLogDoubleExponential_v_281;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_282> AgradCdfLogDoubleExponential_v_282;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_283> AgradCdfLogDoubleExponential_v_283;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_284> AgradCdfLogDoubleExponential_v_284;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_285> AgradCdfLogDoubleExponential_v_285;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_286> AgradCdfLogDoubleExponential_v_286;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_287> AgradCdfLogDoubleExponential_v_287;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_288> AgradCdfLogDoubleExponential_v_288;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_289> AgradCdfLogDoubleExponential_v_289;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_290> AgradCdfLogDoubleExponential_v_290;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_291> AgradCdfLogDoubleExponential_v_291;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_292> AgradCdfLogDoubleExponential_v_292;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_293> AgradCdfLogDoubleExponential_v_293;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_294> AgradCdfLogDoubleExponential_v_294;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_295> AgradCdfLogDoubleExponential_v_295;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_296> AgradCdfLogDoubleExponential_v_296;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_297> AgradCdfLogDoubleExponential_v_297;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_298> AgradCdfLogDoubleExponential_v_298;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_299> AgradCdfLogDoubleExponential_v_299;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_300> AgradCdfLogDoubleExponential_v_300;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_301> AgradCdfLogDoubleExponential_v_301;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_302> AgradCdfLogDoubleExponential_v_302;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_303> AgradCdfLogDoubleExponential_v_303;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_304> AgradCdfLogDoubleExponential_v_304;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_305> AgradCdfLogDoubleExponential_v_305;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_306> AgradCdfLogDoubleExponential_v_306;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_307> AgradCdfLogDoubleExponential_v_307;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_308> AgradCdfLogDoubleExponential_v_308;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_309> AgradCdfLogDoubleExponential_v_309;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_310> AgradCdfLogDoubleExponential_v_310;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_311> AgradCdfLogDoubleExponential_v_311;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_312> AgradCdfLogDoubleExponential_v_312;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_313> AgradCdfLogDoubleExponential_v_313;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_314> AgradCdfLogDoubleExponential_v_314;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_315> AgradCdfLogDoubleExponential_v_315;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_316> AgradCdfLogDoubleExponential_v_316;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_317> AgradCdfLogDoubleExponential_v_317;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_318> AgradCdfLogDoubleExponential_v_318;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_319> AgradCdfLogDoubleExponential_v_319;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_320> AgradCdfLogDoubleExponential_v_320;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_321> AgradCdfLogDoubleExponential_v_321;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_322> AgradCdfLogDoubleExponential_v_322;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_323> AgradCdfLogDoubleExponential_v_323;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_324> AgradCdfLogDoubleExponential_v_324;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_325> AgradCdfLogDoubleExponential_v_325;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_326> AgradCdfLogDoubleExponential_v_326;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_327> AgradCdfLogDoubleExponential_v_327;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_328> AgradCdfLogDoubleExponential_v_328;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_329> AgradCdfLogDoubleExponential_v_329;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_330> AgradCdfLogDoubleExponential_v_330;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_331> AgradCdfLogDoubleExponential_v_331;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_332> AgradCdfLogDoubleExponential_v_332;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_333> AgradCdfLogDoubleExponential_v_333;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_334> AgradCdfLogDoubleExponential_v_334;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_335> AgradCdfLogDoubleExponential_v_335;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_336> AgradCdfLogDoubleExponential_v_336;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_337> AgradCdfLogDoubleExponential_v_337;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_338> AgradCdfLogDoubleExponential_v_338;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_339> AgradCdfLogDoubleExponential_v_339;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_340> AgradCdfLogDoubleExponential_v_340;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_341> AgradCdfLogDoubleExponential_v_341;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_342> AgradCdfLogDoubleExponential_v_342;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_343> AgradCdfLogDoubleExponential_v_343;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_344> AgradCdfLogDoubleExponential_v_344;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_345> AgradCdfLogDoubleExponential_v_345;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_346> AgradCdfLogDoubleExponential_v_346;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_347> AgradCdfLogDoubleExponential_v_347;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_348> AgradCdfLogDoubleExponential_v_348;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_349> AgradCdfLogDoubleExponential_v_349;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_350> AgradCdfLogDoubleExponential_v_350;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_351> AgradCdfLogDoubleExponential_v_351;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_352> AgradCdfLogDoubleExponential_v_352;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_353> AgradCdfLogDoubleExponential_v_353;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_354> AgradCdfLogDoubleExponential_v_354;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_355> AgradCdfLogDoubleExponential_v_355;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_356> AgradCdfLogDoubleExponential_v_356;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_357> AgradCdfLogDoubleExponential_v_357;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_358> AgradCdfLogDoubleExponential_v_358;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_359> AgradCdfLogDoubleExponential_v_359;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_360> AgradCdfLogDoubleExponential_v_360;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_361> AgradCdfLogDoubleExponential_v_361;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_362> AgradCdfLogDoubleExponential_v_362;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_363> AgradCdfLogDoubleExponential_v_363;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_364> AgradCdfLogDoubleExponential_v_364;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_365> AgradCdfLogDoubleExponential_v_365;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_366> AgradCdfLogDoubleExponential_v_366;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_367> AgradCdfLogDoubleExponential_v_367;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_368> AgradCdfLogDoubleExponential_v_368;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_369> AgradCdfLogDoubleExponential_v_369;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_370> AgradCdfLogDoubleExponential_v_370;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_371> AgradCdfLogDoubleExponential_v_371;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_372> AgradCdfLogDoubleExponential_v_372;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_373> AgradCdfLogDoubleExponential_v_373;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_374> AgradCdfLogDoubleExponential_v_374;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_375> AgradCdfLogDoubleExponential_v_375;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_376> AgradCdfLogDoubleExponential_v_376;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_377> AgradCdfLogDoubleExponential_v_377;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_378> AgradCdfLogDoubleExponential_v_378;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_379> AgradCdfLogDoubleExponential_v_379;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_380> AgradCdfLogDoubleExponential_v_380;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_381> AgradCdfLogDoubleExponential_v_381;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_382> AgradCdfLogDoubleExponential_v_382;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_383> AgradCdfLogDoubleExponential_v_383;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_384> AgradCdfLogDoubleExponential_v_384;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_385> AgradCdfLogDoubleExponential_v_385;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_386> AgradCdfLogDoubleExponential_v_386;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_387> AgradCdfLogDoubleExponential_v_387;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_388> AgradCdfLogDoubleExponential_v_388;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_389> AgradCdfLogDoubleExponential_v_389;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_390> AgradCdfLogDoubleExponential_v_390;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_391> AgradCdfLogDoubleExponential_v_391;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_392> AgradCdfLogDoubleExponential_v_392;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_393> AgradCdfLogDoubleExponential_v_393;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_394> AgradCdfLogDoubleExponential_v_394;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_395> AgradCdfLogDoubleExponential_v_395;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_396> AgradCdfLogDoubleExponential_v_396;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_397> AgradCdfLogDoubleExponential_v_397;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_398> AgradCdfLogDoubleExponential_v_398;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_v_399> AgradCdfLogDoubleExponential_v_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_200, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_201, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_202, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_203, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_204, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_205, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_206, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_207, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_208, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_209, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_210, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_211, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_212, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_213, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_214, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_215, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_216, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_217, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_218, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_219, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_220, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_221, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_222, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_223, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_224, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_225, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_226, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_227, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_228, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_229, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_230, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_231, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_232, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_233, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_234, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_235, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_236, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_237, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_238, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_239, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_240, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_241, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_242, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_243, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_244, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_245, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_246, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_247, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_248, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_249, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_250, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_251, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_252, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_253, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_254, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_255, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_256, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_257, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_258, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_259, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_260, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_261, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_262, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_263, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_264, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_265, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_266, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_267, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_268, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_269, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_270, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_271, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_272, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_273, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_274, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_275, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_276, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_277, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_278, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_279, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_280, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_281, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_282, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_283, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_284, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_285, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_286, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_287, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_288, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_289, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_290, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_291, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_292, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_293, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_294, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_295, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_296, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_297, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_298, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_299, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_300, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_301, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_302, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_303, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_304, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_305, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_306, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_307, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_308, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_309, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_310, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_311, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_312, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_313, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_314, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_315, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_316, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_317, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_318, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_319, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_320, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_321, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_322, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_323, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_324, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_325, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_326, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_327, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_328, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_329, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_330, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_331, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_332, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_333, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_334, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_335, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_336, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_337, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_338, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_339, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_340, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_341, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_342, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_343, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_344, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_345, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_346, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_347, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_348, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_349, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_350, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_351, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_352, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_353, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_354, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_355, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_356, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_357, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_358, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_359, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_360, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_361, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_362, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_363, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_364, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_365, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_366, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_367, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_368, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_369, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_370, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_371, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_372, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_373, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_374, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_375, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_376, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_377, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_378, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_379, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_380, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_381, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_382, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_383, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_384, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_385, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_386, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_387, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_388, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_389, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_390, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_391, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_392, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_393, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_394, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_395, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_396, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_397, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_398, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_v_399, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_v_399);

