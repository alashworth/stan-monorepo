#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <double_exponential/double_exponential_cdf_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<double, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<double, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;
typedef boost::mpl::vector<fvar<fvar<var> >, double, double, empty, empty, empty> type_ffv_192;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<double>, empty, empty, empty> type_ffv_193;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_194;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_195;
typedef boost::mpl::vector<fvar<fvar<var> >, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_196;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_197;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_198;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_199;

typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_0> AgradCdfDoubleExponential_ffv_0;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_1> AgradCdfDoubleExponential_ffv_1;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_2> AgradCdfDoubleExponential_ffv_2;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_3> AgradCdfDoubleExponential_ffv_3;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_4> AgradCdfDoubleExponential_ffv_4;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_5> AgradCdfDoubleExponential_ffv_5;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_6> AgradCdfDoubleExponential_ffv_6;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_7> AgradCdfDoubleExponential_ffv_7;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_8> AgradCdfDoubleExponential_ffv_8;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_9> AgradCdfDoubleExponential_ffv_9;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_10> AgradCdfDoubleExponential_ffv_10;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_11> AgradCdfDoubleExponential_ffv_11;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_12> AgradCdfDoubleExponential_ffv_12;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_13> AgradCdfDoubleExponential_ffv_13;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_14> AgradCdfDoubleExponential_ffv_14;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_15> AgradCdfDoubleExponential_ffv_15;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_16> AgradCdfDoubleExponential_ffv_16;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_17> AgradCdfDoubleExponential_ffv_17;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_18> AgradCdfDoubleExponential_ffv_18;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_19> AgradCdfDoubleExponential_ffv_19;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_20> AgradCdfDoubleExponential_ffv_20;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_21> AgradCdfDoubleExponential_ffv_21;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_22> AgradCdfDoubleExponential_ffv_22;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_23> AgradCdfDoubleExponential_ffv_23;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_24> AgradCdfDoubleExponential_ffv_24;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_25> AgradCdfDoubleExponential_ffv_25;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_26> AgradCdfDoubleExponential_ffv_26;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_27> AgradCdfDoubleExponential_ffv_27;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_28> AgradCdfDoubleExponential_ffv_28;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_29> AgradCdfDoubleExponential_ffv_29;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_30> AgradCdfDoubleExponential_ffv_30;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_31> AgradCdfDoubleExponential_ffv_31;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_32> AgradCdfDoubleExponential_ffv_32;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_33> AgradCdfDoubleExponential_ffv_33;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_34> AgradCdfDoubleExponential_ffv_34;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_35> AgradCdfDoubleExponential_ffv_35;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_36> AgradCdfDoubleExponential_ffv_36;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_37> AgradCdfDoubleExponential_ffv_37;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_38> AgradCdfDoubleExponential_ffv_38;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_39> AgradCdfDoubleExponential_ffv_39;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_40> AgradCdfDoubleExponential_ffv_40;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_41> AgradCdfDoubleExponential_ffv_41;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_42> AgradCdfDoubleExponential_ffv_42;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_43> AgradCdfDoubleExponential_ffv_43;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_44> AgradCdfDoubleExponential_ffv_44;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_45> AgradCdfDoubleExponential_ffv_45;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_46> AgradCdfDoubleExponential_ffv_46;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_47> AgradCdfDoubleExponential_ffv_47;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_48> AgradCdfDoubleExponential_ffv_48;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_49> AgradCdfDoubleExponential_ffv_49;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_50> AgradCdfDoubleExponential_ffv_50;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_51> AgradCdfDoubleExponential_ffv_51;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_52> AgradCdfDoubleExponential_ffv_52;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_53> AgradCdfDoubleExponential_ffv_53;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_54> AgradCdfDoubleExponential_ffv_54;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_55> AgradCdfDoubleExponential_ffv_55;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_56> AgradCdfDoubleExponential_ffv_56;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_57> AgradCdfDoubleExponential_ffv_57;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_58> AgradCdfDoubleExponential_ffv_58;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_59> AgradCdfDoubleExponential_ffv_59;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_60> AgradCdfDoubleExponential_ffv_60;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_61> AgradCdfDoubleExponential_ffv_61;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_62> AgradCdfDoubleExponential_ffv_62;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_63> AgradCdfDoubleExponential_ffv_63;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_64> AgradCdfDoubleExponential_ffv_64;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_65> AgradCdfDoubleExponential_ffv_65;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_66> AgradCdfDoubleExponential_ffv_66;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_67> AgradCdfDoubleExponential_ffv_67;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_68> AgradCdfDoubleExponential_ffv_68;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_69> AgradCdfDoubleExponential_ffv_69;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_70> AgradCdfDoubleExponential_ffv_70;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_71> AgradCdfDoubleExponential_ffv_71;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_72> AgradCdfDoubleExponential_ffv_72;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_73> AgradCdfDoubleExponential_ffv_73;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_74> AgradCdfDoubleExponential_ffv_74;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_75> AgradCdfDoubleExponential_ffv_75;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_76> AgradCdfDoubleExponential_ffv_76;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_77> AgradCdfDoubleExponential_ffv_77;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_78> AgradCdfDoubleExponential_ffv_78;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_79> AgradCdfDoubleExponential_ffv_79;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_80> AgradCdfDoubleExponential_ffv_80;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_81> AgradCdfDoubleExponential_ffv_81;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_82> AgradCdfDoubleExponential_ffv_82;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_83> AgradCdfDoubleExponential_ffv_83;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_84> AgradCdfDoubleExponential_ffv_84;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_85> AgradCdfDoubleExponential_ffv_85;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_86> AgradCdfDoubleExponential_ffv_86;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_87> AgradCdfDoubleExponential_ffv_87;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_88> AgradCdfDoubleExponential_ffv_88;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_89> AgradCdfDoubleExponential_ffv_89;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_90> AgradCdfDoubleExponential_ffv_90;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_91> AgradCdfDoubleExponential_ffv_91;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_92> AgradCdfDoubleExponential_ffv_92;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_93> AgradCdfDoubleExponential_ffv_93;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_94> AgradCdfDoubleExponential_ffv_94;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_95> AgradCdfDoubleExponential_ffv_95;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_96> AgradCdfDoubleExponential_ffv_96;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_97> AgradCdfDoubleExponential_ffv_97;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_98> AgradCdfDoubleExponential_ffv_98;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_99> AgradCdfDoubleExponential_ffv_99;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_100> AgradCdfDoubleExponential_ffv_100;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_101> AgradCdfDoubleExponential_ffv_101;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_102> AgradCdfDoubleExponential_ffv_102;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_103> AgradCdfDoubleExponential_ffv_103;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_104> AgradCdfDoubleExponential_ffv_104;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_105> AgradCdfDoubleExponential_ffv_105;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_106> AgradCdfDoubleExponential_ffv_106;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_107> AgradCdfDoubleExponential_ffv_107;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_108> AgradCdfDoubleExponential_ffv_108;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_109> AgradCdfDoubleExponential_ffv_109;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_110> AgradCdfDoubleExponential_ffv_110;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_111> AgradCdfDoubleExponential_ffv_111;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_112> AgradCdfDoubleExponential_ffv_112;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_113> AgradCdfDoubleExponential_ffv_113;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_114> AgradCdfDoubleExponential_ffv_114;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_115> AgradCdfDoubleExponential_ffv_115;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_116> AgradCdfDoubleExponential_ffv_116;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_117> AgradCdfDoubleExponential_ffv_117;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_118> AgradCdfDoubleExponential_ffv_118;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_119> AgradCdfDoubleExponential_ffv_119;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_120> AgradCdfDoubleExponential_ffv_120;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_121> AgradCdfDoubleExponential_ffv_121;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_122> AgradCdfDoubleExponential_ffv_122;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_123> AgradCdfDoubleExponential_ffv_123;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_124> AgradCdfDoubleExponential_ffv_124;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_125> AgradCdfDoubleExponential_ffv_125;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_126> AgradCdfDoubleExponential_ffv_126;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_127> AgradCdfDoubleExponential_ffv_127;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_128> AgradCdfDoubleExponential_ffv_128;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_129> AgradCdfDoubleExponential_ffv_129;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_130> AgradCdfDoubleExponential_ffv_130;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_131> AgradCdfDoubleExponential_ffv_131;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_132> AgradCdfDoubleExponential_ffv_132;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_133> AgradCdfDoubleExponential_ffv_133;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_134> AgradCdfDoubleExponential_ffv_134;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_135> AgradCdfDoubleExponential_ffv_135;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_136> AgradCdfDoubleExponential_ffv_136;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_137> AgradCdfDoubleExponential_ffv_137;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_138> AgradCdfDoubleExponential_ffv_138;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_139> AgradCdfDoubleExponential_ffv_139;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_140> AgradCdfDoubleExponential_ffv_140;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_141> AgradCdfDoubleExponential_ffv_141;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_142> AgradCdfDoubleExponential_ffv_142;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_143> AgradCdfDoubleExponential_ffv_143;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_144> AgradCdfDoubleExponential_ffv_144;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_145> AgradCdfDoubleExponential_ffv_145;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_146> AgradCdfDoubleExponential_ffv_146;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_147> AgradCdfDoubleExponential_ffv_147;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_148> AgradCdfDoubleExponential_ffv_148;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_149> AgradCdfDoubleExponential_ffv_149;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_150> AgradCdfDoubleExponential_ffv_150;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_151> AgradCdfDoubleExponential_ffv_151;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_152> AgradCdfDoubleExponential_ffv_152;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_153> AgradCdfDoubleExponential_ffv_153;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_154> AgradCdfDoubleExponential_ffv_154;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_155> AgradCdfDoubleExponential_ffv_155;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_156> AgradCdfDoubleExponential_ffv_156;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_157> AgradCdfDoubleExponential_ffv_157;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_158> AgradCdfDoubleExponential_ffv_158;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_159> AgradCdfDoubleExponential_ffv_159;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_160> AgradCdfDoubleExponential_ffv_160;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_161> AgradCdfDoubleExponential_ffv_161;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_162> AgradCdfDoubleExponential_ffv_162;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_163> AgradCdfDoubleExponential_ffv_163;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_164> AgradCdfDoubleExponential_ffv_164;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_165> AgradCdfDoubleExponential_ffv_165;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_166> AgradCdfDoubleExponential_ffv_166;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_167> AgradCdfDoubleExponential_ffv_167;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_168> AgradCdfDoubleExponential_ffv_168;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_169> AgradCdfDoubleExponential_ffv_169;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_170> AgradCdfDoubleExponential_ffv_170;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_171> AgradCdfDoubleExponential_ffv_171;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_172> AgradCdfDoubleExponential_ffv_172;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_173> AgradCdfDoubleExponential_ffv_173;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_174> AgradCdfDoubleExponential_ffv_174;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_175> AgradCdfDoubleExponential_ffv_175;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_176> AgradCdfDoubleExponential_ffv_176;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_177> AgradCdfDoubleExponential_ffv_177;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_178> AgradCdfDoubleExponential_ffv_178;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_179> AgradCdfDoubleExponential_ffv_179;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_180> AgradCdfDoubleExponential_ffv_180;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_181> AgradCdfDoubleExponential_ffv_181;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_182> AgradCdfDoubleExponential_ffv_182;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_183> AgradCdfDoubleExponential_ffv_183;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_184> AgradCdfDoubleExponential_ffv_184;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_185> AgradCdfDoubleExponential_ffv_185;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_186> AgradCdfDoubleExponential_ffv_186;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_187> AgradCdfDoubleExponential_ffv_187;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_188> AgradCdfDoubleExponential_ffv_188;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_189> AgradCdfDoubleExponential_ffv_189;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_190> AgradCdfDoubleExponential_ffv_190;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_191> AgradCdfDoubleExponential_ffv_191;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_192> AgradCdfDoubleExponential_ffv_192;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_193> AgradCdfDoubleExponential_ffv_193;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_194> AgradCdfDoubleExponential_ffv_194;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_195> AgradCdfDoubleExponential_ffv_195;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_196> AgradCdfDoubleExponential_ffv_196;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_197> AgradCdfDoubleExponential_ffv_197;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_198> AgradCdfDoubleExponential_ffv_198;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_ffv_199> AgradCdfDoubleExponential_ffv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_0, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_1, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_2, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_3, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_4, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_5, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_6, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_7, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_8, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_9, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_10, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_11, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_12, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_13, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_14, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_15, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_16, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_17, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_18, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_19, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_20, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_21, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_22, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_23, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_24, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_25, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_26, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_27, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_28, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_29, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_30, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_31, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_32, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_33, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_34, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_35, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_36, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_37, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_38, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_39, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_40, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_41, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_42, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_43, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_44, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_45, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_46, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_47, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_48, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_49, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_50, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_51, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_52, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_53, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_54, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_55, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_56, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_57, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_58, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_59, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_60, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_61, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_62, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_63, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_64, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_65, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_66, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_67, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_68, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_69, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_70, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_71, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_72, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_73, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_74, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_75, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_76, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_77, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_78, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_79, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_80, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_81, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_82, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_83, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_84, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_85, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_86, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_87, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_88, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_89, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_90, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_91, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_92, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_93, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_94, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_95, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_96, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_97, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_98, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_99, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_100, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_101, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_102, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_103, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_104, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_105, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_106, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_107, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_108, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_109, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_110, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_111, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_112, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_113, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_114, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_115, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_116, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_117, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_118, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_119, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_120, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_121, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_122, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_123, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_124, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_125, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_126, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_127, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_128, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_129, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_130, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_131, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_132, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_133, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_134, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_135, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_136, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_137, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_138, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_139, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_140, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_141, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_142, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_143, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_144, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_145, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_146, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_147, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_148, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_149, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_150, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_151, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_152, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_153, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_154, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_155, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_156, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_157, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_158, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_159, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_160, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_161, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_162, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_163, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_164, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_165, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_166, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_167, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_168, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_169, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_170, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_171, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_172, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_173, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_174, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_175, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_176, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_177, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_178, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_179, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_180, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_181, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_182, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_183, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_184, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_185, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_186, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_187, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_188, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_189, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_190, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_191, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_192, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_193, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_194, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_195, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_196, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_197, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_198, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_ffv_199, AgradCdfTestFixture, AgradCdfDoubleExponential_ffv_199);

