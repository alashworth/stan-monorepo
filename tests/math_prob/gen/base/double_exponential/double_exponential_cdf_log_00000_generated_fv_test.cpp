#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <double_exponential/double_exponential_cdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<var>, empty, empty, empty> type_fv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_15;
typedef boost::mpl::vector<double, fvar<var>, double, empty, empty, empty> type_fv_16;
typedef boost::mpl::vector<double, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_17;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_18;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_19;
typedef boost::mpl::vector<double, fvar<var>, fvar<var>, empty, empty, empty> type_fv_20;
typedef boost::mpl::vector<double, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_21;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_22;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_23;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_24;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_25;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_26;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_27;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_28;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_29;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_30;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<var>, empty, empty, empty> type_fv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, double, empty, empty, empty> type_fv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty, empty> type_fv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty, empty> type_fv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty, empty> type_fv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty, empty> type_fv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_191;
typedef boost::mpl::vector<fvar<var>, double, double, empty, empty, empty> type_fv_192;
typedef boost::mpl::vector<fvar<var>, double, std::vector<double>, empty, empty, empty> type_fv_193;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_194;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_195;
typedef boost::mpl::vector<fvar<var>, double, fvar<var>, empty, empty, empty> type_fv_196;
typedef boost::mpl::vector<fvar<var>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_197;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_198;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_199;

typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_0> AgradCdfLogDoubleExponential_fv_0;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_1> AgradCdfLogDoubleExponential_fv_1;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_2> AgradCdfLogDoubleExponential_fv_2;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_3> AgradCdfLogDoubleExponential_fv_3;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_4> AgradCdfLogDoubleExponential_fv_4;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_5> AgradCdfLogDoubleExponential_fv_5;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_6> AgradCdfLogDoubleExponential_fv_6;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_7> AgradCdfLogDoubleExponential_fv_7;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_8> AgradCdfLogDoubleExponential_fv_8;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_9> AgradCdfLogDoubleExponential_fv_9;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_10> AgradCdfLogDoubleExponential_fv_10;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_11> AgradCdfLogDoubleExponential_fv_11;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_12> AgradCdfLogDoubleExponential_fv_12;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_13> AgradCdfLogDoubleExponential_fv_13;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_14> AgradCdfLogDoubleExponential_fv_14;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_15> AgradCdfLogDoubleExponential_fv_15;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_16> AgradCdfLogDoubleExponential_fv_16;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_17> AgradCdfLogDoubleExponential_fv_17;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_18> AgradCdfLogDoubleExponential_fv_18;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_19> AgradCdfLogDoubleExponential_fv_19;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_20> AgradCdfLogDoubleExponential_fv_20;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_21> AgradCdfLogDoubleExponential_fv_21;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_22> AgradCdfLogDoubleExponential_fv_22;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_23> AgradCdfLogDoubleExponential_fv_23;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_24> AgradCdfLogDoubleExponential_fv_24;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_25> AgradCdfLogDoubleExponential_fv_25;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_26> AgradCdfLogDoubleExponential_fv_26;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_27> AgradCdfLogDoubleExponential_fv_27;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_28> AgradCdfLogDoubleExponential_fv_28;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_29> AgradCdfLogDoubleExponential_fv_29;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_30> AgradCdfLogDoubleExponential_fv_30;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_31> AgradCdfLogDoubleExponential_fv_31;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_32> AgradCdfLogDoubleExponential_fv_32;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_33> AgradCdfLogDoubleExponential_fv_33;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_34> AgradCdfLogDoubleExponential_fv_34;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_35> AgradCdfLogDoubleExponential_fv_35;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_36> AgradCdfLogDoubleExponential_fv_36;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_37> AgradCdfLogDoubleExponential_fv_37;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_38> AgradCdfLogDoubleExponential_fv_38;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_39> AgradCdfLogDoubleExponential_fv_39;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_40> AgradCdfLogDoubleExponential_fv_40;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_41> AgradCdfLogDoubleExponential_fv_41;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_42> AgradCdfLogDoubleExponential_fv_42;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_43> AgradCdfLogDoubleExponential_fv_43;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_44> AgradCdfLogDoubleExponential_fv_44;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_45> AgradCdfLogDoubleExponential_fv_45;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_46> AgradCdfLogDoubleExponential_fv_46;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_47> AgradCdfLogDoubleExponential_fv_47;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_48> AgradCdfLogDoubleExponential_fv_48;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_49> AgradCdfLogDoubleExponential_fv_49;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_50> AgradCdfLogDoubleExponential_fv_50;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_51> AgradCdfLogDoubleExponential_fv_51;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_52> AgradCdfLogDoubleExponential_fv_52;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_53> AgradCdfLogDoubleExponential_fv_53;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_54> AgradCdfLogDoubleExponential_fv_54;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_55> AgradCdfLogDoubleExponential_fv_55;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_56> AgradCdfLogDoubleExponential_fv_56;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_57> AgradCdfLogDoubleExponential_fv_57;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_58> AgradCdfLogDoubleExponential_fv_58;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_59> AgradCdfLogDoubleExponential_fv_59;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_60> AgradCdfLogDoubleExponential_fv_60;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_61> AgradCdfLogDoubleExponential_fv_61;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_62> AgradCdfLogDoubleExponential_fv_62;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_63> AgradCdfLogDoubleExponential_fv_63;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_64> AgradCdfLogDoubleExponential_fv_64;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_65> AgradCdfLogDoubleExponential_fv_65;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_66> AgradCdfLogDoubleExponential_fv_66;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_67> AgradCdfLogDoubleExponential_fv_67;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_68> AgradCdfLogDoubleExponential_fv_68;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_69> AgradCdfLogDoubleExponential_fv_69;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_70> AgradCdfLogDoubleExponential_fv_70;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_71> AgradCdfLogDoubleExponential_fv_71;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_72> AgradCdfLogDoubleExponential_fv_72;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_73> AgradCdfLogDoubleExponential_fv_73;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_74> AgradCdfLogDoubleExponential_fv_74;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_75> AgradCdfLogDoubleExponential_fv_75;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_76> AgradCdfLogDoubleExponential_fv_76;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_77> AgradCdfLogDoubleExponential_fv_77;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_78> AgradCdfLogDoubleExponential_fv_78;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_79> AgradCdfLogDoubleExponential_fv_79;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_80> AgradCdfLogDoubleExponential_fv_80;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_81> AgradCdfLogDoubleExponential_fv_81;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_82> AgradCdfLogDoubleExponential_fv_82;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_83> AgradCdfLogDoubleExponential_fv_83;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_84> AgradCdfLogDoubleExponential_fv_84;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_85> AgradCdfLogDoubleExponential_fv_85;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_86> AgradCdfLogDoubleExponential_fv_86;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_87> AgradCdfLogDoubleExponential_fv_87;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_88> AgradCdfLogDoubleExponential_fv_88;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_89> AgradCdfLogDoubleExponential_fv_89;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_90> AgradCdfLogDoubleExponential_fv_90;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_91> AgradCdfLogDoubleExponential_fv_91;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_92> AgradCdfLogDoubleExponential_fv_92;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_93> AgradCdfLogDoubleExponential_fv_93;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_94> AgradCdfLogDoubleExponential_fv_94;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_95> AgradCdfLogDoubleExponential_fv_95;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_96> AgradCdfLogDoubleExponential_fv_96;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_97> AgradCdfLogDoubleExponential_fv_97;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_98> AgradCdfLogDoubleExponential_fv_98;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_99> AgradCdfLogDoubleExponential_fv_99;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_100> AgradCdfLogDoubleExponential_fv_100;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_101> AgradCdfLogDoubleExponential_fv_101;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_102> AgradCdfLogDoubleExponential_fv_102;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_103> AgradCdfLogDoubleExponential_fv_103;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_104> AgradCdfLogDoubleExponential_fv_104;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_105> AgradCdfLogDoubleExponential_fv_105;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_106> AgradCdfLogDoubleExponential_fv_106;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_107> AgradCdfLogDoubleExponential_fv_107;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_108> AgradCdfLogDoubleExponential_fv_108;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_109> AgradCdfLogDoubleExponential_fv_109;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_110> AgradCdfLogDoubleExponential_fv_110;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_111> AgradCdfLogDoubleExponential_fv_111;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_112> AgradCdfLogDoubleExponential_fv_112;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_113> AgradCdfLogDoubleExponential_fv_113;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_114> AgradCdfLogDoubleExponential_fv_114;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_115> AgradCdfLogDoubleExponential_fv_115;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_116> AgradCdfLogDoubleExponential_fv_116;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_117> AgradCdfLogDoubleExponential_fv_117;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_118> AgradCdfLogDoubleExponential_fv_118;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_119> AgradCdfLogDoubleExponential_fv_119;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_120> AgradCdfLogDoubleExponential_fv_120;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_121> AgradCdfLogDoubleExponential_fv_121;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_122> AgradCdfLogDoubleExponential_fv_122;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_123> AgradCdfLogDoubleExponential_fv_123;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_124> AgradCdfLogDoubleExponential_fv_124;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_125> AgradCdfLogDoubleExponential_fv_125;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_126> AgradCdfLogDoubleExponential_fv_126;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_127> AgradCdfLogDoubleExponential_fv_127;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_128> AgradCdfLogDoubleExponential_fv_128;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_129> AgradCdfLogDoubleExponential_fv_129;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_130> AgradCdfLogDoubleExponential_fv_130;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_131> AgradCdfLogDoubleExponential_fv_131;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_132> AgradCdfLogDoubleExponential_fv_132;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_133> AgradCdfLogDoubleExponential_fv_133;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_134> AgradCdfLogDoubleExponential_fv_134;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_135> AgradCdfLogDoubleExponential_fv_135;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_136> AgradCdfLogDoubleExponential_fv_136;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_137> AgradCdfLogDoubleExponential_fv_137;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_138> AgradCdfLogDoubleExponential_fv_138;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_139> AgradCdfLogDoubleExponential_fv_139;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_140> AgradCdfLogDoubleExponential_fv_140;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_141> AgradCdfLogDoubleExponential_fv_141;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_142> AgradCdfLogDoubleExponential_fv_142;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_143> AgradCdfLogDoubleExponential_fv_143;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_144> AgradCdfLogDoubleExponential_fv_144;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_145> AgradCdfLogDoubleExponential_fv_145;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_146> AgradCdfLogDoubleExponential_fv_146;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_147> AgradCdfLogDoubleExponential_fv_147;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_148> AgradCdfLogDoubleExponential_fv_148;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_149> AgradCdfLogDoubleExponential_fv_149;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_150> AgradCdfLogDoubleExponential_fv_150;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_151> AgradCdfLogDoubleExponential_fv_151;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_152> AgradCdfLogDoubleExponential_fv_152;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_153> AgradCdfLogDoubleExponential_fv_153;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_154> AgradCdfLogDoubleExponential_fv_154;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_155> AgradCdfLogDoubleExponential_fv_155;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_156> AgradCdfLogDoubleExponential_fv_156;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_157> AgradCdfLogDoubleExponential_fv_157;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_158> AgradCdfLogDoubleExponential_fv_158;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_159> AgradCdfLogDoubleExponential_fv_159;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_160> AgradCdfLogDoubleExponential_fv_160;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_161> AgradCdfLogDoubleExponential_fv_161;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_162> AgradCdfLogDoubleExponential_fv_162;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_163> AgradCdfLogDoubleExponential_fv_163;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_164> AgradCdfLogDoubleExponential_fv_164;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_165> AgradCdfLogDoubleExponential_fv_165;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_166> AgradCdfLogDoubleExponential_fv_166;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_167> AgradCdfLogDoubleExponential_fv_167;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_168> AgradCdfLogDoubleExponential_fv_168;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_169> AgradCdfLogDoubleExponential_fv_169;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_170> AgradCdfLogDoubleExponential_fv_170;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_171> AgradCdfLogDoubleExponential_fv_171;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_172> AgradCdfLogDoubleExponential_fv_172;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_173> AgradCdfLogDoubleExponential_fv_173;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_174> AgradCdfLogDoubleExponential_fv_174;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_175> AgradCdfLogDoubleExponential_fv_175;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_176> AgradCdfLogDoubleExponential_fv_176;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_177> AgradCdfLogDoubleExponential_fv_177;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_178> AgradCdfLogDoubleExponential_fv_178;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_179> AgradCdfLogDoubleExponential_fv_179;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_180> AgradCdfLogDoubleExponential_fv_180;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_181> AgradCdfLogDoubleExponential_fv_181;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_182> AgradCdfLogDoubleExponential_fv_182;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_183> AgradCdfLogDoubleExponential_fv_183;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_184> AgradCdfLogDoubleExponential_fv_184;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_185> AgradCdfLogDoubleExponential_fv_185;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_186> AgradCdfLogDoubleExponential_fv_186;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_187> AgradCdfLogDoubleExponential_fv_187;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_188> AgradCdfLogDoubleExponential_fv_188;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_189> AgradCdfLogDoubleExponential_fv_189;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_190> AgradCdfLogDoubleExponential_fv_190;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_191> AgradCdfLogDoubleExponential_fv_191;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_192> AgradCdfLogDoubleExponential_fv_192;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_193> AgradCdfLogDoubleExponential_fv_193;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_194> AgradCdfLogDoubleExponential_fv_194;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_195> AgradCdfLogDoubleExponential_fv_195;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_196> AgradCdfLogDoubleExponential_fv_196;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_197> AgradCdfLogDoubleExponential_fv_197;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_198> AgradCdfLogDoubleExponential_fv_198;
typedef boost::mpl::vector<AgradCdfLogDoubleExponential, type_fv_199> AgradCdfLogDoubleExponential_fv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_0, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_1, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_2, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_3, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_4, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_5, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_6, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_7, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_8, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_9, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_10, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_11, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_12, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_13, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_14, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_15, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_16, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_17, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_18, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_19, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_20, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_21, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_22, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_23, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_24, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_25, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_26, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_27, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_28, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_29, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_30, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_31, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_32, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_33, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_34, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_35, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_36, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_37, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_38, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_39, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_40, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_41, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_42, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_43, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_44, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_45, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_46, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_47, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_48, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_49, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_50, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_51, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_52, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_53, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_54, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_55, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_56, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_57, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_58, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_59, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_60, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_61, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_62, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_63, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_64, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_65, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_66, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_67, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_68, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_69, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_70, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_71, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_72, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_73, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_74, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_75, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_76, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_77, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_78, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_79, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_80, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_81, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_82, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_83, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_84, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_85, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_86, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_87, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_88, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_89, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_90, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_91, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_92, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_93, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_94, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_95, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_96, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_97, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_98, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_99, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_100, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_101, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_102, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_103, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_104, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_105, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_106, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_107, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_108, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_109, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_110, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_111, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_112, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_113, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_114, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_115, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_116, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_117, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_118, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_119, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_120, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_121, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_122, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_123, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_124, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_125, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_126, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_127, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_128, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_129, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_130, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_131, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_132, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_133, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_134, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_135, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_136, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_137, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_138, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_139, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_140, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_141, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_142, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_143, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_144, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_145, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_146, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_147, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_148, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_149, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_150, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_151, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_152, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_153, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_154, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_155, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_156, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_157, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_158, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_159, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_160, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_161, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_162, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_163, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_164, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_165, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_166, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_167, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_168, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_169, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_170, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_171, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_172, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_173, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_174, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_175, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_176, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_177, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_178, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_179, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_180, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_181, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_182, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_183, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_184, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_185, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_186, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_187, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_188, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_189, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_190, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_191, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_192, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_193, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_194, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_195, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_196, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_197, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_198, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogDoubleExponential_fv_199, AgradCdfLogTestFixture, AgradCdfLogDoubleExponential_fv_199);

