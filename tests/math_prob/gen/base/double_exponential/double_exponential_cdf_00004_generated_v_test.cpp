#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/double_exponential/double_exponential_cdf_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_400;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_401;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_402;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_403;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_404;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_405;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_406;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_407;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_408;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_409;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_410;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_411;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_412;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_413;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_414;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_415;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, double, empty, empty, empty> type_v_416;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, std::vector<double>, empty, empty, empty> type_v_417;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_418;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_419;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, var, empty, empty, empty> type_v_420;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, std::vector<var>, empty, empty, empty> type_v_421;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_422;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_423;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, double, empty, empty, empty> type_v_424;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_425;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_426;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_427;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, var, empty, empty, empty> type_v_428;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_429;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_430;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_431;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_432;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_433;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_434;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_435;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_436;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_437;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_438;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_439;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_440;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_441;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_442;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_443;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_444;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_445;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_446;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_447;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_v_448;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_v_449;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_450;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_451;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, var, empty, empty, empty> type_v_452;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, std::vector<var>, empty, empty, empty> type_v_453;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_454;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_455;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_v_456;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_457;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_458;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_459;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty, empty> type_v_460;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_461;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_462;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_463;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_464;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_465;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_466;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_467;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_468;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_469;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_470;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_471;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_472;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_473;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_474;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_475;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_476;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_477;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_478;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_479;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, double, empty, empty, empty> type_v_480;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty, empty> type_v_481;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_482;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_483;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, var, empty, empty, empty> type_v_484;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty, empty> type_v_485;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_486;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_487;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty, empty> type_v_488;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_489;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_490;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_491;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty, empty> type_v_492;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_493;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_494;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_495;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_496;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_497;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_498;
typedef boost::mpl::vector<Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_499;

typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_400> AgradCdfDoubleExponential_v_400;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_401> AgradCdfDoubleExponential_v_401;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_402> AgradCdfDoubleExponential_v_402;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_403> AgradCdfDoubleExponential_v_403;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_404> AgradCdfDoubleExponential_v_404;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_405> AgradCdfDoubleExponential_v_405;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_406> AgradCdfDoubleExponential_v_406;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_407> AgradCdfDoubleExponential_v_407;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_408> AgradCdfDoubleExponential_v_408;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_409> AgradCdfDoubleExponential_v_409;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_410> AgradCdfDoubleExponential_v_410;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_411> AgradCdfDoubleExponential_v_411;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_412> AgradCdfDoubleExponential_v_412;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_413> AgradCdfDoubleExponential_v_413;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_414> AgradCdfDoubleExponential_v_414;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_415> AgradCdfDoubleExponential_v_415;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_416> AgradCdfDoubleExponential_v_416;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_417> AgradCdfDoubleExponential_v_417;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_418> AgradCdfDoubleExponential_v_418;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_419> AgradCdfDoubleExponential_v_419;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_420> AgradCdfDoubleExponential_v_420;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_421> AgradCdfDoubleExponential_v_421;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_422> AgradCdfDoubleExponential_v_422;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_423> AgradCdfDoubleExponential_v_423;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_424> AgradCdfDoubleExponential_v_424;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_425> AgradCdfDoubleExponential_v_425;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_426> AgradCdfDoubleExponential_v_426;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_427> AgradCdfDoubleExponential_v_427;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_428> AgradCdfDoubleExponential_v_428;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_429> AgradCdfDoubleExponential_v_429;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_430> AgradCdfDoubleExponential_v_430;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_431> AgradCdfDoubleExponential_v_431;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_432> AgradCdfDoubleExponential_v_432;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_433> AgradCdfDoubleExponential_v_433;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_434> AgradCdfDoubleExponential_v_434;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_435> AgradCdfDoubleExponential_v_435;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_436> AgradCdfDoubleExponential_v_436;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_437> AgradCdfDoubleExponential_v_437;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_438> AgradCdfDoubleExponential_v_438;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_439> AgradCdfDoubleExponential_v_439;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_440> AgradCdfDoubleExponential_v_440;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_441> AgradCdfDoubleExponential_v_441;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_442> AgradCdfDoubleExponential_v_442;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_443> AgradCdfDoubleExponential_v_443;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_444> AgradCdfDoubleExponential_v_444;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_445> AgradCdfDoubleExponential_v_445;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_446> AgradCdfDoubleExponential_v_446;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_447> AgradCdfDoubleExponential_v_447;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_448> AgradCdfDoubleExponential_v_448;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_449> AgradCdfDoubleExponential_v_449;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_450> AgradCdfDoubleExponential_v_450;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_451> AgradCdfDoubleExponential_v_451;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_452> AgradCdfDoubleExponential_v_452;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_453> AgradCdfDoubleExponential_v_453;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_454> AgradCdfDoubleExponential_v_454;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_455> AgradCdfDoubleExponential_v_455;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_456> AgradCdfDoubleExponential_v_456;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_457> AgradCdfDoubleExponential_v_457;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_458> AgradCdfDoubleExponential_v_458;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_459> AgradCdfDoubleExponential_v_459;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_460> AgradCdfDoubleExponential_v_460;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_461> AgradCdfDoubleExponential_v_461;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_462> AgradCdfDoubleExponential_v_462;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_463> AgradCdfDoubleExponential_v_463;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_464> AgradCdfDoubleExponential_v_464;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_465> AgradCdfDoubleExponential_v_465;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_466> AgradCdfDoubleExponential_v_466;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_467> AgradCdfDoubleExponential_v_467;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_468> AgradCdfDoubleExponential_v_468;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_469> AgradCdfDoubleExponential_v_469;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_470> AgradCdfDoubleExponential_v_470;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_471> AgradCdfDoubleExponential_v_471;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_472> AgradCdfDoubleExponential_v_472;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_473> AgradCdfDoubleExponential_v_473;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_474> AgradCdfDoubleExponential_v_474;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_475> AgradCdfDoubleExponential_v_475;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_476> AgradCdfDoubleExponential_v_476;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_477> AgradCdfDoubleExponential_v_477;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_478> AgradCdfDoubleExponential_v_478;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_479> AgradCdfDoubleExponential_v_479;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_480> AgradCdfDoubleExponential_v_480;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_481> AgradCdfDoubleExponential_v_481;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_482> AgradCdfDoubleExponential_v_482;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_483> AgradCdfDoubleExponential_v_483;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_484> AgradCdfDoubleExponential_v_484;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_485> AgradCdfDoubleExponential_v_485;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_486> AgradCdfDoubleExponential_v_486;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_487> AgradCdfDoubleExponential_v_487;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_488> AgradCdfDoubleExponential_v_488;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_489> AgradCdfDoubleExponential_v_489;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_490> AgradCdfDoubleExponential_v_490;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_491> AgradCdfDoubleExponential_v_491;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_492> AgradCdfDoubleExponential_v_492;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_493> AgradCdfDoubleExponential_v_493;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_494> AgradCdfDoubleExponential_v_494;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_495> AgradCdfDoubleExponential_v_495;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_496> AgradCdfDoubleExponential_v_496;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_497> AgradCdfDoubleExponential_v_497;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_498> AgradCdfDoubleExponential_v_498;
typedef boost::mpl::vector<AgradCdfDoubleExponential, type_v_499> AgradCdfDoubleExponential_v_499;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_400, AgradCdfTestFixture, AgradCdfDoubleExponential_v_400);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_401, AgradCdfTestFixture, AgradCdfDoubleExponential_v_401);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_402, AgradCdfTestFixture, AgradCdfDoubleExponential_v_402);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_403, AgradCdfTestFixture, AgradCdfDoubleExponential_v_403);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_404, AgradCdfTestFixture, AgradCdfDoubleExponential_v_404);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_405, AgradCdfTestFixture, AgradCdfDoubleExponential_v_405);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_406, AgradCdfTestFixture, AgradCdfDoubleExponential_v_406);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_407, AgradCdfTestFixture, AgradCdfDoubleExponential_v_407);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_408, AgradCdfTestFixture, AgradCdfDoubleExponential_v_408);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_409, AgradCdfTestFixture, AgradCdfDoubleExponential_v_409);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_410, AgradCdfTestFixture, AgradCdfDoubleExponential_v_410);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_411, AgradCdfTestFixture, AgradCdfDoubleExponential_v_411);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_412, AgradCdfTestFixture, AgradCdfDoubleExponential_v_412);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_413, AgradCdfTestFixture, AgradCdfDoubleExponential_v_413);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_414, AgradCdfTestFixture, AgradCdfDoubleExponential_v_414);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_415, AgradCdfTestFixture, AgradCdfDoubleExponential_v_415);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_416, AgradCdfTestFixture, AgradCdfDoubleExponential_v_416);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_417, AgradCdfTestFixture, AgradCdfDoubleExponential_v_417);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_418, AgradCdfTestFixture, AgradCdfDoubleExponential_v_418);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_419, AgradCdfTestFixture, AgradCdfDoubleExponential_v_419);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_420, AgradCdfTestFixture, AgradCdfDoubleExponential_v_420);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_421, AgradCdfTestFixture, AgradCdfDoubleExponential_v_421);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_422, AgradCdfTestFixture, AgradCdfDoubleExponential_v_422);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_423, AgradCdfTestFixture, AgradCdfDoubleExponential_v_423);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_424, AgradCdfTestFixture, AgradCdfDoubleExponential_v_424);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_425, AgradCdfTestFixture, AgradCdfDoubleExponential_v_425);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_426, AgradCdfTestFixture, AgradCdfDoubleExponential_v_426);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_427, AgradCdfTestFixture, AgradCdfDoubleExponential_v_427);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_428, AgradCdfTestFixture, AgradCdfDoubleExponential_v_428);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_429, AgradCdfTestFixture, AgradCdfDoubleExponential_v_429);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_430, AgradCdfTestFixture, AgradCdfDoubleExponential_v_430);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_431, AgradCdfTestFixture, AgradCdfDoubleExponential_v_431);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_432, AgradCdfTestFixture, AgradCdfDoubleExponential_v_432);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_433, AgradCdfTestFixture, AgradCdfDoubleExponential_v_433);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_434, AgradCdfTestFixture, AgradCdfDoubleExponential_v_434);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_435, AgradCdfTestFixture, AgradCdfDoubleExponential_v_435);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_436, AgradCdfTestFixture, AgradCdfDoubleExponential_v_436);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_437, AgradCdfTestFixture, AgradCdfDoubleExponential_v_437);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_438, AgradCdfTestFixture, AgradCdfDoubleExponential_v_438);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_439, AgradCdfTestFixture, AgradCdfDoubleExponential_v_439);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_440, AgradCdfTestFixture, AgradCdfDoubleExponential_v_440);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_441, AgradCdfTestFixture, AgradCdfDoubleExponential_v_441);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_442, AgradCdfTestFixture, AgradCdfDoubleExponential_v_442);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_443, AgradCdfTestFixture, AgradCdfDoubleExponential_v_443);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_444, AgradCdfTestFixture, AgradCdfDoubleExponential_v_444);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_445, AgradCdfTestFixture, AgradCdfDoubleExponential_v_445);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_446, AgradCdfTestFixture, AgradCdfDoubleExponential_v_446);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_447, AgradCdfTestFixture, AgradCdfDoubleExponential_v_447);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_448, AgradCdfTestFixture, AgradCdfDoubleExponential_v_448);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_449, AgradCdfTestFixture, AgradCdfDoubleExponential_v_449);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_450, AgradCdfTestFixture, AgradCdfDoubleExponential_v_450);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_451, AgradCdfTestFixture, AgradCdfDoubleExponential_v_451);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_452, AgradCdfTestFixture, AgradCdfDoubleExponential_v_452);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_453, AgradCdfTestFixture, AgradCdfDoubleExponential_v_453);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_454, AgradCdfTestFixture, AgradCdfDoubleExponential_v_454);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_455, AgradCdfTestFixture, AgradCdfDoubleExponential_v_455);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_456, AgradCdfTestFixture, AgradCdfDoubleExponential_v_456);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_457, AgradCdfTestFixture, AgradCdfDoubleExponential_v_457);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_458, AgradCdfTestFixture, AgradCdfDoubleExponential_v_458);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_459, AgradCdfTestFixture, AgradCdfDoubleExponential_v_459);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_460, AgradCdfTestFixture, AgradCdfDoubleExponential_v_460);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_461, AgradCdfTestFixture, AgradCdfDoubleExponential_v_461);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_462, AgradCdfTestFixture, AgradCdfDoubleExponential_v_462);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_463, AgradCdfTestFixture, AgradCdfDoubleExponential_v_463);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_464, AgradCdfTestFixture, AgradCdfDoubleExponential_v_464);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_465, AgradCdfTestFixture, AgradCdfDoubleExponential_v_465);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_466, AgradCdfTestFixture, AgradCdfDoubleExponential_v_466);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_467, AgradCdfTestFixture, AgradCdfDoubleExponential_v_467);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_468, AgradCdfTestFixture, AgradCdfDoubleExponential_v_468);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_469, AgradCdfTestFixture, AgradCdfDoubleExponential_v_469);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_470, AgradCdfTestFixture, AgradCdfDoubleExponential_v_470);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_471, AgradCdfTestFixture, AgradCdfDoubleExponential_v_471);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_472, AgradCdfTestFixture, AgradCdfDoubleExponential_v_472);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_473, AgradCdfTestFixture, AgradCdfDoubleExponential_v_473);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_474, AgradCdfTestFixture, AgradCdfDoubleExponential_v_474);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_475, AgradCdfTestFixture, AgradCdfDoubleExponential_v_475);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_476, AgradCdfTestFixture, AgradCdfDoubleExponential_v_476);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_477, AgradCdfTestFixture, AgradCdfDoubleExponential_v_477);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_478, AgradCdfTestFixture, AgradCdfDoubleExponential_v_478);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_479, AgradCdfTestFixture, AgradCdfDoubleExponential_v_479);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_480, AgradCdfTestFixture, AgradCdfDoubleExponential_v_480);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_481, AgradCdfTestFixture, AgradCdfDoubleExponential_v_481);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_482, AgradCdfTestFixture, AgradCdfDoubleExponential_v_482);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_483, AgradCdfTestFixture, AgradCdfDoubleExponential_v_483);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_484, AgradCdfTestFixture, AgradCdfDoubleExponential_v_484);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_485, AgradCdfTestFixture, AgradCdfDoubleExponential_v_485);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_486, AgradCdfTestFixture, AgradCdfDoubleExponential_v_486);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_487, AgradCdfTestFixture, AgradCdfDoubleExponential_v_487);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_488, AgradCdfTestFixture, AgradCdfDoubleExponential_v_488);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_489, AgradCdfTestFixture, AgradCdfDoubleExponential_v_489);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_490, AgradCdfTestFixture, AgradCdfDoubleExponential_v_490);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_491, AgradCdfTestFixture, AgradCdfDoubleExponential_v_491);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_492, AgradCdfTestFixture, AgradCdfDoubleExponential_v_492);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_493, AgradCdfTestFixture, AgradCdfDoubleExponential_v_493);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_494, AgradCdfTestFixture, AgradCdfDoubleExponential_v_494);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_495, AgradCdfTestFixture, AgradCdfDoubleExponential_v_495);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_496, AgradCdfTestFixture, AgradCdfDoubleExponential_v_496);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_497, AgradCdfTestFixture, AgradCdfDoubleExponential_v_497);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_498, AgradCdfTestFixture, AgradCdfDoubleExponential_v_498);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfDoubleExponential_v_499, AgradCdfTestFixture, AgradCdfDoubleExponential_v_499);

