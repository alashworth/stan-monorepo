#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <double_exponential/double_exponential_ccdf_log_test.hpp>

typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_v_200;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_201;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_202;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_203;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, var, empty, empty, empty> type_v_204;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_205;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_206;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_207;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_208;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_209;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_210;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_211;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_212;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_213;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_214;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_215;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_216;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_217;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_218;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_219;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_220;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_221;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_222;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_223;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, double, empty, empty, empty> type_v_224;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, std::vector<double>, empty, empty, empty> type_v_225;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_226;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_227;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, var, empty, empty, empty> type_v_228;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, std::vector<var>, empty, empty, empty> type_v_229;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_230;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_231;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, double, empty, empty, empty> type_v_232;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_233;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_234;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_235;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, var, empty, empty, empty> type_v_236;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_237;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_238;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_239;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_240;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_241;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_242;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_243;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_244;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_245;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_246;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_247;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_248;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_249;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_250;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_251;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_252;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_253;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_254;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_255;
typedef boost::mpl::vector<var, double, double, empty, empty, empty> type_v_256;
typedef boost::mpl::vector<var, double, std::vector<double>, empty, empty, empty> type_v_257;
typedef boost::mpl::vector<var, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_258;
typedef boost::mpl::vector<var, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_259;
typedef boost::mpl::vector<var, double, var, empty, empty, empty> type_v_260;
typedef boost::mpl::vector<var, double, std::vector<var>, empty, empty, empty> type_v_261;
typedef boost::mpl::vector<var, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_262;
typedef boost::mpl::vector<var, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_263;
typedef boost::mpl::vector<var, std::vector<double>, double, empty, empty, empty> type_v_264;
typedef boost::mpl::vector<var, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_265;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_266;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_267;
typedef boost::mpl::vector<var, std::vector<double>, var, empty, empty, empty> type_v_268;
typedef boost::mpl::vector<var, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_269;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_270;
typedef boost::mpl::vector<var, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_271;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_272;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_273;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_274;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_275;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_276;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_277;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_278;
typedef boost::mpl::vector<var, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_279;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_280;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_281;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_282;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_283;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_284;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_285;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_286;
typedef boost::mpl::vector<var, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_287;
typedef boost::mpl::vector<var, var, double, empty, empty, empty> type_v_288;
typedef boost::mpl::vector<var, var, std::vector<double>, empty, empty, empty> type_v_289;
typedef boost::mpl::vector<var, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_290;
typedef boost::mpl::vector<var, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_291;
typedef boost::mpl::vector<var, var, var, empty, empty, empty> type_v_292;
typedef boost::mpl::vector<var, var, std::vector<var>, empty, empty, empty> type_v_293;
typedef boost::mpl::vector<var, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_294;
typedef boost::mpl::vector<var, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_295;
typedef boost::mpl::vector<var, std::vector<var>, double, empty, empty, empty> type_v_296;
typedef boost::mpl::vector<var, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_297;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_298;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_299;
typedef boost::mpl::vector<var, std::vector<var>, var, empty, empty, empty> type_v_300;
typedef boost::mpl::vector<var, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_301;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_302;
typedef boost::mpl::vector<var, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_303;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_304;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_305;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_306;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_307;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_308;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_309;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_310;
typedef boost::mpl::vector<var, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_311;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_312;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_313;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_314;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_315;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_316;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_317;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_318;
typedef boost::mpl::vector<var, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_319;
typedef boost::mpl::vector<std::vector<var>, double, double, empty, empty, empty> type_v_320;
typedef boost::mpl::vector<std::vector<var>, double, std::vector<double>, empty, empty, empty> type_v_321;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_322;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_323;
typedef boost::mpl::vector<std::vector<var>, double, var, empty, empty, empty> type_v_324;
typedef boost::mpl::vector<std::vector<var>, double, std::vector<var>, empty, empty, empty> type_v_325;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_326;
typedef boost::mpl::vector<std::vector<var>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_327;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, double, empty, empty, empty> type_v_328;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_329;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_330;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_331;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, var, empty, empty, empty> type_v_332;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_333;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_334;
typedef boost::mpl::vector<std::vector<var>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_335;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_336;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_337;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_338;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_339;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_340;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_341;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_342;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_343;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_344;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_345;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_346;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_347;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_348;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_349;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_350;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_351;
typedef boost::mpl::vector<std::vector<var>, var, double, empty, empty, empty> type_v_352;
typedef boost::mpl::vector<std::vector<var>, var, std::vector<double>, empty, empty, empty> type_v_353;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_354;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_355;
typedef boost::mpl::vector<std::vector<var>, var, var, empty, empty, empty> type_v_356;
typedef boost::mpl::vector<std::vector<var>, var, std::vector<var>, empty, empty, empty> type_v_357;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_358;
typedef boost::mpl::vector<std::vector<var>, var, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_359;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, double, empty, empty, empty> type_v_360;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, std::vector<double>, empty, empty, empty> type_v_361;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_362;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_363;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, var, empty, empty, empty> type_v_364;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, std::vector<var>, empty, empty, empty> type_v_365;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_366;
typedef boost::mpl::vector<std::vector<var>, std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_367;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, double, empty, empty, empty> type_v_368;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_v_369;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_370;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_371;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, var, empty, empty, empty> type_v_372;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<var>, empty, empty, empty> type_v_373;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_374;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, Eigen::Dynamic, 1>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_375;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, double, empty, empty, empty> type_v_376;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_v_377;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_378;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_379;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, var, empty, empty, empty> type_v_380;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, std::vector<var>, empty, empty, empty> type_v_381;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_382;
typedef boost::mpl::vector<std::vector<var>, Eigen::Matrix<var, 1, Eigen::Dynamic>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_383;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_v_384;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_v_385;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_386;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_387;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, var, empty, empty, empty> type_v_388;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, std::vector<var>, empty, empty, empty> type_v_389;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_390;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, double, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_391;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_v_392;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_v_393;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_v_394;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_v_395;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, var, empty, empty, empty> type_v_396;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, std::vector<var>, empty, empty, empty> type_v_397;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, Eigen::Dynamic, 1>, empty, empty, empty> type_v_398;
typedef boost::mpl::vector<Eigen::Matrix<var, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<var, 1, Eigen::Dynamic>, empty, empty, empty> type_v_399;

typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_200> AgradCcdfLogDoubleExponential_v_200;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_201> AgradCcdfLogDoubleExponential_v_201;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_202> AgradCcdfLogDoubleExponential_v_202;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_203> AgradCcdfLogDoubleExponential_v_203;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_204> AgradCcdfLogDoubleExponential_v_204;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_205> AgradCcdfLogDoubleExponential_v_205;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_206> AgradCcdfLogDoubleExponential_v_206;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_207> AgradCcdfLogDoubleExponential_v_207;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_208> AgradCcdfLogDoubleExponential_v_208;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_209> AgradCcdfLogDoubleExponential_v_209;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_210> AgradCcdfLogDoubleExponential_v_210;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_211> AgradCcdfLogDoubleExponential_v_211;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_212> AgradCcdfLogDoubleExponential_v_212;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_213> AgradCcdfLogDoubleExponential_v_213;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_214> AgradCcdfLogDoubleExponential_v_214;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_215> AgradCcdfLogDoubleExponential_v_215;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_216> AgradCcdfLogDoubleExponential_v_216;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_217> AgradCcdfLogDoubleExponential_v_217;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_218> AgradCcdfLogDoubleExponential_v_218;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_219> AgradCcdfLogDoubleExponential_v_219;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_220> AgradCcdfLogDoubleExponential_v_220;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_221> AgradCcdfLogDoubleExponential_v_221;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_222> AgradCcdfLogDoubleExponential_v_222;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_223> AgradCcdfLogDoubleExponential_v_223;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_224> AgradCcdfLogDoubleExponential_v_224;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_225> AgradCcdfLogDoubleExponential_v_225;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_226> AgradCcdfLogDoubleExponential_v_226;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_227> AgradCcdfLogDoubleExponential_v_227;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_228> AgradCcdfLogDoubleExponential_v_228;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_229> AgradCcdfLogDoubleExponential_v_229;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_230> AgradCcdfLogDoubleExponential_v_230;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_231> AgradCcdfLogDoubleExponential_v_231;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_232> AgradCcdfLogDoubleExponential_v_232;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_233> AgradCcdfLogDoubleExponential_v_233;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_234> AgradCcdfLogDoubleExponential_v_234;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_235> AgradCcdfLogDoubleExponential_v_235;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_236> AgradCcdfLogDoubleExponential_v_236;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_237> AgradCcdfLogDoubleExponential_v_237;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_238> AgradCcdfLogDoubleExponential_v_238;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_239> AgradCcdfLogDoubleExponential_v_239;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_240> AgradCcdfLogDoubleExponential_v_240;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_241> AgradCcdfLogDoubleExponential_v_241;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_242> AgradCcdfLogDoubleExponential_v_242;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_243> AgradCcdfLogDoubleExponential_v_243;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_244> AgradCcdfLogDoubleExponential_v_244;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_245> AgradCcdfLogDoubleExponential_v_245;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_246> AgradCcdfLogDoubleExponential_v_246;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_247> AgradCcdfLogDoubleExponential_v_247;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_248> AgradCcdfLogDoubleExponential_v_248;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_249> AgradCcdfLogDoubleExponential_v_249;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_250> AgradCcdfLogDoubleExponential_v_250;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_251> AgradCcdfLogDoubleExponential_v_251;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_252> AgradCcdfLogDoubleExponential_v_252;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_253> AgradCcdfLogDoubleExponential_v_253;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_254> AgradCcdfLogDoubleExponential_v_254;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_255> AgradCcdfLogDoubleExponential_v_255;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_256> AgradCcdfLogDoubleExponential_v_256;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_257> AgradCcdfLogDoubleExponential_v_257;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_258> AgradCcdfLogDoubleExponential_v_258;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_259> AgradCcdfLogDoubleExponential_v_259;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_260> AgradCcdfLogDoubleExponential_v_260;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_261> AgradCcdfLogDoubleExponential_v_261;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_262> AgradCcdfLogDoubleExponential_v_262;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_263> AgradCcdfLogDoubleExponential_v_263;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_264> AgradCcdfLogDoubleExponential_v_264;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_265> AgradCcdfLogDoubleExponential_v_265;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_266> AgradCcdfLogDoubleExponential_v_266;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_267> AgradCcdfLogDoubleExponential_v_267;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_268> AgradCcdfLogDoubleExponential_v_268;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_269> AgradCcdfLogDoubleExponential_v_269;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_270> AgradCcdfLogDoubleExponential_v_270;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_271> AgradCcdfLogDoubleExponential_v_271;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_272> AgradCcdfLogDoubleExponential_v_272;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_273> AgradCcdfLogDoubleExponential_v_273;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_274> AgradCcdfLogDoubleExponential_v_274;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_275> AgradCcdfLogDoubleExponential_v_275;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_276> AgradCcdfLogDoubleExponential_v_276;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_277> AgradCcdfLogDoubleExponential_v_277;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_278> AgradCcdfLogDoubleExponential_v_278;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_279> AgradCcdfLogDoubleExponential_v_279;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_280> AgradCcdfLogDoubleExponential_v_280;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_281> AgradCcdfLogDoubleExponential_v_281;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_282> AgradCcdfLogDoubleExponential_v_282;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_283> AgradCcdfLogDoubleExponential_v_283;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_284> AgradCcdfLogDoubleExponential_v_284;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_285> AgradCcdfLogDoubleExponential_v_285;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_286> AgradCcdfLogDoubleExponential_v_286;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_287> AgradCcdfLogDoubleExponential_v_287;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_288> AgradCcdfLogDoubleExponential_v_288;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_289> AgradCcdfLogDoubleExponential_v_289;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_290> AgradCcdfLogDoubleExponential_v_290;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_291> AgradCcdfLogDoubleExponential_v_291;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_292> AgradCcdfLogDoubleExponential_v_292;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_293> AgradCcdfLogDoubleExponential_v_293;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_294> AgradCcdfLogDoubleExponential_v_294;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_295> AgradCcdfLogDoubleExponential_v_295;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_296> AgradCcdfLogDoubleExponential_v_296;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_297> AgradCcdfLogDoubleExponential_v_297;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_298> AgradCcdfLogDoubleExponential_v_298;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_299> AgradCcdfLogDoubleExponential_v_299;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_300> AgradCcdfLogDoubleExponential_v_300;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_301> AgradCcdfLogDoubleExponential_v_301;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_302> AgradCcdfLogDoubleExponential_v_302;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_303> AgradCcdfLogDoubleExponential_v_303;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_304> AgradCcdfLogDoubleExponential_v_304;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_305> AgradCcdfLogDoubleExponential_v_305;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_306> AgradCcdfLogDoubleExponential_v_306;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_307> AgradCcdfLogDoubleExponential_v_307;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_308> AgradCcdfLogDoubleExponential_v_308;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_309> AgradCcdfLogDoubleExponential_v_309;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_310> AgradCcdfLogDoubleExponential_v_310;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_311> AgradCcdfLogDoubleExponential_v_311;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_312> AgradCcdfLogDoubleExponential_v_312;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_313> AgradCcdfLogDoubleExponential_v_313;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_314> AgradCcdfLogDoubleExponential_v_314;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_315> AgradCcdfLogDoubleExponential_v_315;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_316> AgradCcdfLogDoubleExponential_v_316;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_317> AgradCcdfLogDoubleExponential_v_317;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_318> AgradCcdfLogDoubleExponential_v_318;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_319> AgradCcdfLogDoubleExponential_v_319;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_320> AgradCcdfLogDoubleExponential_v_320;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_321> AgradCcdfLogDoubleExponential_v_321;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_322> AgradCcdfLogDoubleExponential_v_322;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_323> AgradCcdfLogDoubleExponential_v_323;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_324> AgradCcdfLogDoubleExponential_v_324;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_325> AgradCcdfLogDoubleExponential_v_325;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_326> AgradCcdfLogDoubleExponential_v_326;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_327> AgradCcdfLogDoubleExponential_v_327;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_328> AgradCcdfLogDoubleExponential_v_328;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_329> AgradCcdfLogDoubleExponential_v_329;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_330> AgradCcdfLogDoubleExponential_v_330;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_331> AgradCcdfLogDoubleExponential_v_331;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_332> AgradCcdfLogDoubleExponential_v_332;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_333> AgradCcdfLogDoubleExponential_v_333;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_334> AgradCcdfLogDoubleExponential_v_334;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_335> AgradCcdfLogDoubleExponential_v_335;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_336> AgradCcdfLogDoubleExponential_v_336;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_337> AgradCcdfLogDoubleExponential_v_337;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_338> AgradCcdfLogDoubleExponential_v_338;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_339> AgradCcdfLogDoubleExponential_v_339;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_340> AgradCcdfLogDoubleExponential_v_340;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_341> AgradCcdfLogDoubleExponential_v_341;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_342> AgradCcdfLogDoubleExponential_v_342;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_343> AgradCcdfLogDoubleExponential_v_343;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_344> AgradCcdfLogDoubleExponential_v_344;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_345> AgradCcdfLogDoubleExponential_v_345;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_346> AgradCcdfLogDoubleExponential_v_346;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_347> AgradCcdfLogDoubleExponential_v_347;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_348> AgradCcdfLogDoubleExponential_v_348;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_349> AgradCcdfLogDoubleExponential_v_349;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_350> AgradCcdfLogDoubleExponential_v_350;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_351> AgradCcdfLogDoubleExponential_v_351;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_352> AgradCcdfLogDoubleExponential_v_352;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_353> AgradCcdfLogDoubleExponential_v_353;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_354> AgradCcdfLogDoubleExponential_v_354;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_355> AgradCcdfLogDoubleExponential_v_355;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_356> AgradCcdfLogDoubleExponential_v_356;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_357> AgradCcdfLogDoubleExponential_v_357;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_358> AgradCcdfLogDoubleExponential_v_358;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_359> AgradCcdfLogDoubleExponential_v_359;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_360> AgradCcdfLogDoubleExponential_v_360;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_361> AgradCcdfLogDoubleExponential_v_361;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_362> AgradCcdfLogDoubleExponential_v_362;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_363> AgradCcdfLogDoubleExponential_v_363;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_364> AgradCcdfLogDoubleExponential_v_364;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_365> AgradCcdfLogDoubleExponential_v_365;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_366> AgradCcdfLogDoubleExponential_v_366;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_367> AgradCcdfLogDoubleExponential_v_367;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_368> AgradCcdfLogDoubleExponential_v_368;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_369> AgradCcdfLogDoubleExponential_v_369;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_370> AgradCcdfLogDoubleExponential_v_370;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_371> AgradCcdfLogDoubleExponential_v_371;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_372> AgradCcdfLogDoubleExponential_v_372;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_373> AgradCcdfLogDoubleExponential_v_373;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_374> AgradCcdfLogDoubleExponential_v_374;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_375> AgradCcdfLogDoubleExponential_v_375;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_376> AgradCcdfLogDoubleExponential_v_376;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_377> AgradCcdfLogDoubleExponential_v_377;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_378> AgradCcdfLogDoubleExponential_v_378;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_379> AgradCcdfLogDoubleExponential_v_379;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_380> AgradCcdfLogDoubleExponential_v_380;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_381> AgradCcdfLogDoubleExponential_v_381;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_382> AgradCcdfLogDoubleExponential_v_382;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_383> AgradCcdfLogDoubleExponential_v_383;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_384> AgradCcdfLogDoubleExponential_v_384;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_385> AgradCcdfLogDoubleExponential_v_385;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_386> AgradCcdfLogDoubleExponential_v_386;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_387> AgradCcdfLogDoubleExponential_v_387;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_388> AgradCcdfLogDoubleExponential_v_388;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_389> AgradCcdfLogDoubleExponential_v_389;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_390> AgradCcdfLogDoubleExponential_v_390;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_391> AgradCcdfLogDoubleExponential_v_391;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_392> AgradCcdfLogDoubleExponential_v_392;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_393> AgradCcdfLogDoubleExponential_v_393;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_394> AgradCcdfLogDoubleExponential_v_394;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_395> AgradCcdfLogDoubleExponential_v_395;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_396> AgradCcdfLogDoubleExponential_v_396;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_397> AgradCcdfLogDoubleExponential_v_397;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_398> AgradCcdfLogDoubleExponential_v_398;
typedef boost::mpl::vector<AgradCcdfLogDoubleExponential, type_v_399> AgradCcdfLogDoubleExponential_v_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_200, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_200);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_201, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_201);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_202, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_202);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_203, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_203);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_204, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_204);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_205, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_205);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_206, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_206);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_207, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_207);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_208, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_208);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_209, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_209);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_210, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_210);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_211, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_211);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_212, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_212);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_213, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_213);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_214, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_214);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_215, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_215);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_216, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_216);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_217, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_217);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_218, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_218);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_219, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_219);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_220, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_220);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_221, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_221);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_222, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_222);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_223, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_223);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_224, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_224);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_225, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_225);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_226, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_226);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_227, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_227);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_228, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_228);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_229, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_229);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_230, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_230);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_231, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_231);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_232, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_232);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_233, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_233);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_234, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_234);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_235, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_235);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_236, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_236);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_237, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_237);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_238, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_238);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_239, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_239);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_240, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_240);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_241, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_241);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_242, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_242);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_243, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_243);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_244, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_244);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_245, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_245);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_246, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_246);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_247, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_247);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_248, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_248);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_249, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_249);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_250, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_250);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_251, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_251);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_252, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_252);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_253, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_253);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_254, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_254);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_255, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_255);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_256, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_256);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_257, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_257);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_258, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_258);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_259, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_259);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_260, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_260);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_261, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_261);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_262, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_262);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_263, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_263);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_264, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_264);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_265, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_265);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_266, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_266);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_267, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_267);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_268, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_268);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_269, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_269);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_270, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_270);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_271, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_271);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_272, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_272);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_273, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_273);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_274, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_274);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_275, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_275);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_276, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_276);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_277, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_277);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_278, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_278);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_279, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_279);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_280, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_280);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_281, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_281);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_282, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_282);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_283, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_283);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_284, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_284);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_285, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_285);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_286, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_286);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_287, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_287);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_288, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_288);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_289, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_289);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_290, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_290);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_291, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_291);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_292, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_292);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_293, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_293);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_294, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_294);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_295, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_295);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_296, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_296);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_297, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_297);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_298, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_298);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_299, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_299);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_300, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_301, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_302, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_303, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_304, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_305, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_306, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_307, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_308, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_309, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_310, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_311, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_312, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_313, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_314, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_315, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_316, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_317, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_318, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_319, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_320, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_321, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_322, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_323, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_324, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_325, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_326, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_327, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_328, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_329, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_330, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_331, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_332, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_333, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_334, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_335, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_336, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_337, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_338, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_339, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_340, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_341, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_342, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_343, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_344, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_345, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_346, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_347, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_348, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_349, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_350, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_351, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_352, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_353, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_354, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_355, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_356, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_357, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_358, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_359, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_360, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_361, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_362, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_363, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_364, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_365, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_366, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_367, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_368, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_369, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_370, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_371, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_372, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_373, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_374, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_375, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_376, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_377, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_378, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_379, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_380, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_381, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_382, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_383, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_384, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_385, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_386, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_387, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_388, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_389, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_390, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_391, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_392, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_393, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_394, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_395, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_396, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_397, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_398, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogDoubleExponential_v_399, AgradCcdfLogTestFixture, AgradCcdfLogDoubleExponential_v_399);

