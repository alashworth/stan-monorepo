#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <logistic/logistic_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<var>, empty, empty, empty> type_fv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_15;
typedef boost::mpl::vector<double, fvar<var>, double, empty, empty, empty> type_fv_16;
typedef boost::mpl::vector<double, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_17;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_18;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_19;
typedef boost::mpl::vector<double, fvar<var>, fvar<var>, empty, empty, empty> type_fv_20;
typedef boost::mpl::vector<double, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_21;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_22;
typedef boost::mpl::vector<double, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_23;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_24;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_25;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_26;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_27;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_28;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_29;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_30;
typedef boost::mpl::vector<double, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<var>, empty, empty, empty> type_fv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, double, empty, empty, empty> type_fv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<var>, empty, empty, empty> type_fv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, double, empty, empty, empty> type_fv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<var>, empty, empty, empty> type_fv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<var>, empty, empty, empty> type_fv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<var>>, empty, empty, empty> type_fv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, double, empty, empty, empty> type_fv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, std::vector<double>, empty, empty, empty> type_fv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, fvar<var>, empty, empty, empty> type_fv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, std::vector<fvar<var>>, empty, empty, empty> type_fv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<var>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, double, empty, empty, empty> type_fv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<double>, empty, empty, empty> type_fv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, fvar<var>, empty, empty, empty> type_fv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, std::vector<fvar<var>>, empty, empty, empty> type_fv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<var>>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, double, empty, empty, empty> type_fv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_fv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, fvar<var>, empty, empty, empty> type_fv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, std::vector<fvar<var>>, empty, empty, empty> type_fv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, double, empty, empty, empty> type_fv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_fv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, fvar<var>, empty, empty, empty> type_fv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, std::vector<fvar<var>>, empty, empty, empty> type_fv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_191;
typedef boost::mpl::vector<fvar<var>, double, double, empty, empty, empty> type_fv_192;
typedef boost::mpl::vector<fvar<var>, double, std::vector<double>, empty, empty, empty> type_fv_193;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_194;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_195;
typedef boost::mpl::vector<fvar<var>, double, fvar<var>, empty, empty, empty> type_fv_196;
typedef boost::mpl::vector<fvar<var>, double, std::vector<fvar<var>>, empty, empty, empty> type_fv_197;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<fvar<var>, Eigen::Dynamic, 1>, empty, empty, empty> type_fv_198;
typedef boost::mpl::vector<fvar<var>, double, Eigen::Matrix<fvar<var>, 1, Eigen::Dynamic>, empty, empty, empty> type_fv_199;

typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_0> AgradCcdfLogLogistic_fv_0;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_1> AgradCcdfLogLogistic_fv_1;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_2> AgradCcdfLogLogistic_fv_2;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_3> AgradCcdfLogLogistic_fv_3;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_4> AgradCcdfLogLogistic_fv_4;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_5> AgradCcdfLogLogistic_fv_5;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_6> AgradCcdfLogLogistic_fv_6;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_7> AgradCcdfLogLogistic_fv_7;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_8> AgradCcdfLogLogistic_fv_8;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_9> AgradCcdfLogLogistic_fv_9;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_10> AgradCcdfLogLogistic_fv_10;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_11> AgradCcdfLogLogistic_fv_11;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_12> AgradCcdfLogLogistic_fv_12;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_13> AgradCcdfLogLogistic_fv_13;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_14> AgradCcdfLogLogistic_fv_14;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_15> AgradCcdfLogLogistic_fv_15;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_16> AgradCcdfLogLogistic_fv_16;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_17> AgradCcdfLogLogistic_fv_17;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_18> AgradCcdfLogLogistic_fv_18;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_19> AgradCcdfLogLogistic_fv_19;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_20> AgradCcdfLogLogistic_fv_20;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_21> AgradCcdfLogLogistic_fv_21;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_22> AgradCcdfLogLogistic_fv_22;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_23> AgradCcdfLogLogistic_fv_23;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_24> AgradCcdfLogLogistic_fv_24;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_25> AgradCcdfLogLogistic_fv_25;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_26> AgradCcdfLogLogistic_fv_26;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_27> AgradCcdfLogLogistic_fv_27;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_28> AgradCcdfLogLogistic_fv_28;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_29> AgradCcdfLogLogistic_fv_29;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_30> AgradCcdfLogLogistic_fv_30;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_31> AgradCcdfLogLogistic_fv_31;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_32> AgradCcdfLogLogistic_fv_32;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_33> AgradCcdfLogLogistic_fv_33;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_34> AgradCcdfLogLogistic_fv_34;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_35> AgradCcdfLogLogistic_fv_35;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_36> AgradCcdfLogLogistic_fv_36;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_37> AgradCcdfLogLogistic_fv_37;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_38> AgradCcdfLogLogistic_fv_38;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_39> AgradCcdfLogLogistic_fv_39;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_40> AgradCcdfLogLogistic_fv_40;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_41> AgradCcdfLogLogistic_fv_41;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_42> AgradCcdfLogLogistic_fv_42;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_43> AgradCcdfLogLogistic_fv_43;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_44> AgradCcdfLogLogistic_fv_44;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_45> AgradCcdfLogLogistic_fv_45;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_46> AgradCcdfLogLogistic_fv_46;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_47> AgradCcdfLogLogistic_fv_47;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_48> AgradCcdfLogLogistic_fv_48;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_49> AgradCcdfLogLogistic_fv_49;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_50> AgradCcdfLogLogistic_fv_50;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_51> AgradCcdfLogLogistic_fv_51;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_52> AgradCcdfLogLogistic_fv_52;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_53> AgradCcdfLogLogistic_fv_53;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_54> AgradCcdfLogLogistic_fv_54;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_55> AgradCcdfLogLogistic_fv_55;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_56> AgradCcdfLogLogistic_fv_56;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_57> AgradCcdfLogLogistic_fv_57;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_58> AgradCcdfLogLogistic_fv_58;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_59> AgradCcdfLogLogistic_fv_59;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_60> AgradCcdfLogLogistic_fv_60;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_61> AgradCcdfLogLogistic_fv_61;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_62> AgradCcdfLogLogistic_fv_62;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_63> AgradCcdfLogLogistic_fv_63;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_64> AgradCcdfLogLogistic_fv_64;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_65> AgradCcdfLogLogistic_fv_65;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_66> AgradCcdfLogLogistic_fv_66;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_67> AgradCcdfLogLogistic_fv_67;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_68> AgradCcdfLogLogistic_fv_68;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_69> AgradCcdfLogLogistic_fv_69;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_70> AgradCcdfLogLogistic_fv_70;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_71> AgradCcdfLogLogistic_fv_71;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_72> AgradCcdfLogLogistic_fv_72;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_73> AgradCcdfLogLogistic_fv_73;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_74> AgradCcdfLogLogistic_fv_74;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_75> AgradCcdfLogLogistic_fv_75;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_76> AgradCcdfLogLogistic_fv_76;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_77> AgradCcdfLogLogistic_fv_77;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_78> AgradCcdfLogLogistic_fv_78;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_79> AgradCcdfLogLogistic_fv_79;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_80> AgradCcdfLogLogistic_fv_80;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_81> AgradCcdfLogLogistic_fv_81;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_82> AgradCcdfLogLogistic_fv_82;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_83> AgradCcdfLogLogistic_fv_83;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_84> AgradCcdfLogLogistic_fv_84;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_85> AgradCcdfLogLogistic_fv_85;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_86> AgradCcdfLogLogistic_fv_86;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_87> AgradCcdfLogLogistic_fv_87;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_88> AgradCcdfLogLogistic_fv_88;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_89> AgradCcdfLogLogistic_fv_89;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_90> AgradCcdfLogLogistic_fv_90;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_91> AgradCcdfLogLogistic_fv_91;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_92> AgradCcdfLogLogistic_fv_92;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_93> AgradCcdfLogLogistic_fv_93;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_94> AgradCcdfLogLogistic_fv_94;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_95> AgradCcdfLogLogistic_fv_95;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_96> AgradCcdfLogLogistic_fv_96;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_97> AgradCcdfLogLogistic_fv_97;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_98> AgradCcdfLogLogistic_fv_98;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_99> AgradCcdfLogLogistic_fv_99;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_100> AgradCcdfLogLogistic_fv_100;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_101> AgradCcdfLogLogistic_fv_101;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_102> AgradCcdfLogLogistic_fv_102;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_103> AgradCcdfLogLogistic_fv_103;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_104> AgradCcdfLogLogistic_fv_104;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_105> AgradCcdfLogLogistic_fv_105;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_106> AgradCcdfLogLogistic_fv_106;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_107> AgradCcdfLogLogistic_fv_107;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_108> AgradCcdfLogLogistic_fv_108;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_109> AgradCcdfLogLogistic_fv_109;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_110> AgradCcdfLogLogistic_fv_110;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_111> AgradCcdfLogLogistic_fv_111;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_112> AgradCcdfLogLogistic_fv_112;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_113> AgradCcdfLogLogistic_fv_113;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_114> AgradCcdfLogLogistic_fv_114;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_115> AgradCcdfLogLogistic_fv_115;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_116> AgradCcdfLogLogistic_fv_116;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_117> AgradCcdfLogLogistic_fv_117;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_118> AgradCcdfLogLogistic_fv_118;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_119> AgradCcdfLogLogistic_fv_119;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_120> AgradCcdfLogLogistic_fv_120;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_121> AgradCcdfLogLogistic_fv_121;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_122> AgradCcdfLogLogistic_fv_122;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_123> AgradCcdfLogLogistic_fv_123;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_124> AgradCcdfLogLogistic_fv_124;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_125> AgradCcdfLogLogistic_fv_125;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_126> AgradCcdfLogLogistic_fv_126;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_127> AgradCcdfLogLogistic_fv_127;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_128> AgradCcdfLogLogistic_fv_128;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_129> AgradCcdfLogLogistic_fv_129;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_130> AgradCcdfLogLogistic_fv_130;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_131> AgradCcdfLogLogistic_fv_131;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_132> AgradCcdfLogLogistic_fv_132;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_133> AgradCcdfLogLogistic_fv_133;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_134> AgradCcdfLogLogistic_fv_134;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_135> AgradCcdfLogLogistic_fv_135;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_136> AgradCcdfLogLogistic_fv_136;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_137> AgradCcdfLogLogistic_fv_137;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_138> AgradCcdfLogLogistic_fv_138;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_139> AgradCcdfLogLogistic_fv_139;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_140> AgradCcdfLogLogistic_fv_140;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_141> AgradCcdfLogLogistic_fv_141;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_142> AgradCcdfLogLogistic_fv_142;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_143> AgradCcdfLogLogistic_fv_143;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_144> AgradCcdfLogLogistic_fv_144;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_145> AgradCcdfLogLogistic_fv_145;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_146> AgradCcdfLogLogistic_fv_146;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_147> AgradCcdfLogLogistic_fv_147;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_148> AgradCcdfLogLogistic_fv_148;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_149> AgradCcdfLogLogistic_fv_149;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_150> AgradCcdfLogLogistic_fv_150;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_151> AgradCcdfLogLogistic_fv_151;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_152> AgradCcdfLogLogistic_fv_152;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_153> AgradCcdfLogLogistic_fv_153;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_154> AgradCcdfLogLogistic_fv_154;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_155> AgradCcdfLogLogistic_fv_155;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_156> AgradCcdfLogLogistic_fv_156;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_157> AgradCcdfLogLogistic_fv_157;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_158> AgradCcdfLogLogistic_fv_158;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_159> AgradCcdfLogLogistic_fv_159;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_160> AgradCcdfLogLogistic_fv_160;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_161> AgradCcdfLogLogistic_fv_161;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_162> AgradCcdfLogLogistic_fv_162;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_163> AgradCcdfLogLogistic_fv_163;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_164> AgradCcdfLogLogistic_fv_164;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_165> AgradCcdfLogLogistic_fv_165;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_166> AgradCcdfLogLogistic_fv_166;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_167> AgradCcdfLogLogistic_fv_167;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_168> AgradCcdfLogLogistic_fv_168;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_169> AgradCcdfLogLogistic_fv_169;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_170> AgradCcdfLogLogistic_fv_170;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_171> AgradCcdfLogLogistic_fv_171;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_172> AgradCcdfLogLogistic_fv_172;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_173> AgradCcdfLogLogistic_fv_173;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_174> AgradCcdfLogLogistic_fv_174;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_175> AgradCcdfLogLogistic_fv_175;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_176> AgradCcdfLogLogistic_fv_176;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_177> AgradCcdfLogLogistic_fv_177;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_178> AgradCcdfLogLogistic_fv_178;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_179> AgradCcdfLogLogistic_fv_179;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_180> AgradCcdfLogLogistic_fv_180;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_181> AgradCcdfLogLogistic_fv_181;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_182> AgradCcdfLogLogistic_fv_182;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_183> AgradCcdfLogLogistic_fv_183;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_184> AgradCcdfLogLogistic_fv_184;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_185> AgradCcdfLogLogistic_fv_185;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_186> AgradCcdfLogLogistic_fv_186;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_187> AgradCcdfLogLogistic_fv_187;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_188> AgradCcdfLogLogistic_fv_188;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_189> AgradCcdfLogLogistic_fv_189;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_190> AgradCcdfLogLogistic_fv_190;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_191> AgradCcdfLogLogistic_fv_191;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_192> AgradCcdfLogLogistic_fv_192;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_193> AgradCcdfLogLogistic_fv_193;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_194> AgradCcdfLogLogistic_fv_194;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_195> AgradCcdfLogLogistic_fv_195;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_196> AgradCcdfLogLogistic_fv_196;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_197> AgradCcdfLogLogistic_fv_197;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_198> AgradCcdfLogLogistic_fv_198;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_fv_199> AgradCcdfLogLogistic_fv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_0, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_1, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_2, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_3, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_4, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_5, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_6, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_7, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_8, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_9, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_10, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_11, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_12, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_13, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_14, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_15, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_16, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_17, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_18, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_19, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_20, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_21, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_22, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_23, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_24, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_25, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_26, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_27, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_28, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_29, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_30, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_31, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_32, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_33, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_34, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_35, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_36, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_37, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_38, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_39, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_40, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_41, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_42, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_43, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_44, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_45, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_46, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_47, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_48, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_49, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_50, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_51, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_52, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_53, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_54, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_55, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_56, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_57, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_58, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_59, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_60, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_61, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_62, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_63, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_64, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_65, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_66, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_67, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_68, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_69, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_70, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_71, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_72, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_73, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_74, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_75, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_76, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_77, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_78, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_79, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_80, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_81, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_82, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_83, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_84, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_85, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_86, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_87, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_88, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_89, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_90, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_91, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_92, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_93, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_94, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_95, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_96, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_97, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_98, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_99, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_100, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_101, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_102, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_103, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_104, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_105, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_106, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_107, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_108, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_109, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_110, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_111, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_112, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_113, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_114, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_115, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_116, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_117, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_118, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_119, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_120, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_121, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_122, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_123, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_124, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_125, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_126, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_127, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_128, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_129, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_130, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_131, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_132, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_133, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_134, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_135, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_136, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_137, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_138, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_139, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_140, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_141, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_142, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_143, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_144, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_145, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_146, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_147, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_148, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_149, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_150, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_151, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_152, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_153, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_154, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_155, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_156, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_157, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_158, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_159, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_160, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_161, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_162, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_163, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_164, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_165, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_166, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_167, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_168, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_169, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_170, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_171, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_172, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_173, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_174, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_175, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_176, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_177, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_178, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_179, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_180, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_181, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_182, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_183, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_184, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_185, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_186, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_187, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_188, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_189, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_190, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_191, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_192, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_193, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_194, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_195, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_196, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_197, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_198, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_fv_199, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_fv_199);

