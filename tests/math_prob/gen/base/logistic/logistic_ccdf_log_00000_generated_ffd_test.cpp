#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <logistic/logistic_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_15;
typedef boost::mpl::vector<double, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_16;
typedef boost::mpl::vector<double, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_17;
typedef boost::mpl::vector<double, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_18;
typedef boost::mpl::vector<double, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_19;
typedef boost::mpl::vector<double, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_20;
typedef boost::mpl::vector<double, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_21;
typedef boost::mpl::vector<double, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_22;
typedef boost::mpl::vector<double, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_191;
typedef boost::mpl::vector<fvar<fvar<double> >, double, double, empty, empty, empty> type_ffd_192;
typedef boost::mpl::vector<fvar<fvar<double> >, double, std::vector<double>, empty, empty, empty> type_ffd_193;
typedef boost::mpl::vector<fvar<fvar<double> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_194;
typedef boost::mpl::vector<fvar<fvar<double> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_195;
typedef boost::mpl::vector<fvar<fvar<double> >, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_196;
typedef boost::mpl::vector<fvar<fvar<double> >, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_197;
typedef boost::mpl::vector<fvar<fvar<double> >, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_198;
typedef boost::mpl::vector<fvar<fvar<double> >, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_199;

typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_0> AgradCcdfLogLogistic_ffd_0;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_1> AgradCcdfLogLogistic_ffd_1;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_2> AgradCcdfLogLogistic_ffd_2;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_3> AgradCcdfLogLogistic_ffd_3;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_4> AgradCcdfLogLogistic_ffd_4;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_5> AgradCcdfLogLogistic_ffd_5;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_6> AgradCcdfLogLogistic_ffd_6;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_7> AgradCcdfLogLogistic_ffd_7;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_8> AgradCcdfLogLogistic_ffd_8;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_9> AgradCcdfLogLogistic_ffd_9;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_10> AgradCcdfLogLogistic_ffd_10;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_11> AgradCcdfLogLogistic_ffd_11;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_12> AgradCcdfLogLogistic_ffd_12;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_13> AgradCcdfLogLogistic_ffd_13;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_14> AgradCcdfLogLogistic_ffd_14;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_15> AgradCcdfLogLogistic_ffd_15;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_16> AgradCcdfLogLogistic_ffd_16;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_17> AgradCcdfLogLogistic_ffd_17;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_18> AgradCcdfLogLogistic_ffd_18;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_19> AgradCcdfLogLogistic_ffd_19;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_20> AgradCcdfLogLogistic_ffd_20;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_21> AgradCcdfLogLogistic_ffd_21;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_22> AgradCcdfLogLogistic_ffd_22;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_23> AgradCcdfLogLogistic_ffd_23;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_24> AgradCcdfLogLogistic_ffd_24;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_25> AgradCcdfLogLogistic_ffd_25;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_26> AgradCcdfLogLogistic_ffd_26;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_27> AgradCcdfLogLogistic_ffd_27;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_28> AgradCcdfLogLogistic_ffd_28;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_29> AgradCcdfLogLogistic_ffd_29;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_30> AgradCcdfLogLogistic_ffd_30;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_31> AgradCcdfLogLogistic_ffd_31;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_32> AgradCcdfLogLogistic_ffd_32;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_33> AgradCcdfLogLogistic_ffd_33;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_34> AgradCcdfLogLogistic_ffd_34;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_35> AgradCcdfLogLogistic_ffd_35;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_36> AgradCcdfLogLogistic_ffd_36;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_37> AgradCcdfLogLogistic_ffd_37;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_38> AgradCcdfLogLogistic_ffd_38;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_39> AgradCcdfLogLogistic_ffd_39;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_40> AgradCcdfLogLogistic_ffd_40;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_41> AgradCcdfLogLogistic_ffd_41;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_42> AgradCcdfLogLogistic_ffd_42;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_43> AgradCcdfLogLogistic_ffd_43;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_44> AgradCcdfLogLogistic_ffd_44;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_45> AgradCcdfLogLogistic_ffd_45;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_46> AgradCcdfLogLogistic_ffd_46;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_47> AgradCcdfLogLogistic_ffd_47;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_48> AgradCcdfLogLogistic_ffd_48;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_49> AgradCcdfLogLogistic_ffd_49;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_50> AgradCcdfLogLogistic_ffd_50;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_51> AgradCcdfLogLogistic_ffd_51;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_52> AgradCcdfLogLogistic_ffd_52;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_53> AgradCcdfLogLogistic_ffd_53;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_54> AgradCcdfLogLogistic_ffd_54;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_55> AgradCcdfLogLogistic_ffd_55;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_56> AgradCcdfLogLogistic_ffd_56;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_57> AgradCcdfLogLogistic_ffd_57;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_58> AgradCcdfLogLogistic_ffd_58;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_59> AgradCcdfLogLogistic_ffd_59;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_60> AgradCcdfLogLogistic_ffd_60;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_61> AgradCcdfLogLogistic_ffd_61;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_62> AgradCcdfLogLogistic_ffd_62;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_63> AgradCcdfLogLogistic_ffd_63;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_64> AgradCcdfLogLogistic_ffd_64;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_65> AgradCcdfLogLogistic_ffd_65;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_66> AgradCcdfLogLogistic_ffd_66;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_67> AgradCcdfLogLogistic_ffd_67;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_68> AgradCcdfLogLogistic_ffd_68;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_69> AgradCcdfLogLogistic_ffd_69;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_70> AgradCcdfLogLogistic_ffd_70;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_71> AgradCcdfLogLogistic_ffd_71;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_72> AgradCcdfLogLogistic_ffd_72;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_73> AgradCcdfLogLogistic_ffd_73;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_74> AgradCcdfLogLogistic_ffd_74;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_75> AgradCcdfLogLogistic_ffd_75;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_76> AgradCcdfLogLogistic_ffd_76;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_77> AgradCcdfLogLogistic_ffd_77;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_78> AgradCcdfLogLogistic_ffd_78;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_79> AgradCcdfLogLogistic_ffd_79;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_80> AgradCcdfLogLogistic_ffd_80;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_81> AgradCcdfLogLogistic_ffd_81;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_82> AgradCcdfLogLogistic_ffd_82;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_83> AgradCcdfLogLogistic_ffd_83;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_84> AgradCcdfLogLogistic_ffd_84;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_85> AgradCcdfLogLogistic_ffd_85;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_86> AgradCcdfLogLogistic_ffd_86;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_87> AgradCcdfLogLogistic_ffd_87;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_88> AgradCcdfLogLogistic_ffd_88;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_89> AgradCcdfLogLogistic_ffd_89;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_90> AgradCcdfLogLogistic_ffd_90;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_91> AgradCcdfLogLogistic_ffd_91;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_92> AgradCcdfLogLogistic_ffd_92;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_93> AgradCcdfLogLogistic_ffd_93;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_94> AgradCcdfLogLogistic_ffd_94;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_95> AgradCcdfLogLogistic_ffd_95;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_96> AgradCcdfLogLogistic_ffd_96;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_97> AgradCcdfLogLogistic_ffd_97;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_98> AgradCcdfLogLogistic_ffd_98;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_99> AgradCcdfLogLogistic_ffd_99;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_100> AgradCcdfLogLogistic_ffd_100;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_101> AgradCcdfLogLogistic_ffd_101;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_102> AgradCcdfLogLogistic_ffd_102;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_103> AgradCcdfLogLogistic_ffd_103;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_104> AgradCcdfLogLogistic_ffd_104;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_105> AgradCcdfLogLogistic_ffd_105;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_106> AgradCcdfLogLogistic_ffd_106;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_107> AgradCcdfLogLogistic_ffd_107;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_108> AgradCcdfLogLogistic_ffd_108;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_109> AgradCcdfLogLogistic_ffd_109;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_110> AgradCcdfLogLogistic_ffd_110;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_111> AgradCcdfLogLogistic_ffd_111;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_112> AgradCcdfLogLogistic_ffd_112;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_113> AgradCcdfLogLogistic_ffd_113;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_114> AgradCcdfLogLogistic_ffd_114;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_115> AgradCcdfLogLogistic_ffd_115;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_116> AgradCcdfLogLogistic_ffd_116;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_117> AgradCcdfLogLogistic_ffd_117;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_118> AgradCcdfLogLogistic_ffd_118;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_119> AgradCcdfLogLogistic_ffd_119;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_120> AgradCcdfLogLogistic_ffd_120;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_121> AgradCcdfLogLogistic_ffd_121;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_122> AgradCcdfLogLogistic_ffd_122;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_123> AgradCcdfLogLogistic_ffd_123;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_124> AgradCcdfLogLogistic_ffd_124;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_125> AgradCcdfLogLogistic_ffd_125;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_126> AgradCcdfLogLogistic_ffd_126;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_127> AgradCcdfLogLogistic_ffd_127;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_128> AgradCcdfLogLogistic_ffd_128;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_129> AgradCcdfLogLogistic_ffd_129;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_130> AgradCcdfLogLogistic_ffd_130;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_131> AgradCcdfLogLogistic_ffd_131;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_132> AgradCcdfLogLogistic_ffd_132;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_133> AgradCcdfLogLogistic_ffd_133;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_134> AgradCcdfLogLogistic_ffd_134;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_135> AgradCcdfLogLogistic_ffd_135;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_136> AgradCcdfLogLogistic_ffd_136;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_137> AgradCcdfLogLogistic_ffd_137;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_138> AgradCcdfLogLogistic_ffd_138;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_139> AgradCcdfLogLogistic_ffd_139;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_140> AgradCcdfLogLogistic_ffd_140;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_141> AgradCcdfLogLogistic_ffd_141;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_142> AgradCcdfLogLogistic_ffd_142;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_143> AgradCcdfLogLogistic_ffd_143;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_144> AgradCcdfLogLogistic_ffd_144;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_145> AgradCcdfLogLogistic_ffd_145;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_146> AgradCcdfLogLogistic_ffd_146;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_147> AgradCcdfLogLogistic_ffd_147;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_148> AgradCcdfLogLogistic_ffd_148;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_149> AgradCcdfLogLogistic_ffd_149;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_150> AgradCcdfLogLogistic_ffd_150;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_151> AgradCcdfLogLogistic_ffd_151;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_152> AgradCcdfLogLogistic_ffd_152;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_153> AgradCcdfLogLogistic_ffd_153;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_154> AgradCcdfLogLogistic_ffd_154;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_155> AgradCcdfLogLogistic_ffd_155;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_156> AgradCcdfLogLogistic_ffd_156;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_157> AgradCcdfLogLogistic_ffd_157;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_158> AgradCcdfLogLogistic_ffd_158;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_159> AgradCcdfLogLogistic_ffd_159;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_160> AgradCcdfLogLogistic_ffd_160;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_161> AgradCcdfLogLogistic_ffd_161;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_162> AgradCcdfLogLogistic_ffd_162;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_163> AgradCcdfLogLogistic_ffd_163;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_164> AgradCcdfLogLogistic_ffd_164;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_165> AgradCcdfLogLogistic_ffd_165;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_166> AgradCcdfLogLogistic_ffd_166;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_167> AgradCcdfLogLogistic_ffd_167;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_168> AgradCcdfLogLogistic_ffd_168;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_169> AgradCcdfLogLogistic_ffd_169;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_170> AgradCcdfLogLogistic_ffd_170;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_171> AgradCcdfLogLogistic_ffd_171;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_172> AgradCcdfLogLogistic_ffd_172;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_173> AgradCcdfLogLogistic_ffd_173;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_174> AgradCcdfLogLogistic_ffd_174;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_175> AgradCcdfLogLogistic_ffd_175;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_176> AgradCcdfLogLogistic_ffd_176;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_177> AgradCcdfLogLogistic_ffd_177;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_178> AgradCcdfLogLogistic_ffd_178;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_179> AgradCcdfLogLogistic_ffd_179;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_180> AgradCcdfLogLogistic_ffd_180;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_181> AgradCcdfLogLogistic_ffd_181;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_182> AgradCcdfLogLogistic_ffd_182;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_183> AgradCcdfLogLogistic_ffd_183;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_184> AgradCcdfLogLogistic_ffd_184;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_185> AgradCcdfLogLogistic_ffd_185;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_186> AgradCcdfLogLogistic_ffd_186;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_187> AgradCcdfLogLogistic_ffd_187;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_188> AgradCcdfLogLogistic_ffd_188;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_189> AgradCcdfLogLogistic_ffd_189;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_190> AgradCcdfLogLogistic_ffd_190;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_191> AgradCcdfLogLogistic_ffd_191;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_192> AgradCcdfLogLogistic_ffd_192;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_193> AgradCcdfLogLogistic_ffd_193;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_194> AgradCcdfLogLogistic_ffd_194;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_195> AgradCcdfLogLogistic_ffd_195;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_196> AgradCcdfLogLogistic_ffd_196;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_197> AgradCcdfLogLogistic_ffd_197;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_198> AgradCcdfLogLogistic_ffd_198;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffd_199> AgradCcdfLogLogistic_ffd_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_0, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_1, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_2, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_3, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_4, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_5, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_6, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_7, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_8, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_9, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_10, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_11, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_12, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_13, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_14, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_15, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_16, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_17, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_18, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_19, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_20, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_21, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_22, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_23, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_24, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_25, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_26, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_27, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_28, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_29, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_30, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_31, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_32, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_33, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_34, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_35, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_36, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_37, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_38, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_39, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_40, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_41, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_42, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_43, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_44, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_45, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_46, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_47, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_48, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_49, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_50, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_51, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_52, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_53, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_54, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_55, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_56, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_57, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_58, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_59, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_60, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_61, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_62, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_63, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_64, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_65, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_66, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_67, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_68, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_69, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_70, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_71, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_72, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_73, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_74, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_75, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_76, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_77, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_78, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_79, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_80, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_81, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_82, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_83, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_84, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_85, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_86, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_87, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_88, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_89, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_90, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_91, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_92, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_93, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_94, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_95, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_96, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_97, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_98, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_99, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_100, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_101, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_102, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_103, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_104, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_105, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_106, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_107, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_108, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_109, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_110, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_111, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_112, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_113, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_114, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_115, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_116, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_117, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_118, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_119, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_120, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_121, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_122, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_123, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_124, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_125, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_126, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_127, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_128, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_129, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_130, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_131, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_132, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_133, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_134, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_135, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_136, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_137, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_138, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_139, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_140, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_141, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_142, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_143, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_144, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_145, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_146, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_147, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_148, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_149, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_150, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_151, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_152, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_153, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_154, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_155, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_156, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_157, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_158, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_159, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_160, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_161, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_162, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_163, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_164, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_165, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_166, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_167, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_168, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_169, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_170, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_171, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_172, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_173, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_174, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_175, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_176, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_177, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_178, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_179, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_180, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_181, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_182, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_183, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_184, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_185, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_186, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_187, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_188, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_189, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_190, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_191, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_192, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_193, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_194, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_195, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_196, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_197, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_198, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffd_199, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffd_199);

