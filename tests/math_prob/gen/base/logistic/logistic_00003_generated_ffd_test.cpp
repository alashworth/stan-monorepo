#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/logistic/logistic_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_300> AgradDistributionsLogistic_ffd_300;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_301> AgradDistributionsLogistic_ffd_301;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_302> AgradDistributionsLogistic_ffd_302;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_303> AgradDistributionsLogistic_ffd_303;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_304> AgradDistributionsLogistic_ffd_304;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_305> AgradDistributionsLogistic_ffd_305;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_306> AgradDistributionsLogistic_ffd_306;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_307> AgradDistributionsLogistic_ffd_307;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_308> AgradDistributionsLogistic_ffd_308;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_309> AgradDistributionsLogistic_ffd_309;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_310> AgradDistributionsLogistic_ffd_310;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_311> AgradDistributionsLogistic_ffd_311;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_312> AgradDistributionsLogistic_ffd_312;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_313> AgradDistributionsLogistic_ffd_313;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_314> AgradDistributionsLogistic_ffd_314;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_315> AgradDistributionsLogistic_ffd_315;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_316> AgradDistributionsLogistic_ffd_316;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_317> AgradDistributionsLogistic_ffd_317;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_318> AgradDistributionsLogistic_ffd_318;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_319> AgradDistributionsLogistic_ffd_319;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_320> AgradDistributionsLogistic_ffd_320;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_321> AgradDistributionsLogistic_ffd_321;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_322> AgradDistributionsLogistic_ffd_322;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_323> AgradDistributionsLogistic_ffd_323;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_324> AgradDistributionsLogistic_ffd_324;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_325> AgradDistributionsLogistic_ffd_325;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_326> AgradDistributionsLogistic_ffd_326;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_327> AgradDistributionsLogistic_ffd_327;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_328> AgradDistributionsLogistic_ffd_328;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_329> AgradDistributionsLogistic_ffd_329;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_330> AgradDistributionsLogistic_ffd_330;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_331> AgradDistributionsLogistic_ffd_331;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_332> AgradDistributionsLogistic_ffd_332;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_333> AgradDistributionsLogistic_ffd_333;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_334> AgradDistributionsLogistic_ffd_334;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_335> AgradDistributionsLogistic_ffd_335;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_336> AgradDistributionsLogistic_ffd_336;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_337> AgradDistributionsLogistic_ffd_337;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_338> AgradDistributionsLogistic_ffd_338;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_339> AgradDistributionsLogistic_ffd_339;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_340> AgradDistributionsLogistic_ffd_340;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_341> AgradDistributionsLogistic_ffd_341;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_342> AgradDistributionsLogistic_ffd_342;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_343> AgradDistributionsLogistic_ffd_343;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_344> AgradDistributionsLogistic_ffd_344;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_345> AgradDistributionsLogistic_ffd_345;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_346> AgradDistributionsLogistic_ffd_346;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_347> AgradDistributionsLogistic_ffd_347;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_348> AgradDistributionsLogistic_ffd_348;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_349> AgradDistributionsLogistic_ffd_349;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_350> AgradDistributionsLogistic_ffd_350;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_351> AgradDistributionsLogistic_ffd_351;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_352> AgradDistributionsLogistic_ffd_352;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_353> AgradDistributionsLogistic_ffd_353;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_354> AgradDistributionsLogistic_ffd_354;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_355> AgradDistributionsLogistic_ffd_355;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_356> AgradDistributionsLogistic_ffd_356;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_357> AgradDistributionsLogistic_ffd_357;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_358> AgradDistributionsLogistic_ffd_358;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_359> AgradDistributionsLogistic_ffd_359;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_360> AgradDistributionsLogistic_ffd_360;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_361> AgradDistributionsLogistic_ffd_361;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_362> AgradDistributionsLogistic_ffd_362;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_363> AgradDistributionsLogistic_ffd_363;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_364> AgradDistributionsLogistic_ffd_364;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_365> AgradDistributionsLogistic_ffd_365;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_366> AgradDistributionsLogistic_ffd_366;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_367> AgradDistributionsLogistic_ffd_367;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_368> AgradDistributionsLogistic_ffd_368;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_369> AgradDistributionsLogistic_ffd_369;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_370> AgradDistributionsLogistic_ffd_370;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_371> AgradDistributionsLogistic_ffd_371;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_372> AgradDistributionsLogistic_ffd_372;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_373> AgradDistributionsLogistic_ffd_373;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_374> AgradDistributionsLogistic_ffd_374;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_375> AgradDistributionsLogistic_ffd_375;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_376> AgradDistributionsLogistic_ffd_376;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_377> AgradDistributionsLogistic_ffd_377;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_378> AgradDistributionsLogistic_ffd_378;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_379> AgradDistributionsLogistic_ffd_379;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_380> AgradDistributionsLogistic_ffd_380;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_381> AgradDistributionsLogistic_ffd_381;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_382> AgradDistributionsLogistic_ffd_382;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_383> AgradDistributionsLogistic_ffd_383;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_384> AgradDistributionsLogistic_ffd_384;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_385> AgradDistributionsLogistic_ffd_385;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_386> AgradDistributionsLogistic_ffd_386;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_387> AgradDistributionsLogistic_ffd_387;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_388> AgradDistributionsLogistic_ffd_388;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_389> AgradDistributionsLogistic_ffd_389;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_390> AgradDistributionsLogistic_ffd_390;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_391> AgradDistributionsLogistic_ffd_391;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_392> AgradDistributionsLogistic_ffd_392;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_393> AgradDistributionsLogistic_ffd_393;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_394> AgradDistributionsLogistic_ffd_394;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_395> AgradDistributionsLogistic_ffd_395;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_396> AgradDistributionsLogistic_ffd_396;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_397> AgradDistributionsLogistic_ffd_397;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_398> AgradDistributionsLogistic_ffd_398;
typedef boost::mpl::vector<AgradDistributionsLogistic, type_ffd_399> AgradDistributionsLogistic_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_300, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_301, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_302, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_303, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_304, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_305, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_306, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_307, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_308, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_309, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_310, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_311, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_312, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_313, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_314, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_315, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_316, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_317, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_318, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_319, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_320, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_321, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_322, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_323, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_324, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_325, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_326, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_327, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_328, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_329, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_330, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_331, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_332, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_333, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_334, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_335, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_336, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_337, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_338, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_339, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_340, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_341, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_342, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_343, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_344, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_345, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_346, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_347, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_348, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_349, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_350, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_351, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_352, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_353, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_354, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_355, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_356, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_357, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_358, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_359, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_360, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_361, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_362, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_363, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_364, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_365, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_366, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_367, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_368, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_369, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_370, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_371, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_372, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_373, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_374, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_375, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_376, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_377, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_378, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_379, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_380, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_381, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_382, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_383, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_384, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_385, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_386, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_387, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_388, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_389, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_390, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_391, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_392, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_393, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_394, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_395, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_396, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_397, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_398, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradDistributionsLogistic_ffd_399, AgradDistributionTestFixture, AgradDistributionsLogistic_ffd_399);

