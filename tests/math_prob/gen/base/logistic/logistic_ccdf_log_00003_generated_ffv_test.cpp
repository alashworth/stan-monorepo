#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/logistic/logistic_ccdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffv_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffv_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffv_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffv_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffv_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffv_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffv_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_399;

typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_300> AgradCcdfLogLogistic_ffv_300;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_301> AgradCcdfLogLogistic_ffv_301;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_302> AgradCcdfLogLogistic_ffv_302;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_303> AgradCcdfLogLogistic_ffv_303;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_304> AgradCcdfLogLogistic_ffv_304;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_305> AgradCcdfLogLogistic_ffv_305;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_306> AgradCcdfLogLogistic_ffv_306;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_307> AgradCcdfLogLogistic_ffv_307;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_308> AgradCcdfLogLogistic_ffv_308;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_309> AgradCcdfLogLogistic_ffv_309;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_310> AgradCcdfLogLogistic_ffv_310;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_311> AgradCcdfLogLogistic_ffv_311;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_312> AgradCcdfLogLogistic_ffv_312;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_313> AgradCcdfLogLogistic_ffv_313;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_314> AgradCcdfLogLogistic_ffv_314;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_315> AgradCcdfLogLogistic_ffv_315;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_316> AgradCcdfLogLogistic_ffv_316;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_317> AgradCcdfLogLogistic_ffv_317;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_318> AgradCcdfLogLogistic_ffv_318;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_319> AgradCcdfLogLogistic_ffv_319;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_320> AgradCcdfLogLogistic_ffv_320;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_321> AgradCcdfLogLogistic_ffv_321;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_322> AgradCcdfLogLogistic_ffv_322;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_323> AgradCcdfLogLogistic_ffv_323;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_324> AgradCcdfLogLogistic_ffv_324;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_325> AgradCcdfLogLogistic_ffv_325;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_326> AgradCcdfLogLogistic_ffv_326;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_327> AgradCcdfLogLogistic_ffv_327;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_328> AgradCcdfLogLogistic_ffv_328;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_329> AgradCcdfLogLogistic_ffv_329;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_330> AgradCcdfLogLogistic_ffv_330;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_331> AgradCcdfLogLogistic_ffv_331;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_332> AgradCcdfLogLogistic_ffv_332;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_333> AgradCcdfLogLogistic_ffv_333;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_334> AgradCcdfLogLogistic_ffv_334;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_335> AgradCcdfLogLogistic_ffv_335;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_336> AgradCcdfLogLogistic_ffv_336;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_337> AgradCcdfLogLogistic_ffv_337;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_338> AgradCcdfLogLogistic_ffv_338;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_339> AgradCcdfLogLogistic_ffv_339;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_340> AgradCcdfLogLogistic_ffv_340;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_341> AgradCcdfLogLogistic_ffv_341;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_342> AgradCcdfLogLogistic_ffv_342;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_343> AgradCcdfLogLogistic_ffv_343;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_344> AgradCcdfLogLogistic_ffv_344;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_345> AgradCcdfLogLogistic_ffv_345;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_346> AgradCcdfLogLogistic_ffv_346;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_347> AgradCcdfLogLogistic_ffv_347;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_348> AgradCcdfLogLogistic_ffv_348;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_349> AgradCcdfLogLogistic_ffv_349;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_350> AgradCcdfLogLogistic_ffv_350;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_351> AgradCcdfLogLogistic_ffv_351;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_352> AgradCcdfLogLogistic_ffv_352;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_353> AgradCcdfLogLogistic_ffv_353;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_354> AgradCcdfLogLogistic_ffv_354;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_355> AgradCcdfLogLogistic_ffv_355;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_356> AgradCcdfLogLogistic_ffv_356;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_357> AgradCcdfLogLogistic_ffv_357;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_358> AgradCcdfLogLogistic_ffv_358;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_359> AgradCcdfLogLogistic_ffv_359;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_360> AgradCcdfLogLogistic_ffv_360;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_361> AgradCcdfLogLogistic_ffv_361;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_362> AgradCcdfLogLogistic_ffv_362;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_363> AgradCcdfLogLogistic_ffv_363;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_364> AgradCcdfLogLogistic_ffv_364;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_365> AgradCcdfLogLogistic_ffv_365;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_366> AgradCcdfLogLogistic_ffv_366;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_367> AgradCcdfLogLogistic_ffv_367;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_368> AgradCcdfLogLogistic_ffv_368;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_369> AgradCcdfLogLogistic_ffv_369;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_370> AgradCcdfLogLogistic_ffv_370;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_371> AgradCcdfLogLogistic_ffv_371;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_372> AgradCcdfLogLogistic_ffv_372;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_373> AgradCcdfLogLogistic_ffv_373;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_374> AgradCcdfLogLogistic_ffv_374;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_375> AgradCcdfLogLogistic_ffv_375;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_376> AgradCcdfLogLogistic_ffv_376;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_377> AgradCcdfLogLogistic_ffv_377;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_378> AgradCcdfLogLogistic_ffv_378;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_379> AgradCcdfLogLogistic_ffv_379;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_380> AgradCcdfLogLogistic_ffv_380;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_381> AgradCcdfLogLogistic_ffv_381;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_382> AgradCcdfLogLogistic_ffv_382;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_383> AgradCcdfLogLogistic_ffv_383;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_384> AgradCcdfLogLogistic_ffv_384;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_385> AgradCcdfLogLogistic_ffv_385;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_386> AgradCcdfLogLogistic_ffv_386;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_387> AgradCcdfLogLogistic_ffv_387;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_388> AgradCcdfLogLogistic_ffv_388;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_389> AgradCcdfLogLogistic_ffv_389;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_390> AgradCcdfLogLogistic_ffv_390;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_391> AgradCcdfLogLogistic_ffv_391;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_392> AgradCcdfLogLogistic_ffv_392;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_393> AgradCcdfLogLogistic_ffv_393;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_394> AgradCcdfLogLogistic_ffv_394;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_395> AgradCcdfLogLogistic_ffv_395;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_396> AgradCcdfLogLogistic_ffv_396;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_397> AgradCcdfLogLogistic_ffv_397;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_398> AgradCcdfLogLogistic_ffv_398;
typedef boost::mpl::vector<AgradCcdfLogLogistic, type_ffv_399> AgradCcdfLogLogistic_ffv_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_300, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_301, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_302, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_303, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_304, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_305, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_306, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_307, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_308, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_309, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_310, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_311, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_312, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_313, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_314, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_315, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_316, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_317, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_318, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_319, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_320, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_321, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_322, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_323, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_324, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_325, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_326, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_327, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_328, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_329, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_330, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_331, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_332, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_333, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_334, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_335, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_336, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_337, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_338, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_339, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_340, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_341, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_342, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_343, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_344, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_345, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_346, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_347, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_348, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_349, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_350, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_351, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_352, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_353, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_354, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_355, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_356, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_357, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_358, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_359, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_360, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_361, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_362, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_363, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_364, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_365, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_366, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_367, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_368, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_369, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_370, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_371, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_372, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_373, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_374, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_375, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_376, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_377, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_378, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_379, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_380, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_381, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_382, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_383, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_384, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_385, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_386, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_387, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_388, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_389, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_390, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_391, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_392, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_393, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_394, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_395, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_396, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_397, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_398, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogLogistic_ffv_399, AgradCcdfLogTestFixture, AgradCcdfLogLogistic_ffv_399);

