#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <gumbel/gumbel_ccdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<double, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<double, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;
typedef boost::mpl::vector<fvar<fvar<var> >, double, double, empty, empty, empty> type_ffv_192;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<double>, empty, empty, empty> type_ffv_193;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_194;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_195;
typedef boost::mpl::vector<fvar<fvar<var> >, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_196;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_197;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_198;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_199;

typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_0> AgradCcdfLogGumbel_ffv_0;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_1> AgradCcdfLogGumbel_ffv_1;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_2> AgradCcdfLogGumbel_ffv_2;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_3> AgradCcdfLogGumbel_ffv_3;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_4> AgradCcdfLogGumbel_ffv_4;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_5> AgradCcdfLogGumbel_ffv_5;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_6> AgradCcdfLogGumbel_ffv_6;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_7> AgradCcdfLogGumbel_ffv_7;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_8> AgradCcdfLogGumbel_ffv_8;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_9> AgradCcdfLogGumbel_ffv_9;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_10> AgradCcdfLogGumbel_ffv_10;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_11> AgradCcdfLogGumbel_ffv_11;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_12> AgradCcdfLogGumbel_ffv_12;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_13> AgradCcdfLogGumbel_ffv_13;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_14> AgradCcdfLogGumbel_ffv_14;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_15> AgradCcdfLogGumbel_ffv_15;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_16> AgradCcdfLogGumbel_ffv_16;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_17> AgradCcdfLogGumbel_ffv_17;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_18> AgradCcdfLogGumbel_ffv_18;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_19> AgradCcdfLogGumbel_ffv_19;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_20> AgradCcdfLogGumbel_ffv_20;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_21> AgradCcdfLogGumbel_ffv_21;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_22> AgradCcdfLogGumbel_ffv_22;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_23> AgradCcdfLogGumbel_ffv_23;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_24> AgradCcdfLogGumbel_ffv_24;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_25> AgradCcdfLogGumbel_ffv_25;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_26> AgradCcdfLogGumbel_ffv_26;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_27> AgradCcdfLogGumbel_ffv_27;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_28> AgradCcdfLogGumbel_ffv_28;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_29> AgradCcdfLogGumbel_ffv_29;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_30> AgradCcdfLogGumbel_ffv_30;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_31> AgradCcdfLogGumbel_ffv_31;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_32> AgradCcdfLogGumbel_ffv_32;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_33> AgradCcdfLogGumbel_ffv_33;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_34> AgradCcdfLogGumbel_ffv_34;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_35> AgradCcdfLogGumbel_ffv_35;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_36> AgradCcdfLogGumbel_ffv_36;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_37> AgradCcdfLogGumbel_ffv_37;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_38> AgradCcdfLogGumbel_ffv_38;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_39> AgradCcdfLogGumbel_ffv_39;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_40> AgradCcdfLogGumbel_ffv_40;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_41> AgradCcdfLogGumbel_ffv_41;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_42> AgradCcdfLogGumbel_ffv_42;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_43> AgradCcdfLogGumbel_ffv_43;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_44> AgradCcdfLogGumbel_ffv_44;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_45> AgradCcdfLogGumbel_ffv_45;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_46> AgradCcdfLogGumbel_ffv_46;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_47> AgradCcdfLogGumbel_ffv_47;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_48> AgradCcdfLogGumbel_ffv_48;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_49> AgradCcdfLogGumbel_ffv_49;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_50> AgradCcdfLogGumbel_ffv_50;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_51> AgradCcdfLogGumbel_ffv_51;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_52> AgradCcdfLogGumbel_ffv_52;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_53> AgradCcdfLogGumbel_ffv_53;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_54> AgradCcdfLogGumbel_ffv_54;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_55> AgradCcdfLogGumbel_ffv_55;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_56> AgradCcdfLogGumbel_ffv_56;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_57> AgradCcdfLogGumbel_ffv_57;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_58> AgradCcdfLogGumbel_ffv_58;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_59> AgradCcdfLogGumbel_ffv_59;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_60> AgradCcdfLogGumbel_ffv_60;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_61> AgradCcdfLogGumbel_ffv_61;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_62> AgradCcdfLogGumbel_ffv_62;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_63> AgradCcdfLogGumbel_ffv_63;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_64> AgradCcdfLogGumbel_ffv_64;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_65> AgradCcdfLogGumbel_ffv_65;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_66> AgradCcdfLogGumbel_ffv_66;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_67> AgradCcdfLogGumbel_ffv_67;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_68> AgradCcdfLogGumbel_ffv_68;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_69> AgradCcdfLogGumbel_ffv_69;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_70> AgradCcdfLogGumbel_ffv_70;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_71> AgradCcdfLogGumbel_ffv_71;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_72> AgradCcdfLogGumbel_ffv_72;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_73> AgradCcdfLogGumbel_ffv_73;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_74> AgradCcdfLogGumbel_ffv_74;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_75> AgradCcdfLogGumbel_ffv_75;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_76> AgradCcdfLogGumbel_ffv_76;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_77> AgradCcdfLogGumbel_ffv_77;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_78> AgradCcdfLogGumbel_ffv_78;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_79> AgradCcdfLogGumbel_ffv_79;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_80> AgradCcdfLogGumbel_ffv_80;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_81> AgradCcdfLogGumbel_ffv_81;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_82> AgradCcdfLogGumbel_ffv_82;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_83> AgradCcdfLogGumbel_ffv_83;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_84> AgradCcdfLogGumbel_ffv_84;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_85> AgradCcdfLogGumbel_ffv_85;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_86> AgradCcdfLogGumbel_ffv_86;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_87> AgradCcdfLogGumbel_ffv_87;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_88> AgradCcdfLogGumbel_ffv_88;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_89> AgradCcdfLogGumbel_ffv_89;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_90> AgradCcdfLogGumbel_ffv_90;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_91> AgradCcdfLogGumbel_ffv_91;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_92> AgradCcdfLogGumbel_ffv_92;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_93> AgradCcdfLogGumbel_ffv_93;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_94> AgradCcdfLogGumbel_ffv_94;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_95> AgradCcdfLogGumbel_ffv_95;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_96> AgradCcdfLogGumbel_ffv_96;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_97> AgradCcdfLogGumbel_ffv_97;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_98> AgradCcdfLogGumbel_ffv_98;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_99> AgradCcdfLogGumbel_ffv_99;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_100> AgradCcdfLogGumbel_ffv_100;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_101> AgradCcdfLogGumbel_ffv_101;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_102> AgradCcdfLogGumbel_ffv_102;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_103> AgradCcdfLogGumbel_ffv_103;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_104> AgradCcdfLogGumbel_ffv_104;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_105> AgradCcdfLogGumbel_ffv_105;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_106> AgradCcdfLogGumbel_ffv_106;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_107> AgradCcdfLogGumbel_ffv_107;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_108> AgradCcdfLogGumbel_ffv_108;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_109> AgradCcdfLogGumbel_ffv_109;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_110> AgradCcdfLogGumbel_ffv_110;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_111> AgradCcdfLogGumbel_ffv_111;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_112> AgradCcdfLogGumbel_ffv_112;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_113> AgradCcdfLogGumbel_ffv_113;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_114> AgradCcdfLogGumbel_ffv_114;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_115> AgradCcdfLogGumbel_ffv_115;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_116> AgradCcdfLogGumbel_ffv_116;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_117> AgradCcdfLogGumbel_ffv_117;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_118> AgradCcdfLogGumbel_ffv_118;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_119> AgradCcdfLogGumbel_ffv_119;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_120> AgradCcdfLogGumbel_ffv_120;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_121> AgradCcdfLogGumbel_ffv_121;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_122> AgradCcdfLogGumbel_ffv_122;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_123> AgradCcdfLogGumbel_ffv_123;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_124> AgradCcdfLogGumbel_ffv_124;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_125> AgradCcdfLogGumbel_ffv_125;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_126> AgradCcdfLogGumbel_ffv_126;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_127> AgradCcdfLogGumbel_ffv_127;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_128> AgradCcdfLogGumbel_ffv_128;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_129> AgradCcdfLogGumbel_ffv_129;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_130> AgradCcdfLogGumbel_ffv_130;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_131> AgradCcdfLogGumbel_ffv_131;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_132> AgradCcdfLogGumbel_ffv_132;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_133> AgradCcdfLogGumbel_ffv_133;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_134> AgradCcdfLogGumbel_ffv_134;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_135> AgradCcdfLogGumbel_ffv_135;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_136> AgradCcdfLogGumbel_ffv_136;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_137> AgradCcdfLogGumbel_ffv_137;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_138> AgradCcdfLogGumbel_ffv_138;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_139> AgradCcdfLogGumbel_ffv_139;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_140> AgradCcdfLogGumbel_ffv_140;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_141> AgradCcdfLogGumbel_ffv_141;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_142> AgradCcdfLogGumbel_ffv_142;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_143> AgradCcdfLogGumbel_ffv_143;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_144> AgradCcdfLogGumbel_ffv_144;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_145> AgradCcdfLogGumbel_ffv_145;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_146> AgradCcdfLogGumbel_ffv_146;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_147> AgradCcdfLogGumbel_ffv_147;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_148> AgradCcdfLogGumbel_ffv_148;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_149> AgradCcdfLogGumbel_ffv_149;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_150> AgradCcdfLogGumbel_ffv_150;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_151> AgradCcdfLogGumbel_ffv_151;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_152> AgradCcdfLogGumbel_ffv_152;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_153> AgradCcdfLogGumbel_ffv_153;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_154> AgradCcdfLogGumbel_ffv_154;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_155> AgradCcdfLogGumbel_ffv_155;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_156> AgradCcdfLogGumbel_ffv_156;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_157> AgradCcdfLogGumbel_ffv_157;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_158> AgradCcdfLogGumbel_ffv_158;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_159> AgradCcdfLogGumbel_ffv_159;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_160> AgradCcdfLogGumbel_ffv_160;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_161> AgradCcdfLogGumbel_ffv_161;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_162> AgradCcdfLogGumbel_ffv_162;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_163> AgradCcdfLogGumbel_ffv_163;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_164> AgradCcdfLogGumbel_ffv_164;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_165> AgradCcdfLogGumbel_ffv_165;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_166> AgradCcdfLogGumbel_ffv_166;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_167> AgradCcdfLogGumbel_ffv_167;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_168> AgradCcdfLogGumbel_ffv_168;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_169> AgradCcdfLogGumbel_ffv_169;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_170> AgradCcdfLogGumbel_ffv_170;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_171> AgradCcdfLogGumbel_ffv_171;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_172> AgradCcdfLogGumbel_ffv_172;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_173> AgradCcdfLogGumbel_ffv_173;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_174> AgradCcdfLogGumbel_ffv_174;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_175> AgradCcdfLogGumbel_ffv_175;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_176> AgradCcdfLogGumbel_ffv_176;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_177> AgradCcdfLogGumbel_ffv_177;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_178> AgradCcdfLogGumbel_ffv_178;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_179> AgradCcdfLogGumbel_ffv_179;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_180> AgradCcdfLogGumbel_ffv_180;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_181> AgradCcdfLogGumbel_ffv_181;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_182> AgradCcdfLogGumbel_ffv_182;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_183> AgradCcdfLogGumbel_ffv_183;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_184> AgradCcdfLogGumbel_ffv_184;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_185> AgradCcdfLogGumbel_ffv_185;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_186> AgradCcdfLogGumbel_ffv_186;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_187> AgradCcdfLogGumbel_ffv_187;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_188> AgradCcdfLogGumbel_ffv_188;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_189> AgradCcdfLogGumbel_ffv_189;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_190> AgradCcdfLogGumbel_ffv_190;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_191> AgradCcdfLogGumbel_ffv_191;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_192> AgradCcdfLogGumbel_ffv_192;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_193> AgradCcdfLogGumbel_ffv_193;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_194> AgradCcdfLogGumbel_ffv_194;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_195> AgradCcdfLogGumbel_ffv_195;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_196> AgradCcdfLogGumbel_ffv_196;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_197> AgradCcdfLogGumbel_ffv_197;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_198> AgradCcdfLogGumbel_ffv_198;
typedef boost::mpl::vector<AgradCcdfLogGumbel, type_ffv_199> AgradCcdfLogGumbel_ffv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_0, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_1, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_2, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_3, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_4, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_5, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_6, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_7, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_8, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_9, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_10, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_11, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_12, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_13, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_14, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_15, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_16, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_17, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_18, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_19, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_20, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_21, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_22, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_23, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_24, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_25, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_26, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_27, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_28, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_29, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_30, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_31, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_32, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_33, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_34, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_35, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_36, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_37, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_38, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_39, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_40, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_41, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_42, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_43, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_44, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_45, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_46, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_47, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_48, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_49, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_50, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_51, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_52, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_53, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_54, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_55, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_56, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_57, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_58, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_59, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_60, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_61, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_62, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_63, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_64, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_65, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_66, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_67, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_68, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_69, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_70, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_71, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_72, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_73, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_74, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_75, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_76, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_77, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_78, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_79, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_80, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_81, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_82, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_83, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_84, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_85, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_86, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_87, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_88, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_89, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_90, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_91, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_92, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_93, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_94, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_95, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_96, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_97, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_98, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_99, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_100, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_101, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_102, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_103, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_104, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_105, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_106, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_107, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_108, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_109, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_110, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_111, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_112, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_113, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_114, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_115, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_116, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_117, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_118, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_119, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_120, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_121, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_122, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_123, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_124, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_125, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_126, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_127, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_128, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_129, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_130, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_131, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_132, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_133, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_134, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_135, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_136, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_137, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_138, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_139, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_140, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_141, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_142, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_143, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_144, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_145, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_146, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_147, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_148, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_149, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_150, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_151, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_152, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_153, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_154, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_155, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_156, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_157, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_158, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_159, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_160, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_161, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_162, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_163, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_164, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_165, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_166, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_167, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_168, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_169, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_170, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_171, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_172, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_173, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_174, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_175, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_176, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_177, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_178, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_179, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_180, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_181, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_182, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_183, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_184, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_185, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_186, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_187, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_188, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_189, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_190, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_191, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_192, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_193, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_194, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_195, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_196, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_197, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_198, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCcdfLogGumbel_ffv_199, AgradCcdfLogTestFixture, AgradCcdfLogGumbel_ffv_199);

