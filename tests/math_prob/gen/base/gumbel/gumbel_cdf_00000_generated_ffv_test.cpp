#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <gumbel/gumbel_cdf_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<double, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<double, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;
typedef boost::mpl::vector<fvar<fvar<var> >, double, double, empty, empty, empty> type_ffv_192;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<double>, empty, empty, empty> type_ffv_193;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_194;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_195;
typedef boost::mpl::vector<fvar<fvar<var> >, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_196;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_197;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_198;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_199;

typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_0> AgradCdfGumbel_ffv_0;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_1> AgradCdfGumbel_ffv_1;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_2> AgradCdfGumbel_ffv_2;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_3> AgradCdfGumbel_ffv_3;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_4> AgradCdfGumbel_ffv_4;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_5> AgradCdfGumbel_ffv_5;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_6> AgradCdfGumbel_ffv_6;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_7> AgradCdfGumbel_ffv_7;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_8> AgradCdfGumbel_ffv_8;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_9> AgradCdfGumbel_ffv_9;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_10> AgradCdfGumbel_ffv_10;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_11> AgradCdfGumbel_ffv_11;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_12> AgradCdfGumbel_ffv_12;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_13> AgradCdfGumbel_ffv_13;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_14> AgradCdfGumbel_ffv_14;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_15> AgradCdfGumbel_ffv_15;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_16> AgradCdfGumbel_ffv_16;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_17> AgradCdfGumbel_ffv_17;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_18> AgradCdfGumbel_ffv_18;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_19> AgradCdfGumbel_ffv_19;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_20> AgradCdfGumbel_ffv_20;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_21> AgradCdfGumbel_ffv_21;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_22> AgradCdfGumbel_ffv_22;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_23> AgradCdfGumbel_ffv_23;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_24> AgradCdfGumbel_ffv_24;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_25> AgradCdfGumbel_ffv_25;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_26> AgradCdfGumbel_ffv_26;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_27> AgradCdfGumbel_ffv_27;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_28> AgradCdfGumbel_ffv_28;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_29> AgradCdfGumbel_ffv_29;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_30> AgradCdfGumbel_ffv_30;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_31> AgradCdfGumbel_ffv_31;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_32> AgradCdfGumbel_ffv_32;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_33> AgradCdfGumbel_ffv_33;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_34> AgradCdfGumbel_ffv_34;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_35> AgradCdfGumbel_ffv_35;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_36> AgradCdfGumbel_ffv_36;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_37> AgradCdfGumbel_ffv_37;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_38> AgradCdfGumbel_ffv_38;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_39> AgradCdfGumbel_ffv_39;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_40> AgradCdfGumbel_ffv_40;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_41> AgradCdfGumbel_ffv_41;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_42> AgradCdfGumbel_ffv_42;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_43> AgradCdfGumbel_ffv_43;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_44> AgradCdfGumbel_ffv_44;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_45> AgradCdfGumbel_ffv_45;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_46> AgradCdfGumbel_ffv_46;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_47> AgradCdfGumbel_ffv_47;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_48> AgradCdfGumbel_ffv_48;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_49> AgradCdfGumbel_ffv_49;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_50> AgradCdfGumbel_ffv_50;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_51> AgradCdfGumbel_ffv_51;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_52> AgradCdfGumbel_ffv_52;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_53> AgradCdfGumbel_ffv_53;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_54> AgradCdfGumbel_ffv_54;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_55> AgradCdfGumbel_ffv_55;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_56> AgradCdfGumbel_ffv_56;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_57> AgradCdfGumbel_ffv_57;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_58> AgradCdfGumbel_ffv_58;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_59> AgradCdfGumbel_ffv_59;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_60> AgradCdfGumbel_ffv_60;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_61> AgradCdfGumbel_ffv_61;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_62> AgradCdfGumbel_ffv_62;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_63> AgradCdfGumbel_ffv_63;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_64> AgradCdfGumbel_ffv_64;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_65> AgradCdfGumbel_ffv_65;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_66> AgradCdfGumbel_ffv_66;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_67> AgradCdfGumbel_ffv_67;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_68> AgradCdfGumbel_ffv_68;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_69> AgradCdfGumbel_ffv_69;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_70> AgradCdfGumbel_ffv_70;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_71> AgradCdfGumbel_ffv_71;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_72> AgradCdfGumbel_ffv_72;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_73> AgradCdfGumbel_ffv_73;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_74> AgradCdfGumbel_ffv_74;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_75> AgradCdfGumbel_ffv_75;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_76> AgradCdfGumbel_ffv_76;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_77> AgradCdfGumbel_ffv_77;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_78> AgradCdfGumbel_ffv_78;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_79> AgradCdfGumbel_ffv_79;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_80> AgradCdfGumbel_ffv_80;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_81> AgradCdfGumbel_ffv_81;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_82> AgradCdfGumbel_ffv_82;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_83> AgradCdfGumbel_ffv_83;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_84> AgradCdfGumbel_ffv_84;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_85> AgradCdfGumbel_ffv_85;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_86> AgradCdfGumbel_ffv_86;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_87> AgradCdfGumbel_ffv_87;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_88> AgradCdfGumbel_ffv_88;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_89> AgradCdfGumbel_ffv_89;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_90> AgradCdfGumbel_ffv_90;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_91> AgradCdfGumbel_ffv_91;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_92> AgradCdfGumbel_ffv_92;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_93> AgradCdfGumbel_ffv_93;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_94> AgradCdfGumbel_ffv_94;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_95> AgradCdfGumbel_ffv_95;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_96> AgradCdfGumbel_ffv_96;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_97> AgradCdfGumbel_ffv_97;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_98> AgradCdfGumbel_ffv_98;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_99> AgradCdfGumbel_ffv_99;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_100> AgradCdfGumbel_ffv_100;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_101> AgradCdfGumbel_ffv_101;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_102> AgradCdfGumbel_ffv_102;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_103> AgradCdfGumbel_ffv_103;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_104> AgradCdfGumbel_ffv_104;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_105> AgradCdfGumbel_ffv_105;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_106> AgradCdfGumbel_ffv_106;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_107> AgradCdfGumbel_ffv_107;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_108> AgradCdfGumbel_ffv_108;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_109> AgradCdfGumbel_ffv_109;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_110> AgradCdfGumbel_ffv_110;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_111> AgradCdfGumbel_ffv_111;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_112> AgradCdfGumbel_ffv_112;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_113> AgradCdfGumbel_ffv_113;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_114> AgradCdfGumbel_ffv_114;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_115> AgradCdfGumbel_ffv_115;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_116> AgradCdfGumbel_ffv_116;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_117> AgradCdfGumbel_ffv_117;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_118> AgradCdfGumbel_ffv_118;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_119> AgradCdfGumbel_ffv_119;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_120> AgradCdfGumbel_ffv_120;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_121> AgradCdfGumbel_ffv_121;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_122> AgradCdfGumbel_ffv_122;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_123> AgradCdfGumbel_ffv_123;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_124> AgradCdfGumbel_ffv_124;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_125> AgradCdfGumbel_ffv_125;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_126> AgradCdfGumbel_ffv_126;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_127> AgradCdfGumbel_ffv_127;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_128> AgradCdfGumbel_ffv_128;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_129> AgradCdfGumbel_ffv_129;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_130> AgradCdfGumbel_ffv_130;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_131> AgradCdfGumbel_ffv_131;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_132> AgradCdfGumbel_ffv_132;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_133> AgradCdfGumbel_ffv_133;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_134> AgradCdfGumbel_ffv_134;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_135> AgradCdfGumbel_ffv_135;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_136> AgradCdfGumbel_ffv_136;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_137> AgradCdfGumbel_ffv_137;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_138> AgradCdfGumbel_ffv_138;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_139> AgradCdfGumbel_ffv_139;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_140> AgradCdfGumbel_ffv_140;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_141> AgradCdfGumbel_ffv_141;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_142> AgradCdfGumbel_ffv_142;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_143> AgradCdfGumbel_ffv_143;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_144> AgradCdfGumbel_ffv_144;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_145> AgradCdfGumbel_ffv_145;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_146> AgradCdfGumbel_ffv_146;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_147> AgradCdfGumbel_ffv_147;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_148> AgradCdfGumbel_ffv_148;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_149> AgradCdfGumbel_ffv_149;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_150> AgradCdfGumbel_ffv_150;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_151> AgradCdfGumbel_ffv_151;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_152> AgradCdfGumbel_ffv_152;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_153> AgradCdfGumbel_ffv_153;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_154> AgradCdfGumbel_ffv_154;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_155> AgradCdfGumbel_ffv_155;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_156> AgradCdfGumbel_ffv_156;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_157> AgradCdfGumbel_ffv_157;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_158> AgradCdfGumbel_ffv_158;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_159> AgradCdfGumbel_ffv_159;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_160> AgradCdfGumbel_ffv_160;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_161> AgradCdfGumbel_ffv_161;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_162> AgradCdfGumbel_ffv_162;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_163> AgradCdfGumbel_ffv_163;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_164> AgradCdfGumbel_ffv_164;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_165> AgradCdfGumbel_ffv_165;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_166> AgradCdfGumbel_ffv_166;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_167> AgradCdfGumbel_ffv_167;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_168> AgradCdfGumbel_ffv_168;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_169> AgradCdfGumbel_ffv_169;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_170> AgradCdfGumbel_ffv_170;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_171> AgradCdfGumbel_ffv_171;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_172> AgradCdfGumbel_ffv_172;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_173> AgradCdfGumbel_ffv_173;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_174> AgradCdfGumbel_ffv_174;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_175> AgradCdfGumbel_ffv_175;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_176> AgradCdfGumbel_ffv_176;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_177> AgradCdfGumbel_ffv_177;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_178> AgradCdfGumbel_ffv_178;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_179> AgradCdfGumbel_ffv_179;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_180> AgradCdfGumbel_ffv_180;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_181> AgradCdfGumbel_ffv_181;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_182> AgradCdfGumbel_ffv_182;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_183> AgradCdfGumbel_ffv_183;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_184> AgradCdfGumbel_ffv_184;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_185> AgradCdfGumbel_ffv_185;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_186> AgradCdfGumbel_ffv_186;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_187> AgradCdfGumbel_ffv_187;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_188> AgradCdfGumbel_ffv_188;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_189> AgradCdfGumbel_ffv_189;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_190> AgradCdfGumbel_ffv_190;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_191> AgradCdfGumbel_ffv_191;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_192> AgradCdfGumbel_ffv_192;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_193> AgradCdfGumbel_ffv_193;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_194> AgradCdfGumbel_ffv_194;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_195> AgradCdfGumbel_ffv_195;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_196> AgradCdfGumbel_ffv_196;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_197> AgradCdfGumbel_ffv_197;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_198> AgradCdfGumbel_ffv_198;
typedef boost::mpl::vector<AgradCdfGumbel, type_ffv_199> AgradCdfGumbel_ffv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_0, AgradCdfTestFixture, AgradCdfGumbel_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_1, AgradCdfTestFixture, AgradCdfGumbel_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_2, AgradCdfTestFixture, AgradCdfGumbel_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_3, AgradCdfTestFixture, AgradCdfGumbel_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_4, AgradCdfTestFixture, AgradCdfGumbel_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_5, AgradCdfTestFixture, AgradCdfGumbel_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_6, AgradCdfTestFixture, AgradCdfGumbel_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_7, AgradCdfTestFixture, AgradCdfGumbel_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_8, AgradCdfTestFixture, AgradCdfGumbel_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_9, AgradCdfTestFixture, AgradCdfGumbel_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_10, AgradCdfTestFixture, AgradCdfGumbel_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_11, AgradCdfTestFixture, AgradCdfGumbel_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_12, AgradCdfTestFixture, AgradCdfGumbel_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_13, AgradCdfTestFixture, AgradCdfGumbel_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_14, AgradCdfTestFixture, AgradCdfGumbel_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_15, AgradCdfTestFixture, AgradCdfGumbel_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_16, AgradCdfTestFixture, AgradCdfGumbel_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_17, AgradCdfTestFixture, AgradCdfGumbel_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_18, AgradCdfTestFixture, AgradCdfGumbel_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_19, AgradCdfTestFixture, AgradCdfGumbel_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_20, AgradCdfTestFixture, AgradCdfGumbel_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_21, AgradCdfTestFixture, AgradCdfGumbel_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_22, AgradCdfTestFixture, AgradCdfGumbel_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_23, AgradCdfTestFixture, AgradCdfGumbel_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_24, AgradCdfTestFixture, AgradCdfGumbel_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_25, AgradCdfTestFixture, AgradCdfGumbel_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_26, AgradCdfTestFixture, AgradCdfGumbel_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_27, AgradCdfTestFixture, AgradCdfGumbel_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_28, AgradCdfTestFixture, AgradCdfGumbel_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_29, AgradCdfTestFixture, AgradCdfGumbel_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_30, AgradCdfTestFixture, AgradCdfGumbel_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_31, AgradCdfTestFixture, AgradCdfGumbel_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_32, AgradCdfTestFixture, AgradCdfGumbel_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_33, AgradCdfTestFixture, AgradCdfGumbel_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_34, AgradCdfTestFixture, AgradCdfGumbel_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_35, AgradCdfTestFixture, AgradCdfGumbel_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_36, AgradCdfTestFixture, AgradCdfGumbel_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_37, AgradCdfTestFixture, AgradCdfGumbel_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_38, AgradCdfTestFixture, AgradCdfGumbel_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_39, AgradCdfTestFixture, AgradCdfGumbel_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_40, AgradCdfTestFixture, AgradCdfGumbel_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_41, AgradCdfTestFixture, AgradCdfGumbel_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_42, AgradCdfTestFixture, AgradCdfGumbel_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_43, AgradCdfTestFixture, AgradCdfGumbel_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_44, AgradCdfTestFixture, AgradCdfGumbel_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_45, AgradCdfTestFixture, AgradCdfGumbel_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_46, AgradCdfTestFixture, AgradCdfGumbel_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_47, AgradCdfTestFixture, AgradCdfGumbel_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_48, AgradCdfTestFixture, AgradCdfGumbel_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_49, AgradCdfTestFixture, AgradCdfGumbel_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_50, AgradCdfTestFixture, AgradCdfGumbel_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_51, AgradCdfTestFixture, AgradCdfGumbel_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_52, AgradCdfTestFixture, AgradCdfGumbel_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_53, AgradCdfTestFixture, AgradCdfGumbel_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_54, AgradCdfTestFixture, AgradCdfGumbel_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_55, AgradCdfTestFixture, AgradCdfGumbel_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_56, AgradCdfTestFixture, AgradCdfGumbel_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_57, AgradCdfTestFixture, AgradCdfGumbel_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_58, AgradCdfTestFixture, AgradCdfGumbel_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_59, AgradCdfTestFixture, AgradCdfGumbel_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_60, AgradCdfTestFixture, AgradCdfGumbel_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_61, AgradCdfTestFixture, AgradCdfGumbel_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_62, AgradCdfTestFixture, AgradCdfGumbel_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_63, AgradCdfTestFixture, AgradCdfGumbel_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_64, AgradCdfTestFixture, AgradCdfGumbel_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_65, AgradCdfTestFixture, AgradCdfGumbel_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_66, AgradCdfTestFixture, AgradCdfGumbel_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_67, AgradCdfTestFixture, AgradCdfGumbel_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_68, AgradCdfTestFixture, AgradCdfGumbel_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_69, AgradCdfTestFixture, AgradCdfGumbel_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_70, AgradCdfTestFixture, AgradCdfGumbel_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_71, AgradCdfTestFixture, AgradCdfGumbel_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_72, AgradCdfTestFixture, AgradCdfGumbel_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_73, AgradCdfTestFixture, AgradCdfGumbel_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_74, AgradCdfTestFixture, AgradCdfGumbel_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_75, AgradCdfTestFixture, AgradCdfGumbel_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_76, AgradCdfTestFixture, AgradCdfGumbel_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_77, AgradCdfTestFixture, AgradCdfGumbel_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_78, AgradCdfTestFixture, AgradCdfGumbel_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_79, AgradCdfTestFixture, AgradCdfGumbel_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_80, AgradCdfTestFixture, AgradCdfGumbel_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_81, AgradCdfTestFixture, AgradCdfGumbel_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_82, AgradCdfTestFixture, AgradCdfGumbel_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_83, AgradCdfTestFixture, AgradCdfGumbel_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_84, AgradCdfTestFixture, AgradCdfGumbel_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_85, AgradCdfTestFixture, AgradCdfGumbel_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_86, AgradCdfTestFixture, AgradCdfGumbel_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_87, AgradCdfTestFixture, AgradCdfGumbel_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_88, AgradCdfTestFixture, AgradCdfGumbel_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_89, AgradCdfTestFixture, AgradCdfGumbel_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_90, AgradCdfTestFixture, AgradCdfGumbel_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_91, AgradCdfTestFixture, AgradCdfGumbel_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_92, AgradCdfTestFixture, AgradCdfGumbel_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_93, AgradCdfTestFixture, AgradCdfGumbel_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_94, AgradCdfTestFixture, AgradCdfGumbel_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_95, AgradCdfTestFixture, AgradCdfGumbel_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_96, AgradCdfTestFixture, AgradCdfGumbel_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_97, AgradCdfTestFixture, AgradCdfGumbel_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_98, AgradCdfTestFixture, AgradCdfGumbel_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_99, AgradCdfTestFixture, AgradCdfGumbel_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_100, AgradCdfTestFixture, AgradCdfGumbel_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_101, AgradCdfTestFixture, AgradCdfGumbel_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_102, AgradCdfTestFixture, AgradCdfGumbel_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_103, AgradCdfTestFixture, AgradCdfGumbel_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_104, AgradCdfTestFixture, AgradCdfGumbel_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_105, AgradCdfTestFixture, AgradCdfGumbel_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_106, AgradCdfTestFixture, AgradCdfGumbel_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_107, AgradCdfTestFixture, AgradCdfGumbel_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_108, AgradCdfTestFixture, AgradCdfGumbel_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_109, AgradCdfTestFixture, AgradCdfGumbel_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_110, AgradCdfTestFixture, AgradCdfGumbel_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_111, AgradCdfTestFixture, AgradCdfGumbel_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_112, AgradCdfTestFixture, AgradCdfGumbel_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_113, AgradCdfTestFixture, AgradCdfGumbel_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_114, AgradCdfTestFixture, AgradCdfGumbel_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_115, AgradCdfTestFixture, AgradCdfGumbel_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_116, AgradCdfTestFixture, AgradCdfGumbel_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_117, AgradCdfTestFixture, AgradCdfGumbel_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_118, AgradCdfTestFixture, AgradCdfGumbel_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_119, AgradCdfTestFixture, AgradCdfGumbel_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_120, AgradCdfTestFixture, AgradCdfGumbel_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_121, AgradCdfTestFixture, AgradCdfGumbel_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_122, AgradCdfTestFixture, AgradCdfGumbel_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_123, AgradCdfTestFixture, AgradCdfGumbel_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_124, AgradCdfTestFixture, AgradCdfGumbel_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_125, AgradCdfTestFixture, AgradCdfGumbel_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_126, AgradCdfTestFixture, AgradCdfGumbel_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_127, AgradCdfTestFixture, AgradCdfGumbel_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_128, AgradCdfTestFixture, AgradCdfGumbel_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_129, AgradCdfTestFixture, AgradCdfGumbel_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_130, AgradCdfTestFixture, AgradCdfGumbel_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_131, AgradCdfTestFixture, AgradCdfGumbel_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_132, AgradCdfTestFixture, AgradCdfGumbel_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_133, AgradCdfTestFixture, AgradCdfGumbel_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_134, AgradCdfTestFixture, AgradCdfGumbel_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_135, AgradCdfTestFixture, AgradCdfGumbel_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_136, AgradCdfTestFixture, AgradCdfGumbel_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_137, AgradCdfTestFixture, AgradCdfGumbel_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_138, AgradCdfTestFixture, AgradCdfGumbel_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_139, AgradCdfTestFixture, AgradCdfGumbel_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_140, AgradCdfTestFixture, AgradCdfGumbel_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_141, AgradCdfTestFixture, AgradCdfGumbel_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_142, AgradCdfTestFixture, AgradCdfGumbel_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_143, AgradCdfTestFixture, AgradCdfGumbel_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_144, AgradCdfTestFixture, AgradCdfGumbel_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_145, AgradCdfTestFixture, AgradCdfGumbel_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_146, AgradCdfTestFixture, AgradCdfGumbel_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_147, AgradCdfTestFixture, AgradCdfGumbel_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_148, AgradCdfTestFixture, AgradCdfGumbel_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_149, AgradCdfTestFixture, AgradCdfGumbel_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_150, AgradCdfTestFixture, AgradCdfGumbel_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_151, AgradCdfTestFixture, AgradCdfGumbel_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_152, AgradCdfTestFixture, AgradCdfGumbel_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_153, AgradCdfTestFixture, AgradCdfGumbel_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_154, AgradCdfTestFixture, AgradCdfGumbel_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_155, AgradCdfTestFixture, AgradCdfGumbel_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_156, AgradCdfTestFixture, AgradCdfGumbel_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_157, AgradCdfTestFixture, AgradCdfGumbel_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_158, AgradCdfTestFixture, AgradCdfGumbel_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_159, AgradCdfTestFixture, AgradCdfGumbel_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_160, AgradCdfTestFixture, AgradCdfGumbel_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_161, AgradCdfTestFixture, AgradCdfGumbel_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_162, AgradCdfTestFixture, AgradCdfGumbel_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_163, AgradCdfTestFixture, AgradCdfGumbel_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_164, AgradCdfTestFixture, AgradCdfGumbel_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_165, AgradCdfTestFixture, AgradCdfGumbel_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_166, AgradCdfTestFixture, AgradCdfGumbel_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_167, AgradCdfTestFixture, AgradCdfGumbel_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_168, AgradCdfTestFixture, AgradCdfGumbel_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_169, AgradCdfTestFixture, AgradCdfGumbel_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_170, AgradCdfTestFixture, AgradCdfGumbel_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_171, AgradCdfTestFixture, AgradCdfGumbel_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_172, AgradCdfTestFixture, AgradCdfGumbel_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_173, AgradCdfTestFixture, AgradCdfGumbel_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_174, AgradCdfTestFixture, AgradCdfGumbel_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_175, AgradCdfTestFixture, AgradCdfGumbel_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_176, AgradCdfTestFixture, AgradCdfGumbel_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_177, AgradCdfTestFixture, AgradCdfGumbel_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_178, AgradCdfTestFixture, AgradCdfGumbel_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_179, AgradCdfTestFixture, AgradCdfGumbel_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_180, AgradCdfTestFixture, AgradCdfGumbel_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_181, AgradCdfTestFixture, AgradCdfGumbel_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_182, AgradCdfTestFixture, AgradCdfGumbel_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_183, AgradCdfTestFixture, AgradCdfGumbel_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_184, AgradCdfTestFixture, AgradCdfGumbel_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_185, AgradCdfTestFixture, AgradCdfGumbel_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_186, AgradCdfTestFixture, AgradCdfGumbel_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_187, AgradCdfTestFixture, AgradCdfGumbel_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_188, AgradCdfTestFixture, AgradCdfGumbel_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_189, AgradCdfTestFixture, AgradCdfGumbel_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_190, AgradCdfTestFixture, AgradCdfGumbel_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_191, AgradCdfTestFixture, AgradCdfGumbel_ffv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_192, AgradCdfTestFixture, AgradCdfGumbel_ffv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_193, AgradCdfTestFixture, AgradCdfGumbel_ffv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_194, AgradCdfTestFixture, AgradCdfGumbel_ffv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_195, AgradCdfTestFixture, AgradCdfGumbel_ffv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_196, AgradCdfTestFixture, AgradCdfGumbel_ffv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_197, AgradCdfTestFixture, AgradCdfGumbel_ffv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_198, AgradCdfTestFixture, AgradCdfGumbel_ffv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfGumbel_ffv_199, AgradCdfTestFixture, AgradCdfGumbel_ffv_199);

