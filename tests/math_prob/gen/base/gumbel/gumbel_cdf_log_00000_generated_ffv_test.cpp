#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <gumbel/gumbel_cdf_log_test.hpp>

typedef boost::mpl::vector<double, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_0;
typedef boost::mpl::vector<double, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_1;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_2;
typedef boost::mpl::vector<double, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_3;
typedef boost::mpl::vector<double, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_4;
typedef boost::mpl::vector<double, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_5;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_6;
typedef boost::mpl::vector<double, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_7;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_8;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_9;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_10;
typedef boost::mpl::vector<double, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_11;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_12;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_13;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_14;
typedef boost::mpl::vector<double, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_15;
typedef boost::mpl::vector<double, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_16;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_17;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_18;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_19;
typedef boost::mpl::vector<double, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_20;
typedef boost::mpl::vector<double, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_21;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_22;
typedef boost::mpl::vector<double, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_23;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_24;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_25;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_26;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_27;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_28;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_29;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_30;
typedef boost::mpl::vector<double, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_31;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_32;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_33;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_34;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_35;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_36;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_37;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_38;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_39;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_40;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_41;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_42;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_43;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_44;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_45;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_46;
typedef boost::mpl::vector<double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_47;
typedef boost::mpl::vector<std::vector<double>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_48;
typedef boost::mpl::vector<std::vector<double>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_49;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_50;
typedef boost::mpl::vector<std::vector<double>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_51;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_52;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_53;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_54;
typedef boost::mpl::vector<std::vector<double>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_55;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_56;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_57;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_58;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_59;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_60;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_61;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_62;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_63;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_64;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_65;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_66;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_67;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_68;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_69;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_70;
typedef boost::mpl::vector<std::vector<double>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_71;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_72;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_73;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_74;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_75;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_76;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_77;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_78;
typedef boost::mpl::vector<std::vector<double>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_79;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_80;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_81;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_82;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_83;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_84;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_85;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_86;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_87;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_88;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_89;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_90;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_91;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_92;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_93;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_94;
typedef boost::mpl::vector<std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_95;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_96;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_97;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_98;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_99;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_100;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_101;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_102;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_103;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_104;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_105;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_106;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_107;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_108;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_109;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_110;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_111;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_112;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_113;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_114;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_115;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_116;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_117;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_118;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_119;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_120;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_121;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_122;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_123;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_124;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_125;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_126;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_127;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_128;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_129;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_130;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_131;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_132;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_133;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_134;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_135;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_136;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_137;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_138;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_139;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_140;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_141;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_142;
typedef boost::mpl::vector<Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_143;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_144;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_145;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_146;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_147;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<var> >, empty, empty, empty> type_ffv_148;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_149;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_150;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_151;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_152;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_153;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_154;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_155;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_156;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_157;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_158;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_159;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, double, empty, empty, empty> type_ffv_160;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<double>, empty, empty, empty> type_ffv_161;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_162;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_163;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, fvar<fvar<var> >, empty, empty, empty> type_ffv_164;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_165;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_166;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<var> >, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_167;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, double, empty, empty, empty> type_ffv_168;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<double>, empty, empty, empty> type_ffv_169;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_170;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_171;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, fvar<fvar<var> >, empty, empty, empty> type_ffv_172;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_173;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_174;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_175;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffv_176;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffv_177;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_178;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_179;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, fvar<fvar<var> >, empty, empty, empty> type_ffv_180;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_181;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_182;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_183;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffv_184;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffv_185;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_186;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_187;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, fvar<fvar<var> >, empty, empty, empty> type_ffv_188;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_189;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_190;
typedef boost::mpl::vector<Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_191;
typedef boost::mpl::vector<fvar<fvar<var> >, double, double, empty, empty, empty> type_ffv_192;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<double>, empty, empty, empty> type_ffv_193;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_194;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_195;
typedef boost::mpl::vector<fvar<fvar<var> >, double, fvar<fvar<var> >, empty, empty, empty> type_ffv_196;
typedef boost::mpl::vector<fvar<fvar<var> >, double, std::vector<fvar<fvar<var> >>, empty, empty, empty> type_ffv_197;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffv_198;
typedef boost::mpl::vector<fvar<fvar<var> >, double, Eigen::Matrix<fvar<fvar<var> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffv_199;

typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_0> AgradCdfLogGumbel_ffv_0;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_1> AgradCdfLogGumbel_ffv_1;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_2> AgradCdfLogGumbel_ffv_2;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_3> AgradCdfLogGumbel_ffv_3;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_4> AgradCdfLogGumbel_ffv_4;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_5> AgradCdfLogGumbel_ffv_5;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_6> AgradCdfLogGumbel_ffv_6;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_7> AgradCdfLogGumbel_ffv_7;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_8> AgradCdfLogGumbel_ffv_8;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_9> AgradCdfLogGumbel_ffv_9;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_10> AgradCdfLogGumbel_ffv_10;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_11> AgradCdfLogGumbel_ffv_11;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_12> AgradCdfLogGumbel_ffv_12;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_13> AgradCdfLogGumbel_ffv_13;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_14> AgradCdfLogGumbel_ffv_14;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_15> AgradCdfLogGumbel_ffv_15;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_16> AgradCdfLogGumbel_ffv_16;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_17> AgradCdfLogGumbel_ffv_17;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_18> AgradCdfLogGumbel_ffv_18;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_19> AgradCdfLogGumbel_ffv_19;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_20> AgradCdfLogGumbel_ffv_20;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_21> AgradCdfLogGumbel_ffv_21;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_22> AgradCdfLogGumbel_ffv_22;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_23> AgradCdfLogGumbel_ffv_23;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_24> AgradCdfLogGumbel_ffv_24;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_25> AgradCdfLogGumbel_ffv_25;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_26> AgradCdfLogGumbel_ffv_26;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_27> AgradCdfLogGumbel_ffv_27;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_28> AgradCdfLogGumbel_ffv_28;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_29> AgradCdfLogGumbel_ffv_29;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_30> AgradCdfLogGumbel_ffv_30;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_31> AgradCdfLogGumbel_ffv_31;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_32> AgradCdfLogGumbel_ffv_32;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_33> AgradCdfLogGumbel_ffv_33;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_34> AgradCdfLogGumbel_ffv_34;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_35> AgradCdfLogGumbel_ffv_35;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_36> AgradCdfLogGumbel_ffv_36;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_37> AgradCdfLogGumbel_ffv_37;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_38> AgradCdfLogGumbel_ffv_38;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_39> AgradCdfLogGumbel_ffv_39;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_40> AgradCdfLogGumbel_ffv_40;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_41> AgradCdfLogGumbel_ffv_41;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_42> AgradCdfLogGumbel_ffv_42;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_43> AgradCdfLogGumbel_ffv_43;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_44> AgradCdfLogGumbel_ffv_44;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_45> AgradCdfLogGumbel_ffv_45;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_46> AgradCdfLogGumbel_ffv_46;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_47> AgradCdfLogGumbel_ffv_47;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_48> AgradCdfLogGumbel_ffv_48;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_49> AgradCdfLogGumbel_ffv_49;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_50> AgradCdfLogGumbel_ffv_50;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_51> AgradCdfLogGumbel_ffv_51;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_52> AgradCdfLogGumbel_ffv_52;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_53> AgradCdfLogGumbel_ffv_53;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_54> AgradCdfLogGumbel_ffv_54;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_55> AgradCdfLogGumbel_ffv_55;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_56> AgradCdfLogGumbel_ffv_56;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_57> AgradCdfLogGumbel_ffv_57;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_58> AgradCdfLogGumbel_ffv_58;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_59> AgradCdfLogGumbel_ffv_59;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_60> AgradCdfLogGumbel_ffv_60;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_61> AgradCdfLogGumbel_ffv_61;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_62> AgradCdfLogGumbel_ffv_62;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_63> AgradCdfLogGumbel_ffv_63;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_64> AgradCdfLogGumbel_ffv_64;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_65> AgradCdfLogGumbel_ffv_65;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_66> AgradCdfLogGumbel_ffv_66;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_67> AgradCdfLogGumbel_ffv_67;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_68> AgradCdfLogGumbel_ffv_68;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_69> AgradCdfLogGumbel_ffv_69;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_70> AgradCdfLogGumbel_ffv_70;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_71> AgradCdfLogGumbel_ffv_71;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_72> AgradCdfLogGumbel_ffv_72;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_73> AgradCdfLogGumbel_ffv_73;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_74> AgradCdfLogGumbel_ffv_74;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_75> AgradCdfLogGumbel_ffv_75;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_76> AgradCdfLogGumbel_ffv_76;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_77> AgradCdfLogGumbel_ffv_77;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_78> AgradCdfLogGumbel_ffv_78;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_79> AgradCdfLogGumbel_ffv_79;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_80> AgradCdfLogGumbel_ffv_80;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_81> AgradCdfLogGumbel_ffv_81;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_82> AgradCdfLogGumbel_ffv_82;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_83> AgradCdfLogGumbel_ffv_83;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_84> AgradCdfLogGumbel_ffv_84;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_85> AgradCdfLogGumbel_ffv_85;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_86> AgradCdfLogGumbel_ffv_86;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_87> AgradCdfLogGumbel_ffv_87;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_88> AgradCdfLogGumbel_ffv_88;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_89> AgradCdfLogGumbel_ffv_89;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_90> AgradCdfLogGumbel_ffv_90;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_91> AgradCdfLogGumbel_ffv_91;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_92> AgradCdfLogGumbel_ffv_92;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_93> AgradCdfLogGumbel_ffv_93;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_94> AgradCdfLogGumbel_ffv_94;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_95> AgradCdfLogGumbel_ffv_95;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_96> AgradCdfLogGumbel_ffv_96;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_97> AgradCdfLogGumbel_ffv_97;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_98> AgradCdfLogGumbel_ffv_98;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_99> AgradCdfLogGumbel_ffv_99;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_100> AgradCdfLogGumbel_ffv_100;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_101> AgradCdfLogGumbel_ffv_101;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_102> AgradCdfLogGumbel_ffv_102;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_103> AgradCdfLogGumbel_ffv_103;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_104> AgradCdfLogGumbel_ffv_104;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_105> AgradCdfLogGumbel_ffv_105;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_106> AgradCdfLogGumbel_ffv_106;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_107> AgradCdfLogGumbel_ffv_107;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_108> AgradCdfLogGumbel_ffv_108;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_109> AgradCdfLogGumbel_ffv_109;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_110> AgradCdfLogGumbel_ffv_110;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_111> AgradCdfLogGumbel_ffv_111;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_112> AgradCdfLogGumbel_ffv_112;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_113> AgradCdfLogGumbel_ffv_113;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_114> AgradCdfLogGumbel_ffv_114;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_115> AgradCdfLogGumbel_ffv_115;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_116> AgradCdfLogGumbel_ffv_116;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_117> AgradCdfLogGumbel_ffv_117;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_118> AgradCdfLogGumbel_ffv_118;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_119> AgradCdfLogGumbel_ffv_119;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_120> AgradCdfLogGumbel_ffv_120;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_121> AgradCdfLogGumbel_ffv_121;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_122> AgradCdfLogGumbel_ffv_122;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_123> AgradCdfLogGumbel_ffv_123;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_124> AgradCdfLogGumbel_ffv_124;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_125> AgradCdfLogGumbel_ffv_125;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_126> AgradCdfLogGumbel_ffv_126;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_127> AgradCdfLogGumbel_ffv_127;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_128> AgradCdfLogGumbel_ffv_128;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_129> AgradCdfLogGumbel_ffv_129;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_130> AgradCdfLogGumbel_ffv_130;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_131> AgradCdfLogGumbel_ffv_131;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_132> AgradCdfLogGumbel_ffv_132;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_133> AgradCdfLogGumbel_ffv_133;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_134> AgradCdfLogGumbel_ffv_134;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_135> AgradCdfLogGumbel_ffv_135;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_136> AgradCdfLogGumbel_ffv_136;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_137> AgradCdfLogGumbel_ffv_137;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_138> AgradCdfLogGumbel_ffv_138;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_139> AgradCdfLogGumbel_ffv_139;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_140> AgradCdfLogGumbel_ffv_140;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_141> AgradCdfLogGumbel_ffv_141;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_142> AgradCdfLogGumbel_ffv_142;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_143> AgradCdfLogGumbel_ffv_143;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_144> AgradCdfLogGumbel_ffv_144;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_145> AgradCdfLogGumbel_ffv_145;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_146> AgradCdfLogGumbel_ffv_146;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_147> AgradCdfLogGumbel_ffv_147;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_148> AgradCdfLogGumbel_ffv_148;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_149> AgradCdfLogGumbel_ffv_149;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_150> AgradCdfLogGumbel_ffv_150;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_151> AgradCdfLogGumbel_ffv_151;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_152> AgradCdfLogGumbel_ffv_152;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_153> AgradCdfLogGumbel_ffv_153;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_154> AgradCdfLogGumbel_ffv_154;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_155> AgradCdfLogGumbel_ffv_155;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_156> AgradCdfLogGumbel_ffv_156;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_157> AgradCdfLogGumbel_ffv_157;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_158> AgradCdfLogGumbel_ffv_158;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_159> AgradCdfLogGumbel_ffv_159;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_160> AgradCdfLogGumbel_ffv_160;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_161> AgradCdfLogGumbel_ffv_161;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_162> AgradCdfLogGumbel_ffv_162;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_163> AgradCdfLogGumbel_ffv_163;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_164> AgradCdfLogGumbel_ffv_164;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_165> AgradCdfLogGumbel_ffv_165;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_166> AgradCdfLogGumbel_ffv_166;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_167> AgradCdfLogGumbel_ffv_167;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_168> AgradCdfLogGumbel_ffv_168;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_169> AgradCdfLogGumbel_ffv_169;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_170> AgradCdfLogGumbel_ffv_170;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_171> AgradCdfLogGumbel_ffv_171;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_172> AgradCdfLogGumbel_ffv_172;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_173> AgradCdfLogGumbel_ffv_173;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_174> AgradCdfLogGumbel_ffv_174;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_175> AgradCdfLogGumbel_ffv_175;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_176> AgradCdfLogGumbel_ffv_176;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_177> AgradCdfLogGumbel_ffv_177;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_178> AgradCdfLogGumbel_ffv_178;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_179> AgradCdfLogGumbel_ffv_179;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_180> AgradCdfLogGumbel_ffv_180;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_181> AgradCdfLogGumbel_ffv_181;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_182> AgradCdfLogGumbel_ffv_182;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_183> AgradCdfLogGumbel_ffv_183;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_184> AgradCdfLogGumbel_ffv_184;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_185> AgradCdfLogGumbel_ffv_185;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_186> AgradCdfLogGumbel_ffv_186;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_187> AgradCdfLogGumbel_ffv_187;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_188> AgradCdfLogGumbel_ffv_188;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_189> AgradCdfLogGumbel_ffv_189;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_190> AgradCdfLogGumbel_ffv_190;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_191> AgradCdfLogGumbel_ffv_191;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_192> AgradCdfLogGumbel_ffv_192;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_193> AgradCdfLogGumbel_ffv_193;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_194> AgradCdfLogGumbel_ffv_194;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_195> AgradCdfLogGumbel_ffv_195;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_196> AgradCdfLogGumbel_ffv_196;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_197> AgradCdfLogGumbel_ffv_197;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_198> AgradCdfLogGumbel_ffv_198;
typedef boost::mpl::vector<AgradCdfLogGumbel, type_ffv_199> AgradCdfLogGumbel_ffv_199;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_0, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_0);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_1, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_1);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_2, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_2);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_3, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_3);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_4, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_4);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_5, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_5);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_6, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_6);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_7, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_7);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_8, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_8);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_9, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_9);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_10, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_10);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_11, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_11);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_12, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_12);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_13, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_13);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_14, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_14);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_15, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_15);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_16, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_16);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_17, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_17);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_18, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_18);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_19, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_19);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_20, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_20);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_21, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_21);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_22, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_22);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_23, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_23);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_24, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_24);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_25, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_25);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_26, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_26);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_27, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_27);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_28, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_28);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_29, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_29);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_30, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_30);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_31, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_31);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_32, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_32);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_33, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_33);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_34, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_34);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_35, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_35);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_36, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_36);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_37, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_37);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_38, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_38);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_39, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_39);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_40, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_40);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_41, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_41);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_42, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_42);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_43, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_43);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_44, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_44);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_45, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_45);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_46, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_46);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_47, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_47);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_48, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_48);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_49, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_49);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_50, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_50);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_51, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_51);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_52, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_52);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_53, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_53);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_54, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_54);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_55, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_55);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_56, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_56);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_57, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_57);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_58, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_58);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_59, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_59);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_60, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_60);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_61, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_61);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_62, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_62);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_63, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_63);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_64, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_64);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_65, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_65);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_66, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_66);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_67, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_67);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_68, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_68);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_69, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_69);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_70, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_70);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_71, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_71);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_72, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_72);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_73, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_73);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_74, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_74);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_75, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_75);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_76, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_76);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_77, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_77);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_78, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_78);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_79, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_79);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_80, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_80);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_81, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_81);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_82, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_82);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_83, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_83);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_84, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_84);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_85, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_85);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_86, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_86);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_87, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_87);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_88, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_88);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_89, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_89);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_90, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_90);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_91, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_91);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_92, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_92);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_93, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_93);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_94, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_94);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_95, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_95);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_96, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_96);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_97, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_97);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_98, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_98);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_99, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_99);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_100, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_100);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_101, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_101);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_102, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_102);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_103, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_103);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_104, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_104);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_105, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_105);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_106, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_106);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_107, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_107);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_108, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_108);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_109, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_109);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_110, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_110);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_111, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_111);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_112, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_112);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_113, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_113);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_114, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_114);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_115, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_115);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_116, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_116);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_117, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_117);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_118, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_118);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_119, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_119);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_120, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_120);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_121, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_121);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_122, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_122);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_123, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_123);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_124, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_124);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_125, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_125);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_126, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_126);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_127, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_127);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_128, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_128);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_129, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_129);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_130, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_130);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_131, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_131);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_132, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_132);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_133, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_133);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_134, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_134);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_135, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_135);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_136, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_136);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_137, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_137);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_138, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_138);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_139, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_139);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_140, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_140);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_141, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_141);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_142, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_142);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_143, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_143);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_144, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_144);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_145, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_145);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_146, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_146);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_147, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_147);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_148, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_148);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_149, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_149);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_150, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_150);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_151, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_151);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_152, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_152);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_153, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_153);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_154, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_154);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_155, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_155);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_156, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_156);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_157, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_157);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_158, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_158);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_159, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_159);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_160, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_160);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_161, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_161);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_162, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_162);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_163, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_163);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_164, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_164);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_165, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_165);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_166, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_166);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_167, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_167);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_168, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_168);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_169, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_169);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_170, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_170);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_171, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_171);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_172, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_172);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_173, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_173);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_174, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_174);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_175, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_175);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_176, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_176);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_177, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_177);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_178, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_178);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_179, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_179);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_180, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_180);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_181, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_181);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_182, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_182);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_183, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_183);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_184, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_184);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_185, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_185);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_186, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_186);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_187, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_187);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_188, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_188);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_189, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_189);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_190, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_190);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_191, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_191);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_192, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_192);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_193, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_193);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_194, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_194);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_195, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_195);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_196, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_196);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_197, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_197);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_198, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_198);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGumbel_ffv_199, AgradCdfLogTestFixture, AgradCdfLogGumbel_ffv_199);

