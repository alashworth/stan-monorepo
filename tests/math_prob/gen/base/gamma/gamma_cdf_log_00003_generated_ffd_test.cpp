#include <gtest/gtest.h>
#include <boost/mpl/vector.hpp>
#include <test_fixture_distr.hpp>
#include <test_fixture_cdf.hpp>
#include <test_fixture_cdf_log.hpp>
#include <test_fixture_ccdf_log.hpp>
#include <C:/Users/andre/source/repos/stan-playground/stan-monorepo/tests/math_prob/gamma/gamma_cdf_log_test.hpp>

typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_300;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_301;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_302;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_303;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_304;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_305;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_306;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_307;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_308;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_309;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_310;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_311;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_312;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_313;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_314;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_315;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_316;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_317;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_318;
typedef boost::mpl::vector<std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_319;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, double, empty, empty, empty> type_ffd_320;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<double>, empty, empty, empty> type_ffd_321;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_322;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_323;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_324;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_325;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_326;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_327;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, double, empty, empty, empty> type_ffd_328;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_329;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_330;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_331;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_332;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_333;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_334;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_335;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_336;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_337;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_338;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_339;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_340;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_341;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_342;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_343;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_344;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_345;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_346;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_347;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_348;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_349;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_350;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_351;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, double, empty, empty, empty> type_ffd_352;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<double>, empty, empty, empty> type_ffd_353;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_354;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_355;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, fvar<fvar<double> >, empty, empty, empty> type_ffd_356;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_357;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_358;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_359;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, double, empty, empty, empty> type_ffd_360;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<double>, empty, empty, empty> type_ffd_361;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_362;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_363;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, fvar<fvar<double> >, empty, empty, empty> type_ffd_364;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_365;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_366;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_367;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, double, empty, empty, empty> type_ffd_368;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<double>, empty, empty, empty> type_ffd_369;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_370;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_371;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, fvar<fvar<double> >, empty, empty, empty> type_ffd_372;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_373;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_374;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_375;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, empty, empty, empty> type_ffd_376;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, empty, empty, empty> type_ffd_377;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_378;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_379;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, fvar<fvar<double> >, empty, empty, empty> type_ffd_380;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_381;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_382;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_383;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, double, empty, empty, empty> type_ffd_384;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<double>, empty, empty, empty> type_ffd_385;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_386;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_387;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, fvar<fvar<double> >, empty, empty, empty> type_ffd_388;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_389;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_390;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, double, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_391;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, double, empty, empty, empty> type_ffd_392;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<double>, empty, empty, empty> type_ffd_393;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_394;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<double, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_395;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, fvar<fvar<double> >, empty, empty, empty> type_ffd_396;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, std::vector<fvar<fvar<double> >>, empty, empty, empty> type_ffd_397;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, Eigen::Dynamic, 1>, empty, empty, empty> type_ffd_398;
typedef boost::mpl::vector<Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, std::vector<double>, Eigen::Matrix<fvar<fvar<double> >, 1, Eigen::Dynamic>, empty, empty, empty> type_ffd_399;

typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_300> AgradCdfLogGamma_ffd_300;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_301> AgradCdfLogGamma_ffd_301;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_302> AgradCdfLogGamma_ffd_302;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_303> AgradCdfLogGamma_ffd_303;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_304> AgradCdfLogGamma_ffd_304;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_305> AgradCdfLogGamma_ffd_305;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_306> AgradCdfLogGamma_ffd_306;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_307> AgradCdfLogGamma_ffd_307;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_308> AgradCdfLogGamma_ffd_308;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_309> AgradCdfLogGamma_ffd_309;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_310> AgradCdfLogGamma_ffd_310;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_311> AgradCdfLogGamma_ffd_311;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_312> AgradCdfLogGamma_ffd_312;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_313> AgradCdfLogGamma_ffd_313;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_314> AgradCdfLogGamma_ffd_314;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_315> AgradCdfLogGamma_ffd_315;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_316> AgradCdfLogGamma_ffd_316;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_317> AgradCdfLogGamma_ffd_317;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_318> AgradCdfLogGamma_ffd_318;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_319> AgradCdfLogGamma_ffd_319;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_320> AgradCdfLogGamma_ffd_320;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_321> AgradCdfLogGamma_ffd_321;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_322> AgradCdfLogGamma_ffd_322;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_323> AgradCdfLogGamma_ffd_323;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_324> AgradCdfLogGamma_ffd_324;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_325> AgradCdfLogGamma_ffd_325;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_326> AgradCdfLogGamma_ffd_326;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_327> AgradCdfLogGamma_ffd_327;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_328> AgradCdfLogGamma_ffd_328;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_329> AgradCdfLogGamma_ffd_329;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_330> AgradCdfLogGamma_ffd_330;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_331> AgradCdfLogGamma_ffd_331;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_332> AgradCdfLogGamma_ffd_332;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_333> AgradCdfLogGamma_ffd_333;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_334> AgradCdfLogGamma_ffd_334;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_335> AgradCdfLogGamma_ffd_335;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_336> AgradCdfLogGamma_ffd_336;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_337> AgradCdfLogGamma_ffd_337;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_338> AgradCdfLogGamma_ffd_338;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_339> AgradCdfLogGamma_ffd_339;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_340> AgradCdfLogGamma_ffd_340;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_341> AgradCdfLogGamma_ffd_341;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_342> AgradCdfLogGamma_ffd_342;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_343> AgradCdfLogGamma_ffd_343;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_344> AgradCdfLogGamma_ffd_344;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_345> AgradCdfLogGamma_ffd_345;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_346> AgradCdfLogGamma_ffd_346;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_347> AgradCdfLogGamma_ffd_347;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_348> AgradCdfLogGamma_ffd_348;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_349> AgradCdfLogGamma_ffd_349;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_350> AgradCdfLogGamma_ffd_350;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_351> AgradCdfLogGamma_ffd_351;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_352> AgradCdfLogGamma_ffd_352;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_353> AgradCdfLogGamma_ffd_353;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_354> AgradCdfLogGamma_ffd_354;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_355> AgradCdfLogGamma_ffd_355;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_356> AgradCdfLogGamma_ffd_356;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_357> AgradCdfLogGamma_ffd_357;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_358> AgradCdfLogGamma_ffd_358;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_359> AgradCdfLogGamma_ffd_359;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_360> AgradCdfLogGamma_ffd_360;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_361> AgradCdfLogGamma_ffd_361;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_362> AgradCdfLogGamma_ffd_362;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_363> AgradCdfLogGamma_ffd_363;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_364> AgradCdfLogGamma_ffd_364;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_365> AgradCdfLogGamma_ffd_365;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_366> AgradCdfLogGamma_ffd_366;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_367> AgradCdfLogGamma_ffd_367;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_368> AgradCdfLogGamma_ffd_368;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_369> AgradCdfLogGamma_ffd_369;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_370> AgradCdfLogGamma_ffd_370;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_371> AgradCdfLogGamma_ffd_371;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_372> AgradCdfLogGamma_ffd_372;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_373> AgradCdfLogGamma_ffd_373;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_374> AgradCdfLogGamma_ffd_374;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_375> AgradCdfLogGamma_ffd_375;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_376> AgradCdfLogGamma_ffd_376;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_377> AgradCdfLogGamma_ffd_377;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_378> AgradCdfLogGamma_ffd_378;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_379> AgradCdfLogGamma_ffd_379;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_380> AgradCdfLogGamma_ffd_380;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_381> AgradCdfLogGamma_ffd_381;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_382> AgradCdfLogGamma_ffd_382;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_383> AgradCdfLogGamma_ffd_383;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_384> AgradCdfLogGamma_ffd_384;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_385> AgradCdfLogGamma_ffd_385;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_386> AgradCdfLogGamma_ffd_386;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_387> AgradCdfLogGamma_ffd_387;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_388> AgradCdfLogGamma_ffd_388;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_389> AgradCdfLogGamma_ffd_389;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_390> AgradCdfLogGamma_ffd_390;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_391> AgradCdfLogGamma_ffd_391;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_392> AgradCdfLogGamma_ffd_392;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_393> AgradCdfLogGamma_ffd_393;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_394> AgradCdfLogGamma_ffd_394;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_395> AgradCdfLogGamma_ffd_395;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_396> AgradCdfLogGamma_ffd_396;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_397> AgradCdfLogGamma_ffd_397;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_398> AgradCdfLogGamma_ffd_398;
typedef boost::mpl::vector<AgradCdfLogGamma, type_ffd_399> AgradCdfLogGamma_ffd_399;

INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_300, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_300);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_301, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_301);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_302, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_302);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_303, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_303);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_304, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_304);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_305, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_305);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_306, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_306);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_307, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_307);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_308, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_308);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_309, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_309);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_310, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_310);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_311, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_311);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_312, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_312);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_313, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_313);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_314, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_314);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_315, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_315);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_316, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_316);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_317, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_317);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_318, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_318);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_319, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_319);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_320, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_320);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_321, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_321);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_322, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_322);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_323, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_323);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_324, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_324);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_325, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_325);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_326, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_326);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_327, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_327);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_328, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_328);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_329, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_329);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_330, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_330);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_331, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_331);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_332, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_332);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_333, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_333);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_334, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_334);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_335, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_335);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_336, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_336);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_337, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_337);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_338, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_338);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_339, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_339);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_340, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_340);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_341, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_341);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_342, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_342);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_343, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_343);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_344, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_344);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_345, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_345);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_346, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_346);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_347, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_347);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_348, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_348);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_349, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_349);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_350, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_350);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_351, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_351);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_352, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_352);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_353, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_353);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_354, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_354);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_355, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_355);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_356, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_356);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_357, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_357);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_358, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_358);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_359, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_359);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_360, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_360);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_361, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_361);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_362, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_362);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_363, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_363);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_364, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_364);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_365, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_365);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_366, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_366);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_367, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_367);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_368, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_368);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_369, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_369);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_370, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_370);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_371, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_371);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_372, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_372);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_373, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_373);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_374, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_374);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_375, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_375);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_376, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_376);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_377, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_377);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_378, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_378);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_379, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_379);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_380, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_380);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_381, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_381);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_382, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_382);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_383, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_383);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_384, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_384);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_385, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_385);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_386, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_386);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_387, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_387);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_388, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_388);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_389, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_389);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_390, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_390);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_391, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_391);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_392, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_392);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_393, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_393);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_394, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_394);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_395, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_395);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_396, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_396);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_397, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_397);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_398, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_398);
INSTANTIATE_TYPED_TEST_CASE_P(AgradCdfLogGamma_ffd_399, AgradCdfLogTestFixture, AgradCdfLogGamma_ffd_399);

