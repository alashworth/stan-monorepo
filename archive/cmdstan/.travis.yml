language: cpp
sudo: false

before_script:
  - eval "${MATRIX_EVAL}"
  - echo ${CXX}
  - ${CXX} --version
  - echo "CXX=$CXX" > make/local
  - echo "CXXFLAGS+=$CXXFLAGS" >> make/local

linux_clang: &linux_clang
  os: linux
  compiler: "clang-3.8"
  addons:
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.8' ]
      packages: [ 'clang-3.8', 'libc++-dev' ]

linux_gcc: &linux_gcc
  os: linux
  compiler: "gcc-4.9"
  addons:
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-4.9' ]

mpi_linux_clang: &mpi_linux_clang
  os: linux
  compiler: "clang-3.8"
  addons: 
    apt:
      sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.8' ]
      packages: [ 'clang-3.8', 'libc++-dev', 'mpich', 'libmpich-dev' ]

mpi_linux_gcc: &mpi_linux_gcc
  os: linux
  compiler: "gcc-4.9"
  addons:
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-4.9', 'mpich', 'libmpich-dev' ]

before_install:
  - git submodule update --init --recursive

matrix:
  fast_finish: true
  include:
    - <<: *linux_clang
      env:
        - MATRIX_EVAL="CXX=clang++-3.8"
          CXXFLAGS="-stdlib=libc++"
          PARALLEL=2
    - <<: *linux_gcc
      env:
        - MATRIX_EVAL="CXX=g++-4.9"
          PARALLEL=1
    - <<: *mpi_linux_clang
      env:
        - MATRIX_EVAL="CXX=\"mpicxx -cxx=clang++-3.8\""
          CXXFLAGS="-stdlib=libc++"
          STAN_MPI=true
          PARALLEL=2
    - <<: *mpi_linux_gcc
      env:
        - MATRIX_EVAL="CXX=\"mpicxx -cxx=g++-4.9\""
          STAN_MPI=true
          PARALLEL=1

script:
  - git submodule foreach 'echo $path `git rev-parse HEAD`'
  - if [ ! -z ${STAN_MPI} ]; then echo "STAN_MPI=true" >> make/local; echo "Testing MPI"; fi
  - ./runCmdStanTests.py -j$PARALLEL src/test/interface
